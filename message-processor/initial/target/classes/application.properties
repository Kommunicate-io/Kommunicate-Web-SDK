# RABBIT (RabbitProperties)
# spring.rabbitmq.addresses= # Comma-separated list of addresses to which the client should connect.
#spring.rabbitmq.cache.channel.checkout-timeout= # Number of milliseconds to wait to obtain a channel if the cache size has been reached.
#spring.rabbitmq.cache.channel.size= # Number of channels to retain in the cache.
#spring.rabbitmq.cache.connection.mode=channel # Connection factory cache mode.
#spring.rabbitmq.cache.connection.size= # Number of connections to cache.
spring.rabbitmq.connection-timeout=120000
spring.rabbitmq.dynamic=true
# Create an AmqpAdmin bean.
spring.rabbitmq.host=apps-test.applozic.com
#172.31.16.80
# RabbitMQ host. tcp://172.31.16.80:1883
#spring.rabbitmq.listener.simple.acknowledge-mode= # Acknowledge mode of container.
#spring.rabbitmq.listener.simple.auto-startup=true # Start the container automatically on startup.
#spring.rabbitmq.listener.simple.concurrency= # Minimum number of consumers.
#spring.rabbitmq.listener.simple.default-requeue-rejected= # Whether or not to requeue delivery failures; default `true`.
#spring.rabbitmq.listener.simple.idle-event-interval= # How often idle container events should be published in milliseconds.
#spring.rabbitmq.listener.simple.max-concurrency= # Maximum number of consumers.
#spring.rabbitmq.listener.simple.prefetch= # Number of messages to be handled in a single request. It should be greater than or equal to the transaction size (if used).
spring.rabbitmq.listener.simple.retry.enabled=false 
# Whether or not publishing retries are enabled.
spring.rabbitmq.listener.simple.retry.initial-interval=1000 
# Interval between the first and second attempt to deliver a message.
spring.rabbitmq.listener.simple.retry.max-attempts=3 
# Maximum number of attempts to deliver a message.
spring.rabbitmq.listener.simple.retry.max-interval=10000 
# Maximum interval between attempts.
spring.rabbitmq.listener.simple.retry.multiplier=1.0 
# A multiplier to apply to the previous delivery retry interval.
spring.rabbitmq.listener.simple.retry.stateless=true 
# Whether or not retry is stateless or stateful.
# spring.rabbitmq.listener.simple.transaction-size= # Number of messages to be processed in a transaction. For best results it should be less than or equal to the prefetch count.
spring.rabbitmq.password=@ppl0zic
# Login to authenticate against the broker.
spring.rabbitmq.port=5672 
# RabbitMQ port.
spring.rabbitmq.publisher-confirms=false 
# Enable publisher confirms.
spring.rabbitmq.publisher-returns=false 
# Enable publisher returns.
#spring.rabbitmq.requested-heartbeat= # Requested heartbeat timeout, in seconds; zero for none.
#spring.rabbitmq.ssl.enabled=false # Enable SSL support.
#spring.rabbitmq.ssl.key-store= # Path to the key store that holds the SSL certificate.
#spring.rabbitmq.ssl.key-store-password= # Password used to access the key store.
#spring.rabbitmq.ssl.trust-store= # Trust store that holds SSL certificates.
#spring.rabbitmq.ssl.trust-store-password= # Password used to access the trust store.
#spring.rabbitmq.ssl.algorithm= # SSL algorithm to use. By default configure by the rabbit client library.
spring.rabbitmq.template.mandatory=false 
# Enable mandatory messages.
spring.rabbitmq.template.receive-timeout=0 
# Timeout for `receive()` methods.
spring.rabbitmq.template.reply-timeout=5000 
# Timeout for `sendAndReceive()` methods.
spring.rabbitmq.template.retry.enabled=false 
# Set to true to enable retries in the `RabbitTemplate`.
spring.rabbitmq.template.retry.initial-interval=1000 
# Interval between the first and second attempt to publish a message.
spring.rabbitmq.template.retry.max-attempts=3 
# Maximum number of attempts to publish a message.
spring.rabbitmq.template.retry.max-interval=10000 
# Maximum number of attempts to publish a message.
spring.rabbitmq.template.retry.multiplier=1.0 
# A multiplier to apply to the previous publishing retry interval.
spring.rabbitmq.username=applozic
# Login user to authenticate to the broker.
spring.rabbitmq.virtual-host=/
# Virtual host to use when connecting to the broker.
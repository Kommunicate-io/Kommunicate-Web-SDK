function MckCallingService(identity, token, callId, toUserDisplayName, isCallHost, callStartTime, mckMessageService, toUserImage, isAudioCall, ringTone) {
    var _this = this;
    var $mckVidImageIcon = $applozic("#mck-vid-icon");
    var $mckSideBox = $applozic("#mck-sidebox");
    _this.callStartTime = callStartTime;
    _this.mckMessageService = mckMessageService;
    _this.identity = identity;
    _this.token = token;
    _this.callId = callId;
    _this.isCallHost = isCallHost;
    _this.toUserImage = toUserImage;
    _this.toUserDisplayName = toUserDisplayName;
    _this.isAudioCall =
        isAudioCall;
    _this.disconectedByHost;
    _this.rejectedByReceiver;
    _this.twilioService;
    console.log("is AudioCall:" + isAudioCall);
    _this.ringTone = ringTone;
    var $mck_msg_to = $applozic("#mck-msg-to");
    var $mck_vid_box = $applozic(".applozic-vid-container");
    var $mck_side_box = $applozic("#mck-sidebox");
    var $mck_video_call_indicator = $applozic("#mck-video-call-indicator");
    var $mck_unmute_icon = $applozic("#mck-unmute-icon");
    var $mck_mute_icon = $applozic("#mck-mute-icon");
    var $mck_mute_btn = $applozic("#mck-microfone-mute-btn");
    $applozic("#mck-microfone-mute-btn").off("click").on("click", function () {
        var toUser = $mck_msg_to.val();
        var room = _this.twilioService.activeRoom;
        if (room) {
            var localMedia = room.localParticipant.media;
            if (localMedia.isMuted) {
                $mck_unmute_icon.addClass("vis").removeClass("n-vis");
                $mck_mute_icon.addClass("n-vis").removeClass("vis");
                $mck_mute_btn.addClass("mck-unmuted").removeClass("mck-muted");
                localMedia.unmute()
            } else {
                $mck_mute_icon.addClass("vis").removeClass("n-vis");
                $mck_unmute_icon.addClass("n-vis").removeClass("vis");
                $mck_mute_btn.addClass("mck-muted").removeClass("mck-unmuted");
                localMedia.mute()
            }
        }
    });
    $applozic("#mck-vid-disconnect").off("click").on("click", function () {
        var toUser = $mck_msg_to.val();
        if (isCallHost) {
            _this.disconectedByHost = true;
            if (_this.twilioService.callReceivedAt) {
                var callDurationInMilis = (new Date).getTime() - _this.twilioService.callReceivedAt.getTime();
                alMessageService.sendVideoCallEndMessage(callId, "CALL_END", 103, false, callDurationInMilis, toUser, function (messagePxy) {
                    mckMessageService.sendMessage(messagePxy)
                })
            } else {
                _this.ringTone.stop();
                alMessageService.sendVideoCallMessage(callId, "CALL_MISSED", 103, false, toUser, function (messagePxy) {
                    mckMessageService.sendMessage(messagePxy)
                })
            }
        }
        _this.twilioService.leaveRoomIfJoined();
        _this.removeTracks(["#mck-vid-media \x3e video", "#mck-vid-media \x3e audio", "#local-media \x3e video", "#local-media \x3e audio"]);
        $mck_vid_box.addClass("n-vis").removeClass("vis");
        $mck_video_call_indicator.addClass("n-vis").removeClass("vis")
    });
    _this.startVideoCall = function () {
        if (!navigator.webkitGetUserMedia && !navigator.mozGetUserMedia) alert("WebRTC is not available in your browser. can not start video call");
        if (!_this.token) {
            alert("missing token.. can not make video call");
            $mck_vid_box.removeClass("vis").addClass("n-vis")
        }
        _this.twilioService = new TwilioService(_this.identity, _this.token, _this.callId, _this.ringTone, _this.isAudioCall, _this.mckMessageService, _this.isCallHost);
        var videoClient = _this.twilioService.InitializeVideoClient();
        if (isCallHost) {
            $mckVidImageIcon.html(toUserImage + "\x3cspan\x3e Calling " + toUserDisplayName + "\x3c/span\x3e");
            $mckVidImageIcon.removeClass("n-vis").addClass("vis");
            setTimeout(function () {
                    if (!_this.twilioService.isCallReceived &&
                        !_this.disconectedByHost && !_this.rejectedByReceiver) {
                        console.log("call is not answered....");
                        _this.ringTone.stop();
                        alMessageService.sendVideoCallMessage(callId, "CALL_MISSED", 103, isAudioCall, toUser, function (messagePxy) {
                            mckMessageService.sendMessage(messagePxy)
                        });
                        alert(toUserDisplayName + " not Available....");
                        _this.twilioService.leaveRoomIfJoined();
                        _this.removeTracks(["#mck-vid-media \x3e video", "#mck-vid-media \x3e audio", "#local-media \x3e video", "#local-media \x3e audio"]);
                        $mck_vid_box.addClass("n-vis").removeClass("vis")
                    }
                },
                7E4)
        }
        window.addEventListener("beforeunload", _this.twilioService.leaveRoomIfJoined);
        _this.twilioService.attachUserMedia(isCallHost, isAudioCall);
        _this.twilioService.joinCall(isAudioCall);
        $mck_vid_box.removeClass("n-vis").addClass("vis");
        $mck_unmute_icon.addClass("vis").removeClass("n-vis");
        $mck_mute_icon.addClass("n-vis").removeClass("vis");
        $mck_mute_btn.addClass("mck-unmuted").removeClass("mck-muted")
    };
    _this.removeTracks = function (selectors) {
        $applozic.each(selectors, function (index, value) {
            $applozic(value).remove()
        })
    }
}

function TwilioService(identity, token, callId, ringTone, isAudioCall, mckMessageService, isCallHost) {
    var _this = this;
    _this.identity = identity;
    _this.token = token;
    _this.callId = callId;
    _this.videoClient;
    _this.activeRoom;
    _this.previewMedia;
    _this.ringTone = ringTone;
    _this.isCallReceived;
    _this.callReceivedAt;
    _this.isAudioCall = isAudioCall;
    _this.mckMessageService = mckMessageService;
    _this.isCallHost = isCallHost;
    var $mck_msg_to = $applozic("#mck-msg-to");
    var $mckVidImageIcon = $applozic("#mck-vid-icon");
    var localMedia = "#local-media";
    var mckVidMedia = "#mck-vid-media";
    var $mcklocalVideo = $applozic("#local-media \x3e video");
    var $mckRemoteVideo = $applozic("#mck-vid-media \x3e video");
    var $localMedia = $applozic("#local-media");
    var $mck_vid_box = $applozic(".applozic-vid-container");
    var $mck_side_box = $applozic("#mck-sidebox");
    var $mck_video_call_indicator = $applozic("#mck-video-call-indicator");
    _this.InitializeVideoClient = function () {
        _this.videoClient = new Twilio.Video.Client(_this.token)
    };
    _this.joinCall = function (isAudioCall) {
        if (_this.videoClient) _this.videoClient.connect({
            to: _this.callId
        }).then(_this.roomJoined,
            function (error) {
                console.log("Could not connect to Twilio: " + error.message)
            })
    };
    _this.attachUserMedia = function (isCallHost, isAudioCall) {
        if (!_this.previewMedia) {
            _this.previewMedia = new Twilio.Video.LocalMedia;
            Twilio.Video.getUserMedia().then(function (mediaStream) {
                _this.previewMedia.addStream(mediaStream);
                if (isCallHost) {
                    _this.previewMedia.attach(mckVidMedia);
                    _this.ringTone.play()
                } else {
                    _this.previewMedia.attach(localMedia);
                    $localMedia.removeClass("n-vis").addClass("vis")
                }
            }, function (error) {
                console.error("Unable to access local media",
                    error);
                console.log("Unable to access Camera and Microphone")
            })
        }
    };
    _this.roomJoined = function (room) {
        console.log("room detail : " + room);
        _this.activeRoom = room;
        if (!_this.previewMedia) room.localParticipant.media.attach(mckVidMedia);
        room.participants.forEach(function (participant) {
            console.log("Already in Room: '" + participant.identity + "'");
            participant.media.attach("#mck-vid-media")
        });
        room.on("participantConnected", function (participant) {
            console.log("participent- " + participant.identity + "connected to the room- " +
                room);
            _this.isCallReceived = true;
            _this.callReceivedAt = new Date;
            console.log("callReceivedAt : " + _this.callReceivedAt);
            _this.ringTone.stop();
            $mckVidImageIcon.addClass("n-vis");
            $applozic("#mck-vid-media \x3e video").remove();
            $applozic("#mck-vid-media \x3e audio").remove();
            room.localParticipant.media.attach(localMedia);
            $localMedia.removeClass("n-vis").addClass("vis");
            participant.media.attach(mckVidMedia)
        });
        room.on("participantDisconnected", function (participant) {
            console.log("Participant '" + participant.identity +
                "' left the room");
            if (_this.isCallHost) {
                var toUser = $mck_msg_to.val();
                var callDurationInMilis = (new Date).getTime();
                _this.callReceivedAt.getTime();
                alMessageService.sendVideoCallEndMessage(callId, "CALL_END", 103, isAudioCall, callDurationInMilis, toUser, function (messagePxy) {
                    mckMessageService.sendMessage(messagePxy)
                })
            }
            participant.media.detach();
            _this.leaveRoomIfJoined();
            $mck_vid_box.addClass("n-vis").removeClass("vis");
            $mck_video_call_indicator.addClass("n-vis").removeClass("vis")
        });
        room.on("disconnected",
            function () {
                console.log("Left");
                room.localParticipant.media.detach();
                room.participants.forEach(function (participant) {
                    participant.media.detach()
                });
                _this.activeRoom = null
            })
    };
    _this.leaveRoomIfJoined = function leaveRoomIfJoined() {
        if (_this.activeRoom) _this.activeRoom.disconnect();
        if (_this.previewMedia) _this.previewMedia.stop()
    }
}! function (t) {
    if ("object" == typeof exports && "undefined" != typeof module) module.exports = t();
    else if ("function" == typeof define && define.amd) define([], t);
    else {
        var e;
        "undefined" != typeof window ? e = window : "undefined" != typeof global ? e = global : "undefined" != typeof self && (e = self), e.SockJS = t()
    }
}(function () {
    var t;
    return function e(t, n, r) {
        function i(s, a) {
            if (!n[s]) {
                if (!t[s]) {
                    var u = "function" == typeof require && require;
                    if (!a && u) return u(s, !0);
                    if (o) return o(s, !0);
                    var c = new Error("Cannot find module '" + s + "'");
                    throw c.code =
                        "MODULE_NOT_FOUND", c;
                }
                var l = n[s] = {
                    exports: {}
                };
                t[s][0].call(l.exports, function (e) {
                    var n = t[s][1][e];
                    return i(n ? n : e)
                }, l, l.exports, e, t, n, r)
            }
            return n[s].exports
        }
        for (var o = "function" == typeof require && require, s = 0; s < r.length; s++) i(r[s]);
        return i
    }({
        1: [function (t, e) {
            (function (n) {
                var r = t("./transport-list");
                e.exports = t("./main")(r), "_sockjs_onload" in n && setTimeout(n._sockjs_onload, 1)
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {
            "./main": 14,
            "./transport-list": 16
        }],
        2: [function (t, e) {
            function n() {
                i.call(this), this.initEvent("close", !1, !1), this.wasClean = !1, this.code = 0, this.reason = ""
            }
            var r = t("inherits"),
                i = t("./event");
            r(n, i), e.exports = n
        }, {
            "./event": 4,
            inherits: 54
        }],
        3: [function (t, e) {
            function n() {
                i.call(this)
            }
            var r = t("inherits"),
                i = t("./eventtarget");
            r(n, i), n.prototype.removeAllListeners = function (t) {
                t ? delete this._listeners[t] : this._listeners = {}
            }, n.prototype.once = function (t, e) {
                function n() {
                    r.removeListener(t, n), i || (i = !0, e.apply(this, arguments))
                }
                var r = this,
                    i = !1;
                this.on(t, n)
            }, n.prototype.emit = function (t) {
                var e = this._listeners[t];
                if (e)
                    for (var n = Array.prototype.slice.call(arguments, 1), r = 0; r < e.length; r++) e[r].apply(this, n)
            }, n.prototype.on = n.prototype.addListener = i.prototype.addEventListener, n.prototype.removeListener = i.prototype.removeEventListener, e.exports.EventEmitter = n
        }, {
            "./eventtarget": 5,
            inherits: 54
        }],
        4: [function (t, e) {
            function n(t) {
                this.type = t
            }
            n.prototype.initEvent = function (t, e, n) {
                return this.type = t, this.bubbles = e, this.cancelable = n, this.timeStamp = +new Date, this
            }, n.prototype.stopPropagation = function () {}, n.prototype.preventDefault = function () {}, n.CAPTURING_PHASE = 1, n.AT_TARGET = 2, n.BUBBLING_PHASE = 3, e.exports = n
        }, {}],
        5: [function (t, e) {
            function n() {
                this._listeners = {}
            }
            n.prototype.addEventListener = function (t, e) {
                t in this._listeners || (this._listeners[t] = []);
                var n = this._listeners[t]; - 1 === n.indexOf(e) && (n = n.concat([e])), this._listeners[t] = n
            }, n.prototype.removeEventListener = function (t, e) {
                var n = this._listeners[t];
                if (n) {
                    var r = n.indexOf(e);
                    return -1 !== r ? void(n.length >
                        1 ? this._listeners[t] = n.slice(0, r).concat(n.slice(r + 1)) : delete this._listeners[t]) : void 0
                }
            }, n.prototype.dispatchEvent = function (t) {
                var e = t.type,
                    n = Array.prototype.slice.call(arguments, 0);
                if (this["on" + e] && this["on" + e].apply(this, n), e in this._listeners)
                    for (var r = this._listeners[e], i = 0; i < r.length; i++) r[i].apply(this, n)
            }, e.exports = n
        }, {}],
        6: [function (t, e) {
            function n(t) {
                i.call(this), this.initEvent("message", !1, !1), this.data = t
            }
            var r = t("inherits"),
                i = t("./event");
            r(n, i), e.exports = n
        }, {
            "./event": 4,
            inherits: 54
        }],
        7: [function (t, e) {
            function n(t) {
                this._transport = t, t.on("message", this._transportMessage.bind(this)), t.on("close", this._transportClose.bind(this))
            }
            var r = t("json3"),
                i = t("./utils/iframe");
            n.prototype._transportClose = function (t, e) {
                i.postMessage("c", r.stringify([t, e]))
            }, n.prototype._transportMessage = function (t) {
                i.postMessage("t", t)
            }, n.prototype._send = function (t) {
                this._transport.send(t)
            }, n.prototype._close = function () {
                this._transport.close(), this._transport.removeAllListeners()
            }, e.exports = n
        }, {
            "./utils/iframe": 47,
            json3: 55
        }],
        8: [function (t, e) {
            var n = t("./utils/url"),
                r = t("./utils/event"),
                i = t("json3"),
                o = t("./facade"),
                s = t("./info-iframe-receiver"),
                a = t("./utils/iframe"),
                u = t("./location");
            e.exports = function (t, e) {
                var c = {};
                e.forEach(function (t) {
                    t.facadeTransport && (c[t.facadeTransport.transportName] = t.facadeTransport)
                }), c[s.transportName] = s;
                var l;
                t.bootstrap_iframe = function () {
                    var e;
                    a.currentWindowId = u.hash.slice(1);
                    var s = function (r) {
                        if (r.source === parent && ("undefined" == typeof l && (l = r.origin), r.origin === l)) {
                            var s;
                            try {
                                s =
                                    i.parse(r.data)
                            } catch (f) {
                                return
                            }
                            if (s.windowId === a.currentWindowId) switch (s.type) {
                                case "s":
                                    var h;
                                    try {
                                        h = i.parse(s.data)
                                    } catch (f) {
                                        break
                                    }
                                    var d = h[0],
                                        p = h[1],
                                        v = h[2],
                                        m = h[3];
                                    if (d !== t.version) throw new Error('Incompatibile SockJS! Main site uses: "' + d + '", the iframe: "' + t.version + '".');
                                    if (!n.isOriginEqual(v, u.href) || !n.isOriginEqual(m, u.href)) throw new Error("Can't connect to different domain from within an iframe. (" + u.href + ", " + v + ", " + m + ")");
                                    e = new o(new c[p](v, m));
                                    break;
                                case "m":
                                    e._send(s.data);
                                    break;
                                case "c":
                                    e &&
                                        e._close(), e = null
                            }
                        }
                    };
                    r.attachEvent("message", s), a.postMessage("s")
                }
            }
        }, {
            "./facade": 7,
            "./info-iframe-receiver": 10,
            "./location": 13,
            "./utils/event": 46,
            "./utils/iframe": 47,
            "./utils/url": 52,
            debug: void 0,
            json3: 55
        }],
        9: [function (t, e) {
            function n(t, e) {
                r.call(this);
                var n = this,
                    i = +new Date;
                this.xo = new e("GET", t), this.xo.once("finish", function (t, e) {
                    var r, a;
                    if (200 === t) {
                        if (a = +new Date - i, e) try {
                            r = o.parse(e)
                        } catch (u) {}
                        s.isObject(r) || (r = {})
                    }
                    n.emit("finish", r, a), n.removeAllListeners()
                })
            }
            var r = t("events").EventEmitter,
                i = t("inherits"),
                o = t("json3"),
                s = t("./utils/object");
            i(n, r), n.prototype.close = function () {
                this.removeAllListeners(), this.xo.close()
            }, e.exports = n
        }, {
            "./utils/object": 49,
            debug: void 0,
            events: 3,
            inherits: 54,
            json3: 55
        }],
        10: [function (t, e) {
            function n(t) {
                var e = this;
                i.call(this), this.ir = new a(t, s), this.ir.once("finish", function (t, n) {
                    e.ir = null, e.emit("message", o.stringify([t, n]))
                })
            }
            var r = t("inherits"),
                i = t("events").EventEmitter,
                o = t("json3"),
                s = t("./transport/sender/xhr-local"),
                a = t("./info-ajax");
            r(n, i), n.transportName =
                "iframe-info-receiver", n.prototype.close = function () {
                    this.ir && (this.ir.close(), this.ir = null), this.removeAllListeners()
                }, e.exports = n
        }, {
            "./info-ajax": 9,
            "./transport/sender/xhr-local": 37,
            events: 3,
            inherits: 54,
            json3: 55
        }],
        11: [function (t, e) {
            (function (n) {
                function r(t, e) {
                    var r = this;
                    i.call(this);
                    var o = function () {
                        var n = r.ifr = new u(c.transportName, e, t);
                        n.once("message", function (t) {
                            if (t) {
                                var e;
                                try {
                                    e = s.parse(t)
                                } catch (n) {
                                    return r.emit("finish"), void r.close()
                                }
                                var i = e[0],
                                    o = e[1];
                                r.emit("finish", i, o)
                            }
                            r.close()
                        }), n.once("close",
                            function () {
                                r.emit("finish"), r.close()
                            })
                    };
                    n.document.body ? o() : a.attachEvent("load", o)
                }
                var i = t("events").EventEmitter,
                    o = t("inherits"),
                    s = t("json3"),
                    a = t("./utils/event"),
                    u = t("./transport/iframe"),
                    c = t("./info-iframe-receiver");
                o(r, i), r.enabled = function () {
                    return u.enabled()
                }, r.prototype.close = function () {
                    this.ifr && this.ifr.close(), this.removeAllListeners(), this.ifr = null
                }, e.exports = r
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {
            "./info-iframe-receiver": 10,
            "./transport/iframe": 22,
            "./utils/event": 46,
            debug: void 0,
            events: 3,
            inherits: 54,
            json3: 55
        }],
        12: [function (t, e) {
            function n(t, e) {
                var n = this;
                r.call(this), setTimeout(function () {
                    n.doXhr(t, e)
                }, 0)
            }
            var r = t("events").EventEmitter,
                i = t("inherits"),
                o = t("./utils/url"),
                s = t("./transport/sender/xdr"),
                a = t("./transport/sender/xhr-cors"),
                u = t("./transport/sender/xhr-local"),
                c = t("./transport/sender/xhr-fake"),
                l = t("./info-iframe"),
                f = t("./info-ajax");
            i(n, r), n._getReceiver = function (t, e, n) {
                return n.sameOrigin ? new f(e, u) : a.enabled ?
                    new f(e, a) : s.enabled && n.sameScheme ? new f(e, s) : l.enabled() ? new l(t, e) : new f(e, c)
            }, n.prototype.doXhr = function (t, e) {
                var r = this,
                    i = o.addPath(t, "/info");
                this.xo = n._getReceiver(t, i, e), this.timeoutRef = setTimeout(function () {
                    r._cleanup(!1), r.emit("finish")
                }, n.timeout), this.xo.once("finish", function (t, e) {
                    r._cleanup(!0), r.emit("finish", t, e)
                })
            }, n.prototype._cleanup = function (t) {
                clearTimeout(this.timeoutRef), this.timeoutRef = null, !t && this.xo && this.xo.close(), this.xo = null
            }, n.prototype.close = function () {
                this.removeAllListeners(),
                    this._cleanup(!1)
            }, n.timeout = 8E3, e.exports = n
        }, {
            "./info-ajax": 9,
            "./info-iframe": 11,
            "./transport/sender/xdr": 34,
            "./transport/sender/xhr-cors": 35,
            "./transport/sender/xhr-fake": 36,
            "./transport/sender/xhr-local": 37,
            "./utils/url": 52,
            debug: void 0,
            events: 3,
            inherits: 54
        }],
        13: [function (t, e) {
            (function (t) {
                e.exports = t.location || {
                    origin: "http://localhost:80",
                    protocol: "http",
                    host: "localhost",
                    port: 80,
                    href: "http://localhost/",
                    hash: ""
                }
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" !=
                typeof window ? window : {})
        }, {}],
        14: [function (t, e) {
            (function (n) {
                function r(t, e, n) {
                    if (!(this instanceof r)) return new r(t, e, n);
                    if (arguments.length < 1) throw new TypeError("Failed to construct 'SockJS: 1 argument required, but only 0 present");
                    y.call(this), this.readyState = r.CONNECTING, this.extensions = "", this.protocol = "", n = n || {}, n.protocols_whitelist && m.warn("'protocols_whitelist' is DEPRECATED. Use 'transports' instead."), this._transportsWhitelist = n.transports;
                    var i = n.sessionId || 8;
                    if ("function" == typeof i) this._generateSessionId =
                        i;
                    else {
                        if ("number" != typeof i) throw new TypeError("If sessionId is used in the options, it needs to be a number or a function.");
                        this._generateSessionId = function () {
                            return c.string(i)
                        }
                    }
                    this._server = n.server || c.numberString(1E3);
                    var o = new s(t);
                    if (!o.host || !o.protocol) throw new SyntaxError("The URL '" + t + "' is invalid");
                    if (o.hash) throw new SyntaxError("The URL must not contain a fragment");
                    if ("http:" !== o.protocol && "https:" !== o.protocol) throw new SyntaxError("The URL's scheme must be either 'http:' or 'https:'. '" +
                        o.protocol + "' is not allowed.");
                    var a = "https:" === o.protocol;
                    if ("https" === g.protocol && !a) throw new Error("SecurityError: An insecure SockJS connection may not be initiated from a page loaded over HTTPS");
                    e ? Array.isArray(e) || (e = [e]) : e = [];
                    var u = e.sort();
                    u.forEach(function (t, e) {
                        if (!t) throw new SyntaxError("The protocols entry '" + t + "' is invalid.");
                        if (e < u.length - 1 && t === u[e + 1]) throw new SyntaxError("The protocols entry '" + t + "' is duplicated.");
                    });
                    var l = f.getOrigin(g.href);
                    this._origin = l ? l.toLowerCase() :
                        null, o.set("pathname", o.pathname.replace(/\/+$/, "")), this.url = o.href, this._urlInfo = {
                            nullOrigin: !v.hasDomain(),
                            sameOrigin: f.isOriginEqual(this.url, g.href),
                            sameScheme: f.isSchemeEqual(this.url, g.href)
                        }, this._ir = new _(this.url, this._urlInfo), this._ir.once("finish", this._receiveInfo.bind(this))
                }

                function i(t) {
                    return 1E3 === t || t >= 3E3 && 4999 >= t
                }
                t("./shims");
                var o, s = t("url-parse"),
                    a = t("inherits"),
                    u = t("json3"),
                    c = t("./utils/random"),
                    l = t("./utils/escape"),
                    f = t("./utils/url"),
                    h = t("./utils/event"),
                    d = t("./utils/transport"),
                    p = t("./utils/object"),
                    v = t("./utils/browser"),
                    m = t("./utils/log"),
                    b = t("./event/event"),
                    y = t("./event/eventtarget"),
                    g = t("./location"),
                    w = t("./event/close"),
                    x = t("./event/trans-message"),
                    _ = t("./info-receiver");
                a(r, y), r.prototype.close = function (t, e) {
                        if (t && !i(t)) throw new Error("InvalidAccessError: Invalid code");
                        if (e && e.length > 123) throw new SyntaxError("reason argument has an invalid length");
                        if (this.readyState !== r.CLOSING && this.readyState !== r.CLOSED) {
                            var n = !0;
                            this._close(t || 1E3, e || "Normal closure", n)
                        }
                    },
                    r.prototype.send = function (t) {
                        if ("string" != typeof t && (t = "" + t), this.readyState === r.CONNECTING) throw new Error("InvalidStateError: The connection has not been established yet");
                        this.readyState === r.OPEN && this._transport.send(l.quote(t))
                    }, r.version = t("./version"), r.CONNECTING = 0, r.OPEN = 1, r.CLOSING = 2, r.CLOSED = 3, r.prototype._receiveInfo = function (t, e) {
                        if (this._ir = null, !t) return void this._close(1002, "Cannot connect to server");
                        this._rto = this.countRTO(e), this._transUrl = t.base_url ? t.base_url : this.url, t = p.extend(t,
                            this._urlInfo);
                        var n = o.filterToEnabled(this._transportsWhitelist, t);
                        this._transports = n.main, this._connect()
                    }, r.prototype._connect = function () {
                        for (var t = this._transports.shift(); t; t = this._transports.shift()) {
                            if (t.needBody && (!n.document.body || "undefined" != typeof n.document.readyState && "complete" !== n.document.readyState && "interactive" !== n.document.readyState)) return this._transports.unshift(t), void h.attachEvent("load", this._connect.bind(this));
                            var e = this._rto * t.roundTrips || 5E3;
                            this._transportTimeoutId =
                                setTimeout(this._transportTimeout.bind(this), e);
                            var r = f.addPath(this._transUrl, "/" + this._server + "/" + this._generateSessionId()),
                                i = new t(r, this._transUrl);
                            return i.on("message", this._transportMessage.bind(this)), i.once("close", this._transportClose.bind(this)), i.transportName = t.transportName, void(this._transport = i)
                        }
                        this._close(2E3, "All transports failed", !1)
                    }, r.prototype._transportTimeout = function () {
                        this.readyState === r.CONNECTING && this._transportClose(2007, "Transport timed out")
                    }, r.prototype._transportMessage =
                    function (t) {
                        var e, n = this,
                            r = t.slice(0, 1),
                            i = t.slice(1);
                        switch (r) {
                            case "o":
                                return void this._open();
                            case "h":
                                return void this.dispatchEvent(new b("heartbeat"))
                        }
                        if (i) try {
                            e = u.parse(i)
                        } catch (o) {}
                        if ("undefined" != typeof e) switch (r) {
                            case "a":
                                Array.isArray(e) && e.forEach(function (t) {
                                    n.dispatchEvent(new x(t))
                                });
                                break;
                            case "m":
                                this.dispatchEvent(new x(e));
                                break;
                            case "c":
                                Array.isArray(e) && 2 === e.length && this._close(e[0], e[1], !0)
                        }
                    }, r.prototype._transportClose = function (t, e) {
                        return this._transport && (this._transport.removeAllListeners(),
                            this._transport = null, this.transport = null), i(t) || 2E3 === t || this.readyState !== r.CONNECTING ? void this._close(t, e) : void this._connect()
                    }, r.prototype._open = function () {
                        this.readyState === r.CONNECTING ? (this._transportTimeoutId && (clearTimeout(this._transportTimeoutId), this._transportTimeoutId = null), this.readyState = r.OPEN, this.transport = this._transport.transportName, this.dispatchEvent(new b("open"))) : this._close(1006, "Server lost session")
                    }, r.prototype._close = function (t, e, n) {
                        var i = !1;
                        if (this._ir && (i = !0, this._ir.close(),
                                this._ir = null), this._transport && (this._transport.close(), this._transport = null, this.transport = null), this.readyState === r.CLOSED) throw new Error("InvalidStateError: SockJS has already been closed");
                        this.readyState = r.CLOSING, setTimeout(function () {
                            this.readyState = r.CLOSED, i && this.dispatchEvent(new b("error"));
                            var o = new w("close");
                            o.wasClean = n || !1, o.code = t || 1E3, o.reason = e, this.dispatchEvent(o), this.onmessage = this.onclose = this.onerror = null
                        }.bind(this), 0)
                    }, r.prototype.countRTO = function (t) {
                        return t > 100 ? 4 *
                            t : 300 + t
                    }, e.exports = function (e) {
                        return o = d(e), t("./iframe-bootstrap")(r, e), r
                    }
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {
            "./event/close": 2,
            "./event/event": 4,
            "./event/eventtarget": 5,
            "./event/trans-message": 6,
            "./iframe-bootstrap": 8,
            "./info-receiver": 12,
            "./location": 13,
            "./shims": 15,
            "./utils/browser": 44,
            "./utils/escape": 45,
            "./utils/event": 46,
            "./utils/log": 48,
            "./utils/object": 49,
            "./utils/random": 50,
            "./utils/transport": 51,
            "./utils/url": 52,
            "./version": 53,
            debug: void 0,
            inherits: 54,
            json3: 55,
            "url-parse": 56
        }],
        15: [function () {
            function t(t) {
                var e = +t;
                return e !== e ? e = 0 : 0 !== e && e !== 1 / 0 && e !== -(1 / 0) && (e = (e > 0 || -1) * Math.floor(Math.abs(e))), e
            }

            function e(t) {
                return t >>> 0
            }

            function n() {}
            var r, i = Array.prototype,
                o = Object.prototype,
                s = Function.prototype,
                a = String.prototype,
                u = i.slice,
                c = o.toString,
                l = function (t) {
                    return "[object Function]" === o.toString.call(t)
                },
                f = function (t) {
                    return "[object Array]" === c.call(t)
                },
                h = function (t) {
                    return "[object String]" === c.call(t)
                },
                d =
                Object.defineProperty && function () {
                    try {
                        return Object.defineProperty({}, "x", {}), !0
                    } catch (t) {
                        return !1
                    }
                }();
            r = d ? function (t, e, n, r) {
                !r && e in t || Object.defineProperty(t, e, {
                    configurable: !0,
                    enumerable: !1,
                    writable: !0,
                    value: n
                })
            } : function (t, e, n, r) {
                !r && e in t || (t[e] = n)
            };
            var p = function (t, e, n) {
                    for (var i in e) o.hasOwnProperty.call(e, i) && r(t, i, e[i], n)
                },
                v = function (t) {
                    if (null == t) throw new TypeError("can't convert " + t + " to object");
                    return Object(t)
                };
            p(s, {
                bind: function (t) {
                    var e = this;
                    if (!l(e)) throw new TypeError("Function.prototype.bind called on incompatible " +
                        e);
                    for (var r = u.call(arguments, 1), i = function () {
                            if (this instanceof c) {
                                var n = e.apply(this, r.concat(u.call(arguments)));
                                return Object(n) === n ? n : this
                            }
                            return e.apply(t, r.concat(u.call(arguments)))
                        }, o = Math.max(0, e.length - r.length), s = [], a = 0; o > a; a++) s.push("$" + a);
                    var c = Function("binder", "return function (" + s.join(",") + "){ return binder.apply(this, arguments); }")(i);
                    return e.prototype && (n.prototype = e.prototype, c.prototype = new n, n.prototype = null), c
                }
            }), p(Array, {
                isArray: f
            });
            var m = Object("a"),
                b = "a" !== m[0] || !(0 in
                    m),
                y = function (t) {
                    var e = !0,
                        n = !0;
                    return t && (t.call("foo", function (t, n, r) {
                        "object" != typeof r && (e = !1)
                    }), t.call([1], function () {
                        n = "string" == typeof this
                    }, "x")), !!t && e && n
                };
            p(i, {
                forEach: function (t) {
                    var e = v(this),
                        n = b && h(this) ? this.split("") : e,
                        r = arguments[1],
                        i = -1,
                        o = n.length >>> 0;
                    if (!l(t)) throw new TypeError;
                    for (; ++i < o;) i in n && t.call(r, n[i], i, e)
                }
            }, !y(i.forEach));
            var g = Array.prototype.indexOf && -1 !== [0, 1].indexOf(1, 2);
            p(i, {
                indexOf: function (e) {
                    var n = b && h(this) ? this.split("") : v(this),
                        r = n.length >>> 0;
                    if (!r) return -1;
                    var i = 0;
                    for (arguments.length > 1 && (i = t(arguments[1])), i = i >= 0 ? i : Math.max(0, r + i); r > i; i++)
                        if (i in n && n[i] === e) return i;
                    return -1
                }
            }, g);
            var w = a.split;
            2 !== "ab".split(/(?:ab)*/).length || 4 !== ".".split(/(.?)(.?)/).length || "t" === "tesst".split(/(s)*/)[1] || 4 !== "test".split(/(?:)/, -1).length || "".split(/.?/).length || ".".split(/()()/).length > 1 ? ! function () {
                var t = void 0 === /()??/.exec("")[1];
                a.split = function (n, r) {
                    var o = this;
                    if (void 0 === n && 0 === r) return [];
                    if ("[object RegExp]" !== c.call(n)) return w.call(this, n, r);
                    var s, a,
                        u, l, f = [],
                        h = (n.ignoreCase ? "i" : "") + (n.multiline ? "m" : "") + (n.extended ? "x" : "") + (n.sticky ? "y" : ""),
                        d = 0;
                    for (n = new RegExp(n.source, h + "g"), o += "", t || (s = new RegExp("^" + n.source + "$(?!\\s)", h)), r = void 0 === r ? -1 >>> 0 : e(r);
                        (a = n.exec(o)) && (u = a.index + a[0].length, !(u > d && (f.push(o.slice(d, a.index)), !t && a.length > 1 && a[0].replace(s, function () {
                            for (var t = 1; t < arguments.length - 2; t++) void 0 === arguments[t] && (a[t] = void 0)
                        }), a.length > 1 && a.index < o.length && i.push.apply(f, a.slice(1)), l = a[0].length, d = u, f.length >= r)));) n.lastIndex ===
                        a.index && n.lastIndex++;
                    return d === o.length ? (l || !n.test("")) && f.push("") : f.push(o.slice(d)), f.length > r ? f.slice(0, r) : f
                }
            }() : "0".split(void 0, 0).length && (a.split = function (t, e) {
                return void 0 === t && 0 === e ? [] : w.call(this, t, e)
            });
            var x = "\t\n\x0B\f\r \u00a0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029\ufeff",
                _ = "\u200b",
                E = "[" + x + "]",
                S = new RegExp("^" + E + E + "*"),
                O = new RegExp(E + E + "*$"),
                T = a.trim && (x.trim() || !_.trim());
            p(a, {
                trim: function () {
                    if (void 0 === this ||
                        null === this) throw new TypeError("can't convert " + this + " to object");
                    return String(this).replace(S, "").replace(O, "")
                }
            }, T);
            var j = a.substr,
                C = "".substr && "b" !== "0b".substr(-1);
            p(a, {
                substr: function (t, e) {
                    return j.call(this, 0 > t && (t = this.length + t) < 0 ? 0 : t, e)
                }
            }, C)
        }, {}],
        16: [function (t, e) {
            e.exports = [t("./transport/websocket"), t("./transport/xhr-streaming"), t("./transport/xdr-streaming"), t("./transport/eventsource"), t("./transport/lib/iframe-wrap")(t("./transport/eventsource")), t("./transport/htmlfile"), t("./transport/lib/iframe-wrap")(t("./transport/htmlfile")),
                t("./transport/xhr-polling"), t("./transport/xdr-polling"), t("./transport/lib/iframe-wrap")(t("./transport/xhr-polling")), t("./transport/jsonp-polling")
            ]
        }, {
            "./transport/eventsource": 20,
            "./transport/htmlfile": 21,
            "./transport/jsonp-polling": 23,
            "./transport/lib/iframe-wrap": 26,
            "./transport/websocket": 38,
            "./transport/xdr-polling": 39,
            "./transport/xdr-streaming": 40,
            "./transport/xhr-polling": 41,
            "./transport/xhr-streaming": 42
        }],
        17: [function (t, e) {
            (function (n) {
                function r(t, e, n, r) {
                    var o = this;
                    i.call(this), setTimeout(function () {
                        o._start(t,
                            e, n, r)
                    }, 0)
                }
                var i = t("events").EventEmitter,
                    o = t("inherits"),
                    s = t("../../utils/event"),
                    a = t("../../utils/url"),
                    u = n.XMLHttpRequest;
                o(r, i), r.prototype._start = function (t, e, n, i) {
                    var o = this;
                    try {
                        this.xhr = new u
                    } catch (c) {}
                    if (!this.xhr) return this.emit("finish", 0, "no xhr support"), void this._cleanup();
                    e = a.addQuery(e, "t\x3d" + +new Date), this.unloadRef = s.unloadAdd(function () {
                        o._cleanup(!0)
                    });
                    try {
                        this.xhr.open(t, e, !0), this.timeout && "timeout" in this.xhr && (this.xhr.timeout = this.timeout, this.xhr.ontimeout = function () {
                            o.emit("finish",
                                0, ""), o._cleanup(!1)
                        })
                    } catch (l) {
                        return this.emit("finish", 0, ""), void this._cleanup(!1)
                    }
                    if (i && i.noCredentials || !r.supportsCORS || (this.xhr.withCredentials = "true"), i && i.headers)
                        for (var f in i.headers) this.xhr.setRequestHeader(f, i.headers[f]);
                    this.xhr.onreadystatechange = function () {
                        if (o.xhr) {
                            var t, e, n = o.xhr;
                            switch (n.readyState) {
                                case 3:
                                    try {
                                        e = n.status, t = n.responseText
                                    } catch (r) {}
                                    1223 === e && (e = 204), 200 === e && t && t.length > 0 && o.emit("chunk", e, t);
                                    break;
                                case 4:
                                    e = n.status, 1223 === e && (e = 204), (12005 === e || 12029 === e) &&
                                        (e = 0), o.emit("finish", e, n.responseText), o._cleanup(!1)
                            }
                        }
                    };
                    try {
                        o.xhr.send(n)
                    } catch (l) {
                        o.emit("finish", 0, ""), o._cleanup(!1)
                    }
                }, r.prototype._cleanup = function (t) {
                    if (this.xhr) {
                        if (this.removeAllListeners(), s.unloadDel(this.unloadRef), this.xhr.onreadystatechange = function () {}, this.xhr.ontimeout && (this.xhr.ontimeout = null), t) try {
                            this.xhr.abort()
                        } catch (e) {}
                        this.unloadRef = this.xhr = null
                    }
                }, r.prototype.close = function () {
                    this._cleanup(!0)
                }, r.enabled = !!u;
                var c = ["Active"].concat("Object").join("X");
                !r.enabled && c in n &&
                    (u = function () {
                        try {
                            return new n[c]("Microsoft.XMLHTTP")
                        } catch (t) {
                            return null
                        }
                    }, r.enabled = !!new u);
                var l = !1;
                try {
                    l = "withCredentials" in new u
                } catch (f) {}
                r.supportsCORS = l, e.exports = r
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {
            "../../utils/event": 46,
            "../../utils/url": 52,
            debug: void 0,
            events: 3,
            inherits: 54
        }],
        18: [function (t, e) {
            (function (t) {
                e.exports = t.EventSource
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self :
                "undefined" != typeof window ? window : {})
        }, {}],
        19: [function (t, e) {
            (function (t) {
                e.exports = t.WebSocket || t.MozWebSocket
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {}],
        20: [function (t, e) {
            function n(t) {
                if (!n.enabled()) throw new Error("Transport created when disabled");
                i.call(this, t, "/eventsource", o, s)
            }
            var r = t("inherits"),
                i = t("./lib/ajax-based"),
                o = t("./receiver/eventsource"),
                s = t("./sender/xhr-cors"),
                a = t("eventsource");
            r(n, i), n.enabled = function () {
                    return !!a
                },
                n.transportName = "eventsource", n.roundTrips = 2, e.exports = n
        }, {
            "./lib/ajax-based": 24,
            "./receiver/eventsource": 29,
            "./sender/xhr-cors": 35,
            eventsource: 18,
            inherits: 54
        }],
        21: [function (t, e) {
                function n(t) {
                    if (!i.enabled) throw new Error("Transport created when disabled");
                    s.call(this, t, "/htmlfile", i, o)
                }
                var r = t("inherits"),
                    i = t("./receiver/htmlfile"),
                    o = t("./sender/xhr-local"),
                    s = t("./lib/ajax-based");
                r(n, s), n.enabled = function (t) {
                    return i.enabled && t.sameOrigin
                }, n.transportName = "htmlfile", n.roundTrips = 2, e.exports = n
            },
            {
                "./lib/ajax-based": 24,
                "./receiver/htmlfile": 30,
                "./sender/xhr-local": 37,
                inherits: 54
            }
        ],
        22: [function (t, e) {
            function n(t, e, r) {
                if (!n.enabled()) throw new Error("Transport created when disabled");
                o.call(this);
                var i = this;
                this.origin = a.getOrigin(r), this.baseUrl = r, this.transUrl = e, this.transport = t, this.windowId = l.string(8);
                var s = a.addPath(r, "/iframe.html") + "#" + this.windowId;
                this.iframeObj = u.createIframe(s, function (t) {
                        i.emit("close", 1006, "Unable to load an iframe (" + t + ")"), i.close()
                    }), this.onmessageCallback =
                    this._message.bind(this), c.attachEvent("message", this.onmessageCallback)
            }
            var r = t("inherits"),
                i = t("json3"),
                o = t("events").EventEmitter,
                s = t("../version"),
                a = t("../utils/url"),
                u = t("../utils/iframe"),
                c = t("../utils/event"),
                l = t("../utils/random");
            r(n, o), n.prototype.close = function () {
                    if (this.removeAllListeners(), this.iframeObj) {
                        c.detachEvent("message", this.onmessageCallback);
                        try {
                            this.postMessage("c")
                        } catch (t) {}
                        this.iframeObj.cleanup(), this.iframeObj = null, this.onmessageCallback = this.iframeObj = null
                    }
                }, n.prototype._message =
                function (t) {
                    if (a.isOriginEqual(t.origin, this.origin)) {
                        var e;
                        try {
                            e = i.parse(t.data)
                        } catch (n) {
                            return
                        }
                        if (e.windowId === this.windowId) switch (e.type) {
                            case "s":
                                this.iframeObj.loaded(), this.postMessage("s", i.stringify([s, this.transport, this.transUrl, this.baseUrl]));
                                break;
                            case "t":
                                this.emit("message", e.data);
                                break;
                            case "c":
                                var r;
                                try {
                                    r = i.parse(e.data)
                                } catch (n) {
                                    return
                                }
                                this.emit("close", r[0], r[1]), this.close()
                        }
                    }
                }, n.prototype.postMessage = function (t, e) {
                    this.iframeObj.post(i.stringify({
                        windowId: this.windowId,
                        type: t,
                        data: e || ""
                    }), this.origin)
                }, n.prototype.send = function (t) {
                    this.postMessage("m", t)
                }, n.enabled = function () {
                    return u.iframeEnabled
                }, n.transportName = "iframe", n.roundTrips = 2, e.exports = n
        }, {
            "../utils/event": 46,
            "../utils/iframe": 47,
            "../utils/random": 50,
            "../utils/url": 52,
            "../version": 53,
            debug: void 0,
            events: 3,
            inherits: 54,
            json3: 55
        }],
        23: [function (t, e) {
            (function (n) {
                function r(t) {
                    if (!r.enabled()) throw new Error("Transport created when disabled");
                    o.call(this, t, "/jsonp", a, s)
                }
                var i = t("inherits"),
                    o = t("./lib/sender-receiver"),
                    s = t("./receiver/jsonp"),
                    a = t("./sender/jsonp");
                i(r, o), r.enabled = function () {
                    return !!n.document
                }, r.transportName = "jsonp-polling", r.roundTrips = 1, r.needBody = !0, e.exports = r
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {
            "./lib/sender-receiver": 28,
            "./receiver/jsonp": 31,
            "./sender/jsonp": 33,
            inherits: 54
        }],
        24: [function (t, e) {
            function n(t) {
                return function (e, n, r) {
                    var i = {};
                    "string" == typeof n && (i.headers = {
                        "Content-type": "text/plain"
                    });
                    var s = o.addPath(e,
                            "/xhr_send"),
                        a = new t("POST", s, n, i);
                    return a.once("finish", function (t) {
                            return a = null, 200 !== t && 204 !== t ? r(new Error("http status " + t)) : void r()
                        }),
                        function () {
                            a.close(), a = null;
                            var t = new Error("Aborted");
                            t.code = 1E3, r(t)
                        }
                }
            }

            function r(t, e, r, i) {
                s.call(this, t, e, n(i), r, i)
            }
            var i = t("inherits"),
                o = t("../../utils/url"),
                s = t("./sender-receiver");
            i(r, s), e.exports = r
        }, {
            "../../utils/url": 52,
            "./sender-receiver": 28,
            debug: void 0,
            inherits: 54
        }],
        25: [function (t, e) {
            function n(t, e) {
                i.call(this), this.sendBuffer = [], this.sender = e,
                    this.url = t
            }
            var r = t("inherits"),
                i = t("events").EventEmitter;
            r(n, i), n.prototype.send = function (t) {
                this.sendBuffer.push(t), this.sendStop || this.sendSchedule()
            }, n.prototype.sendScheduleWait = function () {
                var t, e = this;
                this.sendStop = function () {
                    e.sendStop = null, clearTimeout(t)
                }, t = setTimeout(function () {
                    e.sendStop = null, e.sendSchedule()
                }, 25)
            }, n.prototype.sendSchedule = function () {
                var t = this;
                if (this.sendBuffer.length > 0) {
                    var e = "[" + this.sendBuffer.join(",") + "]";
                    this.sendStop = this.sender(this.url, e, function (e) {
                        t.sendStop =
                            null, e ? (t.emit("close", e.code || 1006, "Sending error: " + e), t._cleanup()) : t.sendScheduleWait()
                    }), this.sendBuffer = []
                }
            }, n.prototype._cleanup = function () {
                this.removeAllListeners()
            }, n.prototype.stop = function () {
                this._cleanup(), this.sendStop && (this.sendStop(), this.sendStop = null)
            }, e.exports = n
        }, {
            debug: void 0,
            events: 3,
            inherits: 54
        }],
        26: [function (t, e) {
            (function (n) {
                var r = t("inherits"),
                    i = t("../iframe"),
                    o = t("../../utils/object");
                e.exports = function (t) {
                    function e(e, n) {
                        i.call(this, t.transportName, e, n)
                    }
                    return r(e, i), e.enabled =
                        function (e, r) {
                            if (!n.document) return !1;
                            var s = o.extend({}, r);
                            return s.sameOrigin = !0, t.enabled(s) && i.enabled()
                        }, e.transportName = "iframe-" + t.transportName, e.needBody = !0, e.roundTrips = i.roundTrips + t.roundTrips - 1, e.facadeTransport = t, e
                }
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {
            "../../utils/object": 49,
            "../iframe": 22,
            inherits: 54
        }],
        27: [function (t, e) {
            function n(t, e, n) {
                i.call(this), this.Receiver = t, this.receiveUrl = e, this.AjaxObject = n, this._scheduleReceiver()
            }
            var r = t("inherits"),
                i = t("events").EventEmitter;
            r(n, i), n.prototype._scheduleReceiver = function () {
                var t = this,
                    e = this.poll = new this.Receiver(this.receiveUrl, this.AjaxObject);
                e.on("message", function (e) {
                    t.emit("message", e)
                }), e.once("close", function (n, r) {
                    t.poll = e = null, t.pollIsClosing || ("network" === r ? t._scheduleReceiver() : (t.emit("close", n || 1006, r), t.removeAllListeners()))
                })
            }, n.prototype.abort = function () {
                this.removeAllListeners(), this.pollIsClosing = !0, this.poll && this.poll.abort()
            }, e.exports = n
        }, {
            debug: void 0,
            events: 3,
            inherits: 54
        }],
        28: [function (t, e) {
            function n(t, e, n, r, a) {
                var u = i.addPath(t, e),
                    c = this;
                o.call(this, t, n), this.poll = new s(r, u, a), this.poll.on("message", function (t) {
                    c.emit("message", t)
                }), this.poll.once("close", function (t, e) {
                    c.poll = null, c.emit("close", t, e), c.close()
                })
            }
            var r = t("inherits"),
                i = t("../../utils/url"),
                o = t("./buffered-sender"),
                s = t("./polling");
            r(n, o), n.prototype.close = function () {
                this.removeAllListeners(), this.poll && (this.poll.abort(), this.poll = null), this.stop()
            }, e.exports = n
        }, {
            "../../utils/url": 52,
            "./buffered-sender": 25,
            "./polling": 27,
            debug: void 0,
            inherits: 54
        }],
        29: [function (t, e) {
            function n(t) {
                i.call(this);
                var e = this,
                    n = this.es = new o(t);
                n.onmessage = function (t) {
                    e.emit("message", decodeURI(t.data))
                }, n.onerror = function (t) {
                    var r = 2 !== n.readyState ? "network" : "permanent";
                    e._cleanup(), e._close(r)
                }
            }
            var r = t("inherits"),
                i = t("events").EventEmitter,
                o = t("eventsource");
            r(n, i), n.prototype.abort = function () {
                this._cleanup(), this._close("user")
            }, n.prototype._cleanup = function () {
                var t = this.es;
                t && (t.onmessage = t.onerror =
                    null, t.close(), this.es = null)
            }, n.prototype._close = function (t) {
                var e = this;
                setTimeout(function () {
                    e.emit("close", null, t), e.removeAllListeners()
                }, 200)
            }, e.exports = n
        }, {
            debug: void 0,
            events: 3,
            eventsource: 18,
            inherits: 54
        }],
        30: [function (t, e) {
            (function (n) {
                function r(t) {
                    a.call(this);
                    var e = this;
                    o.polluteGlobalNamespace(), this.id = "a" + u.string(6), t = s.addQuery(t, "c\x3d" + decodeURIComponent(o.WPrefix + "." + this.id));
                    var i = r.htmlfileEnabled ? o.createHtmlfile : o.createIframe;
                    n[o.WPrefix][this.id] = {
                        start: function () {
                            e.iframeObj.loaded()
                        },
                        message: function (t) {
                            e.emit("message", t)
                        },
                        stop: function () {
                            e._cleanup(), e._close("network")
                        }
                    }, this.iframeObj = i(t, function () {
                        e._cleanup(), e._close("permanent")
                    })
                }
                var i = t("inherits"),
                    o = t("../../utils/iframe"),
                    s = t("../../utils/url"),
                    a = t("events").EventEmitter,
                    u = t("../../utils/random");
                i(r, a), r.prototype.abort = function () {
                    this._cleanup(), this._close("user")
                }, r.prototype._cleanup = function () {
                    this.iframeObj && (this.iframeObj.cleanup(), this.iframeObj = null), delete n[o.WPrefix][this.id]
                }, r.prototype._close = function (t) {
                    this.emit("close",
                        null, t), this.removeAllListeners()
                }, r.htmlfileEnabled = !1;
                var c = ["Active"].concat("Object").join("X");
                if (c in n) try {
                    r.htmlfileEnabled = !!new n[c]("htmlfile")
                } catch (l) {}
                r.enabled = r.htmlfileEnabled || o.iframeEnabled, e.exports = r
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {
            "../../utils/iframe": 47,
            "../../utils/random": 50,
            "../../utils/url": 52,
            debug: void 0,
            events: 3,
            inherits: 54
        }],
        31: [function (t, e) {
            (function (n) {
                function r(t) {
                    var e = this;
                    c.call(this),
                        i.polluteGlobalNamespace(), this.id = "a" + o.string(6);
                    var s = a.addQuery(t, "c\x3d" + encodeURIComponent(i.WPrefix + "." + this.id));
                    n[i.WPrefix][this.id] = this._callback.bind(this), this._createScript(s), this.timeoutId = setTimeout(function () {
                        e._abort(new Error("JSONP script loaded abnormally (timeout)"))
                    }, r.timeout)
                }
                var i = t("../../utils/iframe"),
                    o = t("../../utils/random"),
                    s = t("../../utils/browser"),
                    a = t("../../utils/url"),
                    u = t("inherits"),
                    c = t("events").EventEmitter;
                u(r, c), r.prototype.abort = function () {
                    if (n[i.WPrefix][this.id]) {
                        var t =
                            new Error("JSONP user aborted read");
                        t.code = 1E3, this._abort(t)
                    }
                }, r.timeout = 35E3, r.scriptErrorTimeout = 1E3, r.prototype._callback = function (t) {
                    this._cleanup(), this.aborting || (t && this.emit("message", t), this.emit("close", null, "network"), this.removeAllListeners())
                }, r.prototype._abort = function (t) {
                    this._cleanup(), this.aborting = !0, this.emit("close", t.code, t.message), this.removeAllListeners()
                }, r.prototype._cleanup = function () {
                    if (clearTimeout(this.timeoutId), this.script2 && (this.script2.parentNode.removeChild(this.script2),
                            this.script2 = null), this.script) {
                        var t = this.script;
                        t.parentNode.removeChild(t), t.onreadystatechange = t.onerror = t.onload = t.onclick = null, this.script = null
                    }
                    delete n[i.WPrefix][this.id]
                }, r.prototype._scriptError = function () {
                    var t = this;
                    this.errorTimer || (this.errorTimer = setTimeout(function () {
                        t.loadedOkay || t._abort(new Error("JSONP script loaded abnormally (onerror)"))
                    }, r.scriptErrorTimeout))
                }, r.prototype._createScript = function (t) {
                    var e, r = this,
                        i = this.script = n.document.createElement("script");
                    if (i.id = "a" + o.string(8),
                        i.src = t, i.type = "text/javascript", i.charset = "UTF-8", i.onerror = this._scriptError.bind(this), i.onload = function () {
                            r._abort(new Error("JSONP script loaded abnormally (onload)"))
                        }, i.onreadystatechange = function () {
                            if (/loaded|closed/.test(i.readyState)) {
                                if (i && i.htmlFor && i.onclick) {
                                    r.loadedOkay = !0;
                                    try {
                                        i.onclick()
                                    } catch (t) {}
                                }
                                i && r._abort(new Error("JSONP script loaded abnormally (onreadystatechange)"))
                            }
                        }, "undefined" == typeof i.async && n.document.attachEvent)
                        if (s.isOpera()) e = this.script2 = n.document.createElement("script"),
                            e.text = "try{var a \x3d document.getElementById('" + i.id + "'); if(a)a.onerror();}catch(x){};", i.async = e.async = !1;
                        else {
                            try {
                                i.htmlFor = i.id, i.event = "onclick"
                            } catch (a) {}
                            i.async = !0
                        }
                    "undefined" != typeof i.async && (i.async = !0);
                    var u = n.document.getElementsByTagName("head")[0];
                    u.insertBefore(i, u.firstChild), e && u.insertBefore(e, u.firstChild)
                }, e.exports = r
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {
            "../../utils/browser": 44,
            "../../utils/iframe": 47,
            "../../utils/random": 50,
            "../../utils/url": 52,
            debug: void 0,
            events: 3,
            inherits: 54
        }],
        32: [function (t, e) {
            function n(t, e) {
                i.call(this);
                var n = this;
                this.bufferPosition = 0, this.xo = new e("POST", t, null), this.xo.on("chunk", this._chunkHandler.bind(this)), this.xo.once("finish", function (t, e) {
                    n._chunkHandler(t, e), n.xo = null;
                    var r = 200 === t ? "network" : "permanent";
                    n.emit("close", null, r), n._cleanup()
                })
            }
            var r = t("inherits"),
                i = t("events").EventEmitter;
            r(n, i), n.prototype._chunkHandler = function (t, e) {
                if (200 === t && e)
                    for (var n = -1;; this.bufferPosition +=
                        n + 1) {
                        var r = e.slice(this.bufferPosition);
                        if (n = r.indexOf("\n"), -1 === n) break;
                        var i = r.slice(0, n);
                        i && this.emit("message", i)
                    }
            }, n.prototype._cleanup = function () {
                this.removeAllListeners()
            }, n.prototype.abort = function () {
                this.xo && (this.xo.close(), this.emit("close", null, "user"), this.xo = null), this._cleanup()
            }, e.exports = n
        }, {
            debug: void 0,
            events: 3,
            inherits: 54
        }],
        33: [function (t, e) {
            (function (n) {
                function r(t) {
                    try {
                        return n.document.createElement('\x3ciframe name\x3d"' + t + '"\x3e')
                    } catch (e) {
                        var r = n.document.createElement("iframe");
                        return r.name = t, r
                    }
                }

                function i() {
                    o = n.document.createElement("form"), o.style.display = "none", o.style.position = "absolute", o.method = "POST", o.enctype = "application/x-www-form-urlencoded", o.acceptCharset = "UTF-8", s = n.document.createElement("textarea"), s.name = "d", o.appendChild(s), n.document.body.appendChild(o)
                }
                var o, s, a = t("../../utils/random"),
                    u = t("../../utils/url");
                e.exports = function (t, e, n) {
                    o || i();
                    var c = "a" + a.string(8);
                    o.target = c, o.action = u.addQuery(u.addPath(t, "/jsonp_send"), "i\x3d" + c);
                    var l = r(c);
                    l.id = c,
                        l.style.display = "none", o.appendChild(l);
                    try {
                        s.value = e
                    } catch (f) {}
                    o.submit();
                    var h = function (t) {
                        l.onerror && (l.onreadystatechange = l.onerror = l.onload = null, setTimeout(function () {
                            l.parentNode.removeChild(l), l = null
                        }, 500), s.value = "", n(t))
                    };
                    return l.onerror = function () {
                            h()
                        }, l.onload = function () {
                            h()
                        }, l.onreadystatechange = function (t) {
                            "complete" === l.readyState && h()
                        },
                        function () {
                            h(new Error("Aborted"))
                        }
                }
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {
            "../../utils/random": 50,
            "../../utils/url": 52,
            debug: void 0
        }],
        34: [function (t, e) {
            (function (n) {
                function r(t, e, n) {
                    var r = this;
                    i.call(this), setTimeout(function () {
                        r._start(t, e, n)
                    }, 0)
                }
                var i = t("events").EventEmitter,
                    o = t("inherits"),
                    s = t("../../utils/event"),
                    a = t("../../utils/browser"),
                    u = t("../../utils/url");
                o(r, i), r.prototype._start = function (t, e, r) {
                    var i = this,
                        o = new n.XDomainRequest;
                    e = u.addQuery(e, "t\x3d" + +new Date), o.onerror = function () {
                        i._error()
                    }, o.ontimeout = function () {
                        i._error()
                    }, o.onprogress = function () {
                        i.emit("chunk",
                            200, o.responseText)
                    }, o.onload = function () {
                        i.emit("finish", 200, o.responseText), i._cleanup(!1)
                    }, this.xdr = o, this.unloadRef = s.unloadAdd(function () {
                        i._cleanup(!0)
                    });
                    try {
                        this.xdr.open(t, e), this.timeout && (this.xdr.timeout = this.timeout), this.xdr.send(r)
                    } catch (a) {
                        this._error()
                    }
                }, r.prototype._error = function () {
                    this.emit("finish", 0, ""), this._cleanup(!1)
                }, r.prototype._cleanup = function (t) {
                    if (this.xdr) {
                        if (this.removeAllListeners(), s.unloadDel(this.unloadRef), this.xdr.ontimeout = this.xdr.onerror = this.xdr.onprogress =
                            this.xdr.onload = null, t) try {
                            this.xdr.abort()
                        } catch (e) {}
                        this.unloadRef = this.xdr = null
                    }
                }, r.prototype.close = function () {
                    this._cleanup(!0)
                }, r.enabled = !(!n.XDomainRequest || !a.hasDomain()), e.exports = r
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {
            "../../utils/browser": 44,
            "../../utils/event": 46,
            "../../utils/url": 52,
            debug: void 0,
            events: 3,
            inherits: 54
        }],
        35: [function (t, e) {
            function n(t, e, n, r) {
                i.call(this, t, e, n, r)
            }
            var r = t("inherits"),
                i = t("../driver/xhr");
            r(n, i), n.enabled = i.enabled && i.supportsCORS, e.exports = n
        }, {
            "../driver/xhr": 17,
            inherits: 54
        }],
        36: [function (t, e) {
            function n() {
                var t = this;
                r.call(this), this.to = setTimeout(function () {
                    t.emit("finish", 200, "{}")
                }, n.timeout)
            }
            var r = t("events").EventEmitter,
                i = t("inherits");
            i(n, r), n.prototype.close = function () {
                clearTimeout(this.to)
            }, n.timeout = 2E3, e.exports = n
        }, {
            events: 3,
            inherits: 54
        }],
        37: [function (t, e) {
            function n(t, e, n) {
                i.call(this, t, e, n, {
                    noCredentials: !0
                })
            }
            var r = t("inherits"),
                i = t("../driver/xhr");
            r(n, i), n.enabled =
                i.enabled, e.exports = n
        }, {
            "../driver/xhr": 17,
            inherits: 54
        }],
        38: [function (t, e) {
            function n(t) {
                if (!n.enabled()) throw new Error("Transport created when disabled");
                s.call(this);
                var e = this,
                    o = i.addPath(t, "/websocket");
                o = "https" === o.slice(0, 5) ? "wss" + o.slice(5) : "ws" + o.slice(4), this.url = o, this.ws = new a(this.url), this.ws.onmessage = function (t) {
                    e.emit("message", t.data)
                }, this.unloadRef = r.unloadAdd(function () {
                    e.ws.close()
                }), this.ws.onclose = function (t) {
                    e.emit("close", t.code, t.reason), e._cleanup()
                }, this.ws.onerror = function (t) {
                    e.emit("close",
                        1006, "WebSocket connection broken"), e._cleanup()
                }
            }
            var r = t("../utils/event"),
                i = t("../utils/url"),
                o = t("inherits"),
                s = t("events").EventEmitter,
                a = t("./driver/websocket");
            o(n, s), n.prototype.send = function (t) {
                    var e = "[" + t + "]";
                    this.ws.send(e)
                }, n.prototype.close = function () {
                    this.ws && this.ws.close(), this._cleanup()
                }, n.prototype._cleanup = function () {
                    var t = this.ws;
                    t && (t.onmessage = t.onclose = t.onerror = null), r.unloadDel(this.unloadRef), this.unloadRef = this.ws = null, this.removeAllListeners()
                }, n.enabled = function () {
                    return !!a
                },
                n.transportName = "websocket", n.roundTrips = 2, e.exports = n
        }, {
            "../utils/event": 46,
            "../utils/url": 52,
            "./driver/websocket": 19,
            debug: void 0,
            events: 3,
            inherits: 54
        }],
        39: [function (t, e) {
            function n(t) {
                if (!a.enabled) throw new Error("Transport created when disabled");
                i.call(this, t, "/xhr", s, a)
            }
            var r = t("inherits"),
                i = t("./lib/ajax-based"),
                o = t("./xdr-streaming"),
                s = t("./receiver/xhr"),
                a = t("./sender/xdr");
            r(n, i), n.enabled = o.enabled, n.transportName = "xdr-polling", n.roundTrips = 2, e.exports = n
        }, {
            "./lib/ajax-based": 24,
            "./receiver/xhr": 32,
            "./sender/xdr": 34,
            "./xdr-streaming": 40,
            inherits: 54
        }],
        40: [function (t, e) {
            function n(t) {
                if (!s.enabled) throw new Error("Transport created when disabled");
                i.call(this, t, "/xhr_streaming", o, s)
            }
            var r = t("inherits"),
                i = t("./lib/ajax-based"),
                o = t("./receiver/xhr"),
                s = t("./sender/xdr");
            r(n, i), n.enabled = function (t) {
                return t.cookie_needed || t.nullOrigin ? !1 : s.enabled && t.sameScheme
            }, n.transportName = "xdr-streaming", n.roundTrips = 2, e.exports = n
        }, {
            "./lib/ajax-based": 24,
            "./receiver/xhr": 32,
            "./sender/xdr": 34,
            inherits: 54
        }],
        41: [function (t, e) {
            function n(t) {
                if (!a.enabled && !s.enabled) throw new Error("Transport created when disabled");
                i.call(this, t, "/xhr", o, s)
            }
            var r = t("inherits"),
                i = t("./lib/ajax-based"),
                o = t("./receiver/xhr"),
                s = t("./sender/xhr-cors"),
                a = t("./sender/xhr-local");
            r(n, i), n.enabled = function (t) {
                return t.nullOrigin ? !1 : a.enabled && t.sameOrigin ? !0 : s.enabled
            }, n.transportName = "xhr-polling", n.roundTrips = 2, e.exports = n
        }, {
            "./lib/ajax-based": 24,
            "./receiver/xhr": 32,
            "./sender/xhr-cors": 35,
            "./sender/xhr-local": 37,
            inherits: 54
        }],
        42: [function (t, e) {
            (function (n) {
                function r(t) {
                    if (!u.enabled && !a.enabled) throw new Error("Transport created when disabled");
                    o.call(this, t, "/xhr_streaming", s, a)
                }
                var i = t("inherits"),
                    o = t("./lib/ajax-based"),
                    s = t("./receiver/xhr"),
                    a = t("./sender/xhr-cors"),
                    u = t("./sender/xhr-local"),
                    c = t("../utils/browser");
                i(r, o), r.enabled = function (t) {
                    return t.nullOrigin ? !1 : c.isOpera() ? !1 : a.enabled
                }, r.transportName = "xhr-streaming", r.roundTrips = 2, r.needBody = !!n.document, e.exports = r
            }).call(this, "undefined" != typeof global ? global :
                "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {
            "../utils/browser": 44,
            "./lib/ajax-based": 24,
            "./receiver/xhr": 32,
            "./sender/xhr-cors": 35,
            "./sender/xhr-local": 37,
            inherits: 54
        }],
        43: [function (t, e) {
            (function (t) {
                e.exports.randomBytes = t.crypto && t.crypto.getRandomValues ? function (e) {
                    var n = new Uint8Array(e);
                    return t.crypto.getRandomValues(n), n
                } : function (t) {
                    for (var e = new Array(t), n = 0; t > n; n++) e[n] = Math.floor(256 * Math.random());
                    return e
                }
            }).call(this, "undefined" != typeof global ? global : "undefined" !=
                typeof self ? self : "undefined" != typeof window ? window : {})
        }, {}],
        44: [function (t, e) {
            (function (t) {
                e.exports = {
                    isOpera: function () {
                        return t.navigator && /opera/i.test(t.navigator.userAgent)
                    },
                    isKonqueror: function () {
                        return t.navigator && /konqueror/i.test(t.navigator.userAgent)
                    },
                    hasDomain: function () {
                        if (!t.document) return !0;
                        try {
                            return !!t.document.domain
                        } catch (e) {
                            return !1
                        }
                    }
                }
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {}],
        45: [function (t, e) {
            var n,
                r = t("json3"),
                i = /[\x00-\x1f\ud800-\udfff\ufffe\uffff\u0300-\u0333\u033d-\u0346\u034a-\u034c\u0350-\u0352\u0357-\u0358\u035c-\u0362\u0374\u037e\u0387\u0591-\u05af\u05c4\u0610-\u0617\u0653-\u0654\u0657-\u065b\u065d-\u065e\u06df-\u06e2\u06eb-\u06ec\u0730\u0732-\u0733\u0735-\u0736\u073a\u073d\u073f-\u0741\u0743\u0745\u0747\u07eb-\u07f1\u0951\u0958-\u095f\u09dc-\u09dd\u09df\u0a33\u0a36\u0a59-\u0a5b\u0a5e\u0b5c-\u0b5d\u0e38-\u0e39\u0f43\u0f4d\u0f52\u0f57\u0f5c\u0f69\u0f72-\u0f76\u0f78\u0f80-\u0f83\u0f93\u0f9d\u0fa2\u0fa7\u0fac\u0fb9\u1939-\u193a\u1a17\u1b6b\u1cda-\u1cdb\u1dc0-\u1dcf\u1dfc\u1dfe\u1f71\u1f73\u1f75\u1f77\u1f79\u1f7b\u1f7d\u1fbb\u1fbe\u1fc9\u1fcb\u1fd3\u1fdb\u1fe3\u1feb\u1fee-\u1fef\u1ff9\u1ffb\u1ffd\u2000-\u2001\u20d0-\u20d1\u20d4-\u20d7\u20e7-\u20e9\u2126\u212a-\u212b\u2329-\u232a\u2adc\u302b-\u302c\uaab2-\uaab3\uf900-\ufa0d\ufa10\ufa12\ufa15-\ufa1e\ufa20\ufa22\ufa25-\ufa26\ufa2a-\ufa2d\ufa30-\ufa6d\ufa70-\ufad9\ufb1d\ufb1f\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40-\ufb41\ufb43-\ufb44\ufb46-\ufb4e\ufff0-\uffff]/g,
                o = function (t) {
                    var e, n = {},
                        r = [];
                    for (e = 0; 65536 > e; e++) r.push(String.fromCharCode(e));
                    return t.lastIndex = 0, r.join("").replace(t, function (t) {
                        return n[t] = "\\u" + ("0000" + t.charCodeAt(0).toString(16)).slice(-4), ""
                    }), t.lastIndex = 0, n
                };
            e.exports = {
                quote: function (t) {
                    var e = r.stringify(t);
                    return i.lastIndex = 0, i.test(e) ? (n || (n = o(i)), e.replace(i, function (t) {
                        return n[t]
                    })) : e
                }
            }
        }, {
            json3: 55
        }],
        46: [function (t, e) {
            (function (n) {
                var r = t("./random"),
                    i = {},
                    o = !1,
                    s = n.chrome && n.chrome.app && n.chrome.app.runtime;
                e.exports = {
                    attachEvent: function (t,
                        e) {
                        "undefined" != typeof n.addEventListener ? n.addEventListener(t, e, !1) : n.document && n.attachEvent && (n.document.attachEvent("on" + t, e), n.attachEvent("on" + t, e))
                    },
                    detachEvent: function (t, e) {
                        "undefined" != typeof n.addEventListener ? n.removeEventListener(t, e, !1) : n.document && n.detachEvent && (n.document.detachEvent("on" + t, e), n.detachEvent("on" + t, e))
                    },
                    unloadAdd: function (t) {
                        if (s) return null;
                        var e = r.string(8);
                        return i[e] = t, o && setTimeout(this.triggerUnloadCallbacks, 0), e
                    },
                    unloadDel: function (t) {
                        t in i && delete i[t]
                    },
                    triggerUnloadCallbacks: function () {
                        for (var t in i) i[t](),
                            delete i[t]
                    }
                };
                var a = function () {
                    o || (o = !0, e.exports.triggerUnloadCallbacks())
                };
                s || e.exports.attachEvent("unload", a)
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {
            "./random": 50
        }],
        47: [function (t, e) {
            (function (n) {
                var r = t("./event"),
                    i = t("json3"),
                    o = t("./browser");
                e.exports = {
                    WPrefix: "_jp",
                    currentWindowId: null,
                    polluteGlobalNamespace: function () {
                        e.exports.WPrefix in n || (n[e.exports.WPrefix] = {})
                    },
                    postMessage: function (t, r) {
                        n.parent !== n && n.parent.postMessage(i.stringify({
                            windowId: e.exports.currentWindowId,
                            type: t,
                            data: r || ""
                        }), "*")
                    },
                    createIframe: function (t, e) {
                        var i, o, s = n.document.createElement("iframe"),
                            a = function () {
                                clearTimeout(i);
                                try {
                                    s.onload = null
                                } catch (t) {}
                                s.onerror = null
                            },
                            u = function () {
                                s && (a(), setTimeout(function () {
                                    s && s.parentNode.removeChild(s), s = null
                                }, 0), r.unloadDel(o))
                            },
                            c = function (t) {
                                s && (u(), e(t))
                            },
                            l = function (t, e) {
                                try {
                                    setTimeout(function () {
                                        s && s.contentWindow && s.contentWindow.postMessage(t, e)
                                    }, 0)
                                } catch (n) {}
                            };
                        return s.src = t, s.style.display = "none", s.style.position = "absolute", s.onerror = function () {
                                c("onerror")
                            },
                            s.onload = function () {
                                clearTimeout(i), i = setTimeout(function () {
                                    c("onload timeout")
                                }, 2E3)
                            }, n.document.body.appendChild(s), i = setTimeout(function () {
                                c("timeout")
                            }, 15E3), o = r.unloadAdd(u), {
                                post: l,
                                cleanup: u,
                                loaded: a
                            }
                    },
                    createHtmlfile: function (t, i) {
                        var o, s, a, u = ["Active"].concat("Object").join("X"),
                            c = new n[u]("htmlfile"),
                            l = function () {
                                clearTimeout(o), a.onerror = null
                            },
                            f = function () {
                                c && (l(), r.unloadDel(s), a.parentNode.removeChild(a), a = c = null, CollectGarbage())
                            },
                            h = function (t) {
                                c && (f(), i(t))
                            },
                            d = function (t, e) {
                                try {
                                    setTimeout(function () {
                                        a &&
                                            a.contentWindow && a.contentWindow.postMessage(t, e)
                                    }, 0)
                                } catch (n) {}
                            };
                        c.open(), c.write('\x3chtml\x3e\x3cscript\x3edocument.domain\x3d"' + n.document.domain + '";\x3c/script\x3e\x3c/html\x3e'), c.close(), c.parentWindow[e.exports.WPrefix] = n[e.exports.WPrefix];
                        var p = c.createElement("div");
                        return c.body.appendChild(p), a = c.createElement("iframe"), p.appendChild(a), a.src = t, a.onerror = function () {
                            h("onerror")
                        }, o = setTimeout(function () {
                            h("timeout")
                        }, 15E3), s = r.unloadAdd(f), {
                            post: d,
                            cleanup: f,
                            loaded: l
                        }
                    }
                }, e.exports.iframeEnabled = !1, n.document && (e.exports.iframeEnabled = ("function" == typeof n.postMessage || "object" == typeof n.postMessage) && !o.isKonqueror())
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {
            "./browser": 44,
            "./event": 46,
            debug: void 0,
            json3: 55
        }],
        48: [function (t, e) {
            (function (t) {
                var n = {};
                ["log", "debug", "warn"].forEach(function (e) {
                    var r = t.console && t.console[e] && t.console[e].apply;
                    n[e] = r ? function () {
                            return t.console[e].apply(t.console, arguments)
                        } : "log" ===
                        e ? function () {} : n.log
                }), e.exports = n
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {}],
        49: [function (t, e) {
            e.exports = {
                isObject: function (t) {
                    var e = typeof t;
                    return "function" === e || "object" === e && !!t
                },
                extend: function (t) {
                    if (!this.isObject(t)) return t;
                    for (var e, n, r = 1, i = arguments.length; i > r; r++) {
                        e = arguments[r];
                        for (n in e) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n])
                    }
                    return t
                }
            }
        }, {}],
        50: [function (t, e) {
            var n = t("crypto"),
                r = "abcdefghijklmnopqrstuvwxyz012345";
            e.exports = {
                string: function (t) {
                    for (var e = r.length, i = n.randomBytes(t), o = [], s = 0; t > s; s++) o.push(r.substr(i[s] % e, 1));
                    return o.join("")
                },
                number: function (t) {
                    return Math.floor(Math.random() * t)
                },
                numberString: function (t) {
                    var e = ("" + (t - 1)).length,
                        n = (new Array(e + 1)).join("0");
                    return (n + this.number(t)).slice(-e)
                }
            }
        }, {
            crypto: 43
        }],
        51: [function (t, e) {
            e.exports = function (t) {
                return {
                    filterToEnabled: function (e, n) {
                        var r = {
                            main: [],
                            facade: []
                        };
                        return e ? "string" == typeof e && (e = [e]) : e = [], t.forEach(function (t) {
                            t && ("websocket" !== t.transportName ||
                                n.websocket !== !1) && (e.length && -1 === e.indexOf(t.transportName) || t.enabled(n) && (r.main.push(t), t.facadeTransport && r.facade.push(t.facadeTransport)))
                        }), r
                    }
                }
            }
        }, {
            debug: void 0
        }],
        52: [function (t, e) {
            var n = t("url-parse");
            e.exports = {
                getOrigin: function (t) {
                    if (!t) return null;
                    var e = new n(t);
                    if ("file:" === e.protocol) return null;
                    var r = e.port;
                    return r || (r = "https:" === e.protocol ? "443" : "80"), e.protocol + "//" + e.hostname + ":" + r
                },
                isOriginEqual: function (t, e) {
                    var n = this.getOrigin(t) === this.getOrigin(e);
                    return n
                },
                isSchemeEqual: function (t,
                    e) {
                    return t.split(":")[0] === e.split(":")[0]
                },
                addPath: function (t, e) {
                    var n = t.split("?");
                    return n[0] + e + (n[1] ? "?" + n[1] : "")
                },
                addQuery: function (t, e) {
                    return t + (-1 === t.indexOf("?") ? "?" + e : "\x26" + e)
                }
            }
        }, {
            debug: void 0,
            "url-parse": 56
        }],
        53: [function (t, e) {
            e.exports = "1.0.3"
        }, {}],
        54: [function (t, e) {
            e.exports = "function" == typeof Object.create ? function (t, e) {
                t.super_ = e, t.prototype = Object.create(e.prototype, {
                    constructor: {
                        value: t,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                })
            } : function (t, e) {
                t.super_ = e;
                var n = function () {};
                n.prototype =
                    e.prototype, t.prototype = new n, t.prototype.constructor = t
            }
        }, {}],
        55: [function (e, n, r) {
            (function (e) {
                (function () {
                    function i(t, e) {
                        function n(t) {
                            if (n[t] !== m) return n[t];
                            var i;
                            if ("bug-string-char-index" == t) i = "a" != "a" [0];
                            else if ("json" == t) i = n("json-stringify") && n("json-parse");
                            else {
                                var s, a = '{"a":[1,true,false,null,"\\u0000\\b\\n\\f\\r\\t"]}';
                                if ("json-stringify" == t) {
                                    var u = e.stringify,
                                        l = "function" == typeof u && g;
                                    if (l) {
                                        (s = function () {
                                            return 1
                                        }).toJSON = s;
                                        try {
                                            l = "0" === u(0) && "0" === u(new r) && '""' == u(new o) && u(y) === m &&
                                                u(m) === m && u() === m && "1" === u(s) && "[1]" == u([s]) && "[null]" == u([m]) && "null" == u(null) && "[null,null,null]" == u([m, y, null]) && u({
                                                    a: [s, !0, !1, null, "\x00\b\n\f\r\t"]
                                                }) == a && "1" === u(null, s) && "[\n 1,\n 2\n]" == u([1, 2], null, 1) && '"-271821-04-20T00:00:00.000Z"' == u(new c(-864E13)) && '"+275760-09-13T00:00:00.000Z"' == u(new c(864E13)) && '"-000001-01-01T00:00:00.000Z"' == u(new c(-621987552E5)) && '"1969-12-31T23:59:59.999Z"' == u(new c(-1))
                                        } catch (f) {
                                            l = !1
                                        }
                                    }
                                    i = l
                                }
                                if ("json-parse" == t) {
                                    var h = e.parse;
                                    if ("function" == typeof h) try {
                                        if (0 ===
                                            h("0") && !h(!1)) {
                                            s = h(a);
                                            var d = 5 == s.a.length && 1 === s.a[0];
                                            if (d) {
                                                try {
                                                    d = !h('"\t"')
                                                } catch (f) {}
                                                if (d) try {
                                                    d = 1 !== h("01")
                                                } catch (f) {}
                                                if (d) try {
                                                    d = 1 !== h("1.")
                                                } catch (f) {}
                                            }
                                        }
                                    } catch (f) {
                                        d = !1
                                    }
                                    i = d
                                }
                            }
                            return n[t] = !!i
                        }
                        t || (t = u.Object()), e || (e = u.Object());
                        var r = t.Number || u.Number,
                            o = t.String || u.String,
                            a = t.Object || u.Object,
                            c = t.Date || u.Date,
                            l = t.SyntaxError || u.SyntaxError,
                            f = t.TypeError || u.TypeError,
                            h = t.Math || u.Math,
                            d = t.JSON || u.JSON;
                        "object" == typeof d && d && (e.stringify = d.stringify, e.parse = d.parse);
                        var p, v, m, b = a.prototype,
                            y = b.toString,
                            g = new c(-0xc782b5b800cec);
                        try {
                            g = -109252 == g.getUTCFullYear() && 0 === g.getUTCMonth() && 1 === g.getUTCDate() && 10 == g.getUTCHours() && 37 == g.getUTCMinutes() && 6 == g.getUTCSeconds() && 708 == g.getUTCMilliseconds()
                        } catch (w) {}
                        if (!n("json")) {
                            var x = "[object Function]",
                                _ = "[object Date]",
                                E = "[object Number]",
                                S = "[object String]",
                                O = "[object Array]",
                                T = "[object Boolean]",
                                j = n("bug-string-char-index");
                            if (!g) var C = h.floor,
                                N = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334],
                                A = function (t, e) {
                                    return N[e] + 365 * (t - 1970) + C((t - 1969 + (e = +(e > 1))) /
                                        4) - C((t - 1901 + e) / 100) + C((t - 1601 + e) / 400)
                                };
                            if ((p = b.hasOwnProperty) || (p = function (t) {
                                    var e, n = {};
                                    return (n.__proto__ = null, n.__proto__ = {
                                        toString: 1
                                    }, n).toString != y ? p = function (t) {
                                        var e = this.__proto__,
                                            n = t in (this.__proto__ = null, this);
                                        return this.__proto__ = e, n
                                    } : (e = n.constructor, p = function (t) {
                                        var n = (this.constructor || e).prototype;
                                        return t in this && !(t in n && this[t] === n[t])
                                    }), n = null, p.call(this, t)
                                }), v = function (t, e) {
                                    var n, r, i, o = 0;
                                    (n = function () {
                                        this.valueOf = 0
                                    }).prototype.valueOf = 0, r = new n;
                                    for (i in r) p.call(r, i) &&
                                        o++;
                                    return n = r = null, o ? v = 2 == o ? function (t, e) {
                                        var n, r = {},
                                            i = y.call(t) == x;
                                        for (n in t) i && "prototype" == n || p.call(r, n) || !(r[n] = 1) || !p.call(t, n) || e(n)
                                    } : function (t, e) {
                                        var n, r, i = y.call(t) == x;
                                        for (n in t) i && "prototype" == n || !p.call(t, n) || (r = "constructor" === n) || e(n);
                                        (r || p.call(t, n = "constructor")) && e(n)
                                    } : (r = ["valueOf", "toString", "toLocaleString", "propertyIsEnumerable", "isPrototypeOf", "hasOwnProperty", "constructor"], v = function (t, e) {
                                        var n, i, o = y.call(t) == x,
                                            a = !o && "function" != typeof t.constructor && s[typeof t.hasOwnProperty] &&
                                            t.hasOwnProperty || p;
                                        for (n in t) o && "prototype" == n || !a.call(t, n) || e(n);
                                        for (i = r.length; n = r[--i]; a.call(t, n) && e(n));
                                    }), v(t, e)
                                }, !n("json-stringify")) {
                                var k = {
                                        92: "\\\\",
                                        34: '\\"',
                                        8: "\\b",
                                        12: "\\f",
                                        10: "\\n",
                                        13: "\\r",
                                        9: "\\t"
                                    },
                                    I = "000000",
                                    L = function (t, e) {
                                        return (I + (e || 0)).slice(-t)
                                    },
                                    R = "\\u00",
                                    U = function (t) {
                                        for (var e = '"', n = 0, r = t.length, i = !j || r > 10, o = i && (j ? t.split("") : t); r > n; n++) {
                                            var s = t.charCodeAt(n);
                                            switch (s) {
                                                case 8:
                                                case 9:
                                                case 10:
                                                case 12:
                                                case 13:
                                                case 34:
                                                case 92:
                                                    e += k[s];
                                                    break;
                                                default:
                                                    if (32 > s) {
                                                        e += R + L(2, s.toString(16));
                                                        break
                                                    }
                                                    e += i ? o[n] : t.charAt(n)
                                            }
                                        }
                                        return e + '"'
                                    },
                                    P = function (t, e, n, r, i, o, s) {
                                        var a, u, c, l, h, d, b, g, w, x, j, N, k, I, R, M;
                                        try {
                                            a = e[t]
                                        } catch (W) {}
                                        if ("object" == typeof a && a)
                                            if (u = y.call(a), u != _ || p.call(a, "toJSON")) "function" == typeof a.toJSON && (u != E && u != S && u != O || p.call(a, "toJSON")) && (a = a.toJSON(t));
                                            else if (a > -1 / 0 && 1 / 0 > a) {
                                            if (A) {
                                                for (h = C(a / 864E5), c = C(h / 365.2425) + 1970 - 1; A(c + 1, 0) <= h; c++);
                                                for (l = C((h - A(c, 0)) / 30.42); A(c, l + 1) <= h; l++);
                                                h = 1 + h - A(c, l), d = (a % 864E5 + 864E5) % 864E5, b = C(d / 36E5) % 24, g = C(d / 6E4) % 60, w = C(d / 1E3) % 60, x = d % 1E3
                                            } else c = a.getUTCFullYear(),
                                                l = a.getUTCMonth(), h = a.getUTCDate(), b = a.getUTCHours(), g = a.getUTCMinutes(), w = a.getUTCSeconds(), x = a.getUTCMilliseconds();
                                            a = (0 >= c || c >= 1E4 ? (0 > c ? "-" : "+") + L(6, 0 > c ? -c : c) : L(4, c)) + "-" + L(2, l + 1) + "-" + L(2, h) + "T" + L(2, b) + ":" + L(2, g) + ":" + L(2, w) + "." + L(3, x) + "Z"
                                        } else a = null;
                                        if (n && (a = n.call(e, t, a)), null === a) return "null";
                                        if (u = y.call(a), u == T) return "" + a;
                                        if (u == E) return a > -1 / 0 && 1 / 0 > a ? "" + a : "null";
                                        if (u == S) return U("" + a);
                                        if ("object" == typeof a) {
                                            for (I = s.length; I--;)
                                                if (s[I] === a) throw f();
                                            if (s.push(a), j = [], R = o, o += i, u == O) {
                                                for (k = 0,
                                                    I = a.length; I > k; k++) N = P(k, a, n, r, i, o, s), j.push(N === m ? "null" : N);
                                                M = j.length ? i ? "[\n" + o + j.join(",\n" + o) + "\n" + R + "]" : "[" + j.join(",") + "]" : "[]"
                                            } else v(r || a, function (t) {
                                                var e = P(t, a, n, r, i, o, s);
                                                e !== m && j.push(U(t) + ":" + (i ? " " : "") + e)
                                            }), M = j.length ? i ? "{\n" + o + j.join(",\n" + o) + "\n" + R + "}" : "{" + j.join(",") + "}" : "{}";
                                            return s.pop(), M
                                        }
                                    };
                                e.stringify = function (t, e, n) {
                                    var r, i, o, a;
                                    if (s[typeof e] && e)
                                        if ((a = y.call(e)) == x) i = e;
                                        else if (a == O) {
                                        o = {};
                                        for (var u, c = 0, l = e.length; l > c; u = e[c++], a = y.call(u), (a == S || a == E) && (o[u] = 1));
                                    }
                                    if (n)
                                        if ((a = y.call(n)) ==
                                            E) {
                                            if ((n -= n % 1) > 0)
                                                for (r = "", n > 10 && (n = 10); r.length < n; r += " ");
                                        } else a == S && (r = n.length <= 10 ? n : n.slice(0, 10));
                                    return P("", (u = {}, u[""] = t, u), i, o, r, "", [])
                                }
                            }
                            if (!n("json-parse")) {
                                var M, W, q = o.fromCharCode,
                                    D = {
                                        92: "\\",
                                        34: '"',
                                        47: "/",
                                        98: "\b",
                                        116: "\t",
                                        110: "\n",
                                        102: "\f",
                                        114: "\r"
                                    },
                                    F = function () {
                                        throw M = W = null, l();
                                    },
                                    B = function () {
                                        for (var t, e, n, r, i, o = W, s = o.length; s > M;) switch (i = o.charCodeAt(M)) {
                                            case 9:
                                            case 10:
                                            case 13:
                                            case 32:
                                                M++;
                                                break;
                                            case 123:
                                            case 125:
                                            case 91:
                                            case 93:
                                            case 58:
                                            case 44:
                                                return t = j ? o.charAt(M) : o[M], M++, t;
                                            case 34:
                                                for (t =
                                                    "@", M++; s > M;)
                                                    if (i = o.charCodeAt(M), 32 > i) F();
                                                    else if (92 == i) switch (i = o.charCodeAt(++M)) {
                                                    case 92:
                                                    case 34:
                                                    case 47:
                                                    case 98:
                                                    case 116:
                                                    case 110:
                                                    case 102:
                                                    case 114:
                                                        t += D[i], M++;
                                                        break;
                                                    case 117:
                                                        for (e = ++M, n = M + 4; n > M; M++) i = o.charCodeAt(M), i >= 48 && 57 >= i || i >= 97 && 102 >= i || i >= 65 && 70 >= i || F();
                                                        t += q("0x" + o.slice(e, M));
                                                        break;
                                                    default:
                                                        F()
                                                } else {
                                                    if (34 == i) break;
                                                    for (i = o.charCodeAt(M), e = M; i >= 32 && 92 != i && 34 != i;) i = o.charCodeAt(++M);
                                                    t += o.slice(e, M)
                                                }
                                                if (34 == o.charCodeAt(M)) return M++, t;
                                                F();
                                            default:
                                                if (e = M, 45 == i && (r = !0, i = o.charCodeAt(++M)),
                                                    i >= 48 && 57 >= i) {
                                                    for (48 == i && (i = o.charCodeAt(M + 1), i >= 48 && 57 >= i) && F(), r = !1; s > M && (i = o.charCodeAt(M), i >= 48 && 57 >= i); M++);
                                                    if (46 == o.charCodeAt(M)) {
                                                        for (n = ++M; s > n && (i = o.charCodeAt(n), i >= 48 && 57 >= i); n++);
                                                        n == M && F(), M = n
                                                    }
                                                    if (i = o.charCodeAt(M), 101 == i || 69 == i) {
                                                        for (i = o.charCodeAt(++M), (43 == i || 45 == i) && M++, n = M; s > n && (i = o.charCodeAt(n), i >= 48 && 57 >= i); n++);
                                                        n == M && F(), M = n
                                                    }
                                                    return +o.slice(e, M)
                                                }
                                                if (r && F(), "true" == o.slice(M, M + 4)) return M += 4, !0;
                                                if ("false" == o.slice(M, M + 5)) return M += 5, !1;
                                                if ("null" == o.slice(M, M + 4)) return M += 4, null;
                                                F()
                                        }
                                        return "$"
                                    },
                                    G = function (t) {
                                        var e, n;
                                        if ("$" == t && F(), "string" == typeof t) {
                                            if ("@" == (j ? t.charAt(0) : t[0])) return t.slice(1);
                                            if ("[" == t) {
                                                for (e = []; t = B(), "]" != t; n || (n = !0)) n && ("," == t ? (t = B(), "]" == t && F()) : F()), "," == t && F(), e.push(G(t));
                                                return e
                                            }
                                            if ("{" == t) {
                                                for (e = {}; t = B(), "}" != t; n || (n = !0)) n && ("," == t ? (t = B(), "}" == t && F()) : F()), ("," == t || "string" != typeof t || "@" != (j ? t.charAt(0) : t[0]) || ":" != B()) && F(), e[t.slice(1)] = G(B());
                                                return e
                                            }
                                            F()
                                        }
                                        return t
                                    },
                                    J = function (t, e, n) {
                                        var r = H(t, e, n);
                                        r === m ? delete t[e] : t[e] = r
                                    },
                                    H = function (t, e, n) {
                                        var r, i = t[e];
                                        if ("object" == typeof i && i)
                                            if (y.call(i) == O)
                                                for (r = i.length; r--;) J(i, r, n);
                                            else v(i, function (t) {
                                                J(i, t, n)
                                            });
                                        return n.call(t, e, i)
                                    };
                                e.parse = function (t, e) {
                                    var n, r;
                                    return M = 0, W = "" + t, n = G(B()), "$" != B() && F(), M = W = null, e && y.call(e) == x ? H((r = {}, r[""] = n, r), "", e) : n
                                }
                            }
                        }
                        return e.runInContext = i, e
                    }
                    var o = "function" == typeof t && t.amd,
                        s = {
                            "function": !0,
                            object: !0
                        },
                        a = s[typeof r] && r && !r.nodeType && r,
                        u = s[typeof window] && window || this,
                        c = a && s[typeof n] && n && !n.nodeType && "object" == typeof e && e;
                    if (!c || c.global !== c && c.window !== c && c.self !==
                        c || (u = c), a && !o) i(u, a);
                    else {
                        var l = u.JSON,
                            f = u.JSON3,
                            h = !1,
                            d = i(u, u.JSON3 = {
                                noConflict: function () {
                                    return h || (h = !0, u.JSON = l, u.JSON3 = f, l = f = null), d
                                }
                            });
                        u.JSON = {
                            parse: d.parse,
                            stringify: d.stringify
                        }
                    }
                    o && t(function () {
                        return d
                    })
                }).call(this)
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {}],
        56: [function (t, e) {
            function n(t, e, u) {
                if (!(this instanceof n)) return new n(t, e, u);
                var c, l, f, h, d = s.test(t),
                    p = typeof e,
                    v = this,
                    m = 0;
                for ("object" !== p && "string" !==
                    p && (u = e, e = null), u && "function" != typeof u && (u = o.parse), e = i(e); m < a.length; m++) l = a[m], c = l[0], h = l[1], c !== c ? v[h] = t : "string" == typeof c ? ~(f = t.indexOf(c)) && ("number" == typeof l[2] ? (v[h] = t.slice(0, f), t = t.slice(f + l[2])) : (v[h] = t.slice(f), t = t.slice(0, f))) : (f = c.exec(t)) && (v[h] = f[1], t = t.slice(0, t.length - f[0].length)), v[h] = v[h] || (l[3] || "port" === h && d ? e[h] || "" : ""), l[4] && (v[h] = v[h].toLowerCase());
                u && (v.query = u(v.query)), r(v.port, v.protocol) || (v.host = v.hostname, v.port = ""), v.username = v.password = "", v.auth && (l = v.auth.split(":"),
                    v.username = l[0] || "", v.password = l[1] || ""), v.href = v.toString()
            }
            var r = t("requires-port"),
                i = t("./lolcation"),
                o = t("querystringify"),
                s = /^\/(?!\/)/,
                a = [
                    ["#", "hash"],
                    ["?", "query"],
                    ["//", "protocol", 2, 1, 1],
                    ["/", "pathname"],
                    ["@", "auth", 1],
                    [NaN, "host", void 0, 1, 1],
                    [/:(\d+)$/, "port"],
                    [NaN, "hostname", void 0, 1, 1]
                ];
            n.prototype.set = function (t, e, n) {
                var i = this;
                return "query" === t ? ("string" == typeof e && (e = (n || o.parse)(e)), i[t] = e) : "port" === t ? (i[t] = e, r(e, i.protocol) ? e && (i.host = i.hostname + ":" + e) : (i.host = i.hostname, i[t] = "")) :
                    "hostname" === t ? (i[t] = e, i.port && (e += ":" + i.port), i.host = e) : "host" === t ? (i[t] = e, /:\d+/.test(e) && (e = e.split(":"), i.hostname = e[0], i.port = e[1])) : i[t] = e, i.href = i.toString(), i
            }, n.prototype.toString = function (t) {
                t && "function" == typeof t || (t = o.stringify);
                var e, n = this,
                    r = n.protocol + "//";
                return n.username && (r += n.username, n.password && (r += ":" + n.password), r += "@"), r += n.hostname, n.port && (r += ":" + n.port), r += n.pathname, n.query && (e = "object" == typeof n.query ? t(n.query) : n.query, r += ("?" === e.charAt(0) ? "" : "?") + e), n.hash && (r += n.hash),
                    r
            }, n.qs = o, n.location = i, e.exports = n
        }, {
            "./lolcation": 57,
            querystringify: 58,
            "requires-port": 59
        }],
        57: [function (t, e) {
            (function (n) {
                var r, i = {
                    hash: 1,
                    query: 1
                };
                e.exports = function (e) {
                    e = e || n.location || {}, r = r || t("./");
                    var o, s = {},
                        a = typeof e;
                    if ("blob:" === e.protocol) s = new r(unescape(e.pathname), {});
                    else if ("string" === a) {
                        s = new r(e, {});
                        for (o in i) delete s[o]
                    } else if ("object" === a)
                        for (o in e) o in i || (s[o] = e[o]);
                    return s
                }
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ?
                window : {})
        }, {
            "./": 56
        }],
        58: [function (t, e, n) {
            function r(t) {
                for (var e, n = /([^=?&]+)=([^&]*)/g, r = {}; e = n.exec(t); r[decodeURIComponent(e[1])] = decodeURIComponent(e[2]));
                return r
            }

            function i(t, e) {
                e = e || "";
                var n = [];
                "string" != typeof e && (e = "?");
                for (var r in t) o.call(t, r) && n.push(encodeURIComponent(r) + "\x3d" + encodeURIComponent(t[r]));
                return n.length ? e + n.join("\x26") : ""
            }
            var o = Object.prototype.hasOwnProperty;
            n.stringify = i, n.parse = r
        }, {}],
        59: [function (t, e) {
            e.exports = function (t, e) {
                if (e = e.split(":")[0], t = +t, !t) return !1;
                switch (e) {
                    case "http":
                    case "ws":
                        return 80 !== t;
                    case "https":
                    case "wss":
                        return 443 !== t;
                    case "ftp":
                        return 22 !== t;
                    case "gopher":
                        return 70 !== t;
                    case "file":
                        return !1
                }
                return 0 !== t
            }
        }, {}]
    }, {}, [1])(1)
}),
function () {
    var t, e, n, r, i = {}.hasOwnProperty,
        o = [].slice;
    t = {
        LF: "\n",
        NULL: "\x00"
    }, n = function () {
        function e(t, e, n) {
            this.command = t, this.headers = null != e ? e : {}, this.body = null != n ? n : ""
        }
        var n;
        return e.prototype.toString = function () {
                var n, r, o, s, a;
                n = [this.command], o = this.headers["content-length"] === !1 ? !0 : !1, o && delete this.headers["content-length"],
                    a = this.headers;
                for (r in a) i.call(a, r) && (s = a[r], n.push("" + r + ":" + s));
                return this.body && !o && n.push("content-length:" + e.sizeOfUTF8(this.body)), n.push(t.LF + this.body), n.join(t.LF)
            }, e.sizeOfUTF8 = function (t) {
                return t ? encodeURI(t).match(/%..|./g).length : 0
            }, n = function (n) {
                var r, i, o, s, a, u, c, l, f, h, d, p, v, m, b, y, g;
                for (s = n.search(RegExp("" + t.LF + t.LF)), a = n.substring(0, s).split(t.LF), o = a.shift(), u = {}, p = function (t) {
                        return t.replace(/^\s+|\s+$/g, "")
                    }, y = a.reverse(), v = 0, b = y.length; b > v; v++) h = y[v], l = h.indexOf(":"), u[p(h.substring(0,
                    l))] = p(h.substring(l + 1));
                if (r = "", d = s + 2, u["content-length"]) f = parseInt(u["content-length"]), r = ("" + n).substring(d, d + f);
                else
                    for (i = null, c = m = d, g = n.length;
                        (g >= d ? g > m : m > g) && (i = n.charAt(c), i !== t.NULL); c = g >= d ? ++m : --m) r += i;
                return new e(o, u, r)
            }, e.unmarshall = function (e) {
                var r;
                return function () {
                    var i, o, s, a;
                    for (s = e.split(RegExp("" + t.NULL + t.LF + "*")), a = [], i = 0, o = s.length; o > i; i++) r = s[i], (null != r ? r.length : void 0) > 0 && a.push(n(r));
                    return a
                }()
            }, e.marshall = function (n, r, i) {
                var o;
                return o = new e(n, r, i), o.toString() + t.NULL
            },
            e
    }(), e = function () {
        function e(t) {
            this.ws = t, this.ws.binaryType = "arraybuffer", this.counter = 0, this.connected = !1, this.heartbeat = {
                outgoing: 1E4,
                incoming: 1E4
            }, this.maxWebSocketFrameSize = 16384, this.subscriptions = {}
        }
        var i;
        return e.prototype.debug = function (t) {
            var e;
            return "undefined" != typeof window && null !== window ? (null != (e = window.console), void 0) : void 0
        }, i = function () {
            return Date.now ? Date.now() : (new Date).valueOf
        }, e.prototype._transmit = function (t, e, r) {
            var i;
            for (i = n.marshall(t, e, r), "function" == typeof this.debug &&
                this.debug("\x3e\x3e\x3e " + i);;) {
                if (!(i.length > this.maxWebSocketFrameSize)) return this.ws.send(i);
                this.ws.send(i.substring(0, this.maxWebSocketFrameSize)), i = i.substring(this.maxWebSocketFrameSize), "function" == typeof this.debug && this.debug("remaining \x3d " + i.length)
            }
        }, e.prototype._setupHeartbeat = function (e) {
            var n, o, s, a, u, c;
            if ((u = e.version) === r.VERSIONS.V1_1 || u === r.VERSIONS.V1_2) return c = function () {
                    var t, n, r, i;
                    for (r = e["heart-beat"].split(","), i = [], t = 0, n = r.length; n > t; t++) a = r[t], i.push(parseInt(a));
                    return i
                }(),
                o = c[0], n = c[1], 0 !== this.heartbeat.outgoing && 0 !== n && (s = Math.max(this.heartbeat.outgoing, n), "function" == typeof this.debug && this.debug("send PING every " + s + "ms"), this.pinger = r.setInterval(s, function (e) {
                    return function () {
                        return e.ws.send(t.LF), "function" == typeof e.debug ? e.debug("\x3e\x3e\x3e PING") : void 0
                    }
                }(this))), 0 !== this.heartbeat.incoming && 0 !== o ? (s = Math.max(this.heartbeat.incoming, o), "function" == typeof this.debug && this.debug("check PONG every " + s + "ms"), this.ponger = r.setInterval(s, function (t) {
                    return function () {
                        var e;
                        return e = i() - t.serverActivity, e > 2 * s ? ("function" == typeof t.debug && t.debug("did not receive server activity for the last " + e + "ms"), t.ws.close()) : void 0
                    }
                }(this))) : void 0
        }, e.prototype._parseConnect = function () {
            var t, e, n, r;
            switch (t = 1 <= arguments.length ? o.call(arguments, 0) : [], r = {}, t.length) {
                case 2:
                    r = t[0], e = t[1];
                    break;
                case 3:
                    t[1] instanceof Function ? (r = t[0], e = t[1], n = t[2]) : (r.login = t[0], r.passcode = t[1], e = t[2]);
                    break;
                case 4:
                    r.login = t[0], r.passcode = t[1], e = t[2], n = t[3];
                    break;
                default:
                    r.login = t[0], r.passcode = t[1],
                        e = t[2], n = t[3], r.host = t[4]
            }
            return [r, e, n]
        }, e.prototype.connect = function () {
            var e, s, a, u;
            return e = 1 <= arguments.length ? o.call(arguments, 0) : [], u = this._parseConnect.apply(this, e), a = u[0], this.connectCallback = u[1], s = u[2], "function" == typeof this.debug && this.debug("Opening Web Socket..."), this.ws.onmessage = function (e) {
                return function (r) {
                    var o, a, u, c, l, f, h, d, p, v, m, b;
                    if (c = "undefined" != typeof ArrayBuffer && r.data instanceof ArrayBuffer ? (o = new Uint8Array(r.data), "function" == typeof e.debug ? e.debug("--- got data length: " +
                            o.length) : void 0, function () {
                            var t, e, n;
                            for (n = [], t = 0, e = o.length; e > t; t++) a = o[t], n.push(String.fromCharCode(a));
                            return n
                        }().join("")) : r.data, e.serverActivity = i(), c === t.LF) return void("function" == typeof e.debug && e.debug("\x3c\x3c\x3c PONG"));
                    for ("function" == typeof e.debug && e.debug("\x3c\x3c\x3c " + c), m = n.unmarshall(c), b = [], p = 0, v = m.length; v > p; p++) switch (l = m[p], l.command) {
                        case "CONNECTED":
                            "function" == typeof e.debug && e.debug("connected to server " + l.headers.server), e.connected = !0, e._setupHeartbeat(l.headers),
                                b.push("function" == typeof e.connectCallback ? e.connectCallback(l) : void 0);
                            break;
                        case "MESSAGE":
                            d = l.headers.subscription, h = e.subscriptions[d] || e.onreceive, h ? (u = e, f = l.headers["message-id"], l.ack = function (t) {
                                return null == t && (t = {}), u.ack(f, d, t)
                            }, l.nack = function (t) {
                                return null == t && (t = {}), u.nack(f, d, t)
                            }, b.push(h(l))) : b.push("function" == typeof e.debug ? e.debug("Unhandled received MESSAGE: " + l) : void 0);
                            break;
                        case "RECEIPT":
                            b.push("function" == typeof e.onreceipt ? e.onreceipt(l) : void 0);
                            break;
                        case "ERROR":
                            b.push("function" ==
                                typeof s ? s(l) : void 0);
                            break;
                        default:
                            b.push("function" == typeof e.debug ? e.debug("Unhandled frame: " + l) : void 0)
                    }
                    return b
                }
            }(this), this.ws.onclose = function (t) {
                return function () {
                    var e;
                    return e = "Whoops! Lost connection to " + t.ws.url, "function" == typeof t.debug && t.debug(e), t._cleanUp(), "function" == typeof s ? s(e) : void 0
                }
            }(this), this.ws.onopen = function (t) {
                return function () {
                    return "function" == typeof t.debug && t.debug("Web Socket Opened..."), a["accept-version"] = r.VERSIONS.supportedVersions(), a["heart-beat"] = [t.heartbeat.outgoing,
                        t.heartbeat.incoming
                    ].join(","), t._transmit("CONNECT", a)
                }
            }(this)
        }, e.prototype.disconnect = function (t, e) {
            return null == e && (e = {}), this._transmit("DISCONNECT", e), this.ws.onclose = null, this.ws.close(), this._cleanUp(), "function" == typeof t ? t() : void 0
        }, e.prototype._cleanUp = function () {
            return this.connected = !1, this.pinger && r.clearInterval(this.pinger), this.ponger ? r.clearInterval(this.ponger) : void 0
        }, e.prototype.send = function (t, e, n) {
            return null == e && (e = {}), null == n && (n = ""), e.destination = t, this._transmit("SEND",
                e, n)
        }, e.prototype.subscribe = function (t, e, n) {
            var r;
            return null == n && (n = {}), n.id || (n.id = "sub-" + this.counter++), n.destination = t, this.subscriptions[n.id] = e, this._transmit("SUBSCRIBE", n), r = this, {
                id: n.id,
                unsubscribe: function () {
                    return r.unsubscribe(n.id)
                }
            }
        }, e.prototype.unsubscribe = function (t) {
            return delete this.subscriptions[t], this._transmit("UNSUBSCRIBE", {
                id: t
            })
        }, e.prototype.begin = function (t) {
            var e, n;
            return n = t || "tx-" + this.counter++, this._transmit("BEGIN", {
                transaction: n
            }), e = this, {
                id: n,
                commit: function () {
                    return e.commit(n)
                },
                abort: function () {
                    return e.abort(n)
                }
            }
        }, e.prototype.commit = function (t) {
            return this._transmit("COMMIT", {
                transaction: t
            })
        }, e.prototype.abort = function (t) {
            return this._transmit("ABORT", {
                transaction: t
            })
        }, e.prototype.ack = function (t, e, n) {
            return null == n && (n = {}), n["message-id"] = t, n.subscription = e, this._transmit("ACK", n)
        }, e.prototype.nack = function (t, e, n) {
            return null == n && (n = {}), n["message-id"] = t, n.subscription = e, this._transmit("NACK", n)
        }, e
    }(), r = {
        VERSIONS: {
            V1_0: "1.0",
            V1_1: "1.1",
            V1_2: "1.2",
            supportedVersions: function () {
                return "1.1,1.0"
            }
        },
        client: function (t, n) {
            var i, o;
            return null == n && (n = ["v10.stomp", "v11.stomp"]), i = r.WebSocketClass || WebSocket, o = new i(t, n), new e(o)
        },
        over: function (t) {
            return new e(t)
        },
        Frame: n
    }, "undefined" != typeof exports && null !== exports && (exports.Stomp = r), "undefined" != typeof window && null !== window ? (r.setInterval = function (t, e) {
        return window.setInterval(e, t)
    }, r.clearInterval = function (t) {
        return window.clearInterval(t)
    }, window.Stomp = r) : exports || (self.Stomp = r)
}.call(this);
var w = window,
    d = document;
var MCK_LABELS;
var MCK_BASE_URL;
var MCK_CURR_LATITIUDE = 40.7324319;
var MCK_CURR_LONGITUDE = -73.82480777777776;
var mckUtils = new MckUtils;
var mckDateUtils = new MckDateUtils;
var mckContactUtils = new MckContactUtils;
var mckMapUtils = new MckMapUtils;

function MckUtils() {
    var _this = this;
    var TEXT_NODE = 3,
        ELEMENT_NODE = 1,
        TAGS_BLOCK = ["p", "div", "pre", "form"];
    _this.init = function () {
        var initurl = MCK_CONTEXTPATH ? MCK_CONTEXTPATH + "/v2/tab/initialize.page" : "https://apps.applozic.com/v2/tab/initialize.page";
        var messurl = MCK_CONTEXTPATH ? MCK_CONTEXTPATH + "/rest/ws/message/list" : "https://apps.applozic.com/rest/ws/message/list";
        $applozic.ajax({
            url: initurl,
            contentType: "application/json",
            type: "OPTIONS"
        }).done(function (data) {});
        $applozic.ajax({
            url: messurl,
            contentType: "application/json",
            type: "OPTIONS"
        }).done(function (data) {})
    };
    _this.showElement = function (element) {
        if (element) {
            element.classList.remove("n-vis");
            element.classList.add("vis")
        }
    };
    _this.hideElement = function (element) {
        if (element) {
            element.classList.remove("vis");
            element.classList.add("n-vis")
        }
    };
    _this.badgeCountOnLaucher = function(enablebadgecount,totalunreadCount) {
        var element = document.getElementById("applozic-badge-count");
        if(enablebadgecount === true && totalunreadCount > 0){
            if(totalunreadCount < 99){
                element.innerHTML = totalunreadCount;
            }
            else {
                element.innerHTML = "99+";
            }
            element.classList.add("mck-badge-count");
        }
        if(enablebadgecount === true && totalunreadCount === 0){
            element.innerHTML ="";
            element.classList.remove("mck-badge-count");
        }
    };
    _this.randomId = function () {
        return w.Math.random().toString(36).substring(7)
    };
    _this.textVal = function ($element) {
        var lines = [];
        var line = [];
        var flush = function () {
            lines.push(line.join(""));
            line = []
        };
        var sanitizeNode = function (node) {
            if (node.nodeType === TEXT_NODE) line.push(node.nodeValue);
            else if (node.nodeType === ELEMENT_NODE) {
                var tagName = node.tagName.toLowerCase();
                var isBlock = TAGS_BLOCK.indexOf(tagName) !== -1;
                if (isBlock &&
                    line.length) flush();
                if (tagName === "img") {
                    var alt = node.getAttribute("alt") || "";
                    if (alt) line.push(alt);
                    return
                } else if (tagName === "style") return;
                else if (tagName === "br") flush();
                var children = node.childNodes;
                for (var i = 0; i < children.length; i++) sanitizeNode(children[i]);
                if (isBlock && line.length) flush()
            }
        };
        var children = $element.childNodes;
        for (var i = 0; i < children.length; i++) sanitizeNode(children[i]);
        if (line.length) flush();
        return lines.join("\n")
    };
    _this.mouseX = function (evt) {
        if (evt.pageX) return evt.pageX;
        else if (evt.clientX) return evt.clientX +
            (d.documentElement.scrollLeft ? d.documentElement.scrollLeft : d.body.scrollLeft);
        else return null
    };
    _this.mouseY = function (evt) {
        if (evt.pageY) return evt.pageY;
        else if (evt.clientY) return evt.clientY + (d.documentElement.scrollTop ? d.documentElement.scrollTop : d.body.scrollTop);
        else return null
    };
    _this.startsWith = function (matcher, str) {
        if (str === null || typeof matcher === "undefined") return false;
        var i = str.length;
        if (matcher.length < i) return false;
        for (--i; i >= 0 && matcher[i] === str[i]; --i) continue;
        return i < 0
    };
    _this.setEndOfContenteditable =
        function (contentEditableElement) {
            var range, selection;
            if (document.createRange) {
                range = document.createRange();
                range.selectNodeContents(contentEditableElement);
                range.collapse(false);
                selection = window.getSelection();
                selection.removeAllRanges();
                selection.addRange(range)
            } else if (document.selection) {
                range = document.body.createTextRange();
                range.moveToElementText(contentEditableElement);
                range.collapse(false);
                range.select()
            }
        };
    this.encryptionKey = null;
    this.getEncryptionKey = function () {
        return this.encryptionKey
    };
    this.setEncryptionKey = function (key) {
        this.encryptionKey = key
    };
    _this.b64EncodeUnicode = function (str) {
        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function (match, p1) {
            return String.fromCharCode("0x" + p1)
        }))
    };
    _this.b64DecodeUnicode = function (str) {
        return decodeURIComponent(Array.prototype.map.call(atob(str), function (c) {
            return "%" + ("00" + c.charCodeAt(0).toString(16)).slice(-2)
        }).join(""))
    };
    _this.ajax = function (options) {
        var reqOptions = $applozic.extend({}, {}, options);
        if (this.getEncryptionKey()) {
            var key =
                aesjs.util.convertStringToBytes(this.getEncryptionKey());
            var iv = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
            if (reqOptions.type.toLowerCase() === "post") {
                while (options.data.length % 16 != 0) options.data += " ";
                var aesCtr = new aesjs.ModeOfOperation.ecb(key);
                var bytes = aesjs.util.convertStringToBytes(options.data);
                var encryptedBytes = aesCtr.encrypt(bytes);
                var encryptedStr = String.fromCharCode.apply(null, encryptedBytes);
                reqOptions.data = btoa(encryptedStr)
            }
            reqOptions.success = function (data) {
                var decodedData = atob(data);
                var arr = [];
                for (var i = 0; i < decodedData.length; i++) arr.push(decodedData.charCodeAt(i));
                var aesCtr = new aesjs.ModeOfOperation.ecb(key);
                var decryptedBytes = aesCtr.decrypt(arr);
                var res = aesjs.util.convertBytesToString(decryptedBytes);
                res = res.replace(/\\u0000/g, "").replace(/^\s*|\s*[\x00-\x10]*$/g, "");
                if (_this.isJsonString(res)) options.success(JSON.parse(res));
                else options.success(res)
            }
        }
        $applozic.ajax(reqOptions)
    };
    _this.isJsonString = function (str) {
        try {
            JSON.parse(str)
        } catch (e) {
            return false
        }
        return true
    }
}

function MckContactUtils() {
    var _this = this;
    _this.getContactId = function (contact) {
        var contactId = contact.contactId;
        return _this.formatContactId(contactId)
    };
    _this.formatContactId = function (contactId) {
        if (contactId.indexOf("+") === 0) contactId = contactId.substring(1);
        contactId = decodeURIComponent(contactId);
        return $applozic.trim(contactId.replace(/@/g, "AT").replace(/\./g, "DOT").replace(/\*/g, "STAR").replace(/#/g, "HASH").replace(/\|/g, "VBAR").replace(/\+/g, "PLUS").replace(/;/g, "SCOLON").replace(/\?/g, "QMARK").replace(/,/g,
            "COMMA").replace(/:/g, "COLON"))
    }
}

function MckMapUtils() {
    var _this = this;
    _this.getCurrentLocation = function (succFunc, errFunc) {
        w.navigator.geolocation.getCurrentPosition(succFunc, errFunc)
    };
    _this.getSelectedLocation = function () {
        return {
            lat: MCK_CURR_LATITIUDE,
            lon: MCK_CURR_LONGITUDE
        }
    }
}

function MckDateUtils() {
    var _this = this;
    var fullDateFormat = "mmm d, h:MM TT";
    var onlyDateFormat = "mmm d";
    var onlyTimeFormat = "h:MM TT";
    var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    _this.getDate = function (createdAtTime) {
        var date = new Date(parseInt(createdAtTime, 10));
        var currentDate = new Date;
        return currentDate.getDate() === date.getDate() && currentDate.getMonth() === date.getMonth() && currentDate.getYear() === date.getYear() ? dateFormat(date, onlyTimeFormat, false) : dateFormat(date,
            fullDateFormat, false)
    };
    _this.getLastSeenAtStatus = function (lastSeenAtTime) {
        var date = new Date(parseInt(lastSeenAtTime, 10));
        var currentDate = new Date;
        if (currentDate.getDate() === date.getDate() && currentDate.getMonth() === date.getMonth() && currentDate.getYear() === date.getYear()) {
            var hoursDiff = currentDate.getHours() - date.getHours();
            var timeDiff = w.Math.floor((currentDate.getTime() - date.getTime()) / 6E4);
            if (timeDiff < 60) return timeDiff <= 1 ? MCK_LABELS["last.seen"] + " 1 " + MCK_LABELS["min"] + " " + MCK_LABELS["ago"] : MCK_LABELS["last.seen"] +
                " " + timeDiff + MCK_LABELS["mins"] + " " + MCK_LABELS["ago"];
            return hoursDiff === 1 ? MCK_LABELS["last.seen"] + " 1 " + MCK_LABELS["hour"] + " " + MCK_LABELS["ago"] : MCK_LABELS["last.seen"] + " " + hoursDiff + MCK_LABELS["hours"] + " " + MCK_LABELS["ago"]
        } else if (currentDate.getDate() - date.getDate() === 1 && currentDate.getMonth() === date.getMonth() && currentDate.getYear() === date.getYear()) return MCK_LABELS["last.seen.on"] + " " + MCK_LABELS["yesterday"];
        else return MCK_LABELS["last.seen.on"] + " " + dateFormat(date, onlyDateFormat, false)
    };
    _this.getTimeOrDate = function (createdAtTime) {
        var timeStamp = new Date(createdAtTime);
        var currentTime = new Date(),
            secondsPast = (currentTime.getTime() - timeStamp.getTime() ) / 1000;
        if(secondsPast < 60){
            return (parseInt(secondsPast)<=1) ? parseInt(secondsPast) + ' sec ago' : parseInt(secondsPast) + ' secs ago';
        }
        if(secondsPast < 3600){
            return (parseInt(secondsPast/60)<=1) ? parseInt(secondsPast/60)  + ' min ago' : parseInt(secondsPast/60) + ' mins ago';
        }
        if(secondsPast <= 172800){
            return (parseInt(secondsPast/3600)<=1) ? parseInt(secondsPast/3600) + ' hr ago' : parseInt(secondsPast/3600) + ' hrs ago';
        }
        if(secondsPast > 172800){
              day = timeStamp.getDate();
              month = timeStamp.toDateString().match(/ [a-zA-Z]*/)[0].replace(" ","");
              year = timeStamp.getFullYear() == currentTime.getFullYear() ? "" :  " "+timeStamp.getFullYear();
              return day + " " + month + year;
        }
    };
    _this.getSystemDate = function (time) {
        var date = new Date(parseInt(time, 10));
        return dateFormat(date, fullDateFormat,
            false)
    };
    _this.convertMilisIntoTime = function (millisec) {
        var duration;
        var milliseconds = parseInt(millisec % 1E3 / 100),
            seconds = parseInt(millisec / 1E3 % 60),
            minutes = parseInt(millisec / (1E3 * 60) % 60),
            hours = parseInt(millisec / (1E3 * 60 * 60) % 24);
        if (hours > 0) duration = hours + " Hr " + minutes + " Min " + seconds + " Sec";
        else if (minutes > 0) duration = minutes + " Min " + seconds + " Sec";
        else duration = seconds + " Sec ";
        return duration
    };
    var dateFormat = function () {
        var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZ]|"[^"]*"|'[^']*'/g,
            timezone =
            /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g,
            timezoneClip = /[^-+\dA-Z]/g,
            pad = function (val, len) {
                val = String(val);
                len = len || 2;
                while (val.length < len) val = "0" + val;
                return val
            };
        return function (date, mask, utc) {
            var dF = dateFormat;
            if (arguments.length === 1 && Object.prototype.toString.call(date) === "[object String]" && !/\d/.test(date)) {
                mask = date;
                date = undefined
            }
            date = date ? new Date(date) : new Date;
            if (isNaN(date)) throw SyntaxError("invalid date");
            mask = String(mask);
            if (mask.slice(0, 4) === "UTC:") {
                mask = mask.slice(4);
                utc = true
            }
            var _ = utc ? "getUTC" : "get",
                d = date[_ + "Date"](),
                D = date[_ + "Day"](),
                m = date[_ + "Month"](),
                y = date[_ + "FullYear"](),
                H = date[_ + "Hours"](),
                M = date[_ + "Minutes"](),
                s = date[_ + "Seconds"](),
                L = date[_ + "Milliseconds"](),
                o = utc ? 0 : date.getTimezoneOffset(),
                flags = {
                    d: d,
                    dd: pad(d),
                    ddd: dF.i18n.dayNames[D],
                    dddd: dF.i18n.dayNames[D + 7],
                    m: m + 1,
                    mm: pad(m + 1),
                    mmm: dF.i18n.monthNames[m],
                    mmmm: dF.i18n.monthNames[m + 12],
                    yy: String(y).slice(2),
                    yyyy: y,
                    h: H % 12 || 12,
                    hh: pad(H % 12 ||
                        12),
                    H: H,
                    HH: pad(H),
                    M: M,
                    MM: pad(M),
                    s: s,
                    ss: pad(s),
                    l: pad(L, 3),
                    L: pad(L > 99 ? w.Math.round(L / 10) : L),
                    t: H < 12 ? "a" : "p",
                    tt: H < 12 ? "am" : "pm",
                    T: H < 12 ? "A" : "P",
                    TT: H < 12 ? "AM" : "PM",
                    Z: utc ? "UTC" : (String(date).match(timezone) || [""]).pop().replace(timezoneClip, ""),
                    o: (o > 0 ? "-" : "+") + pad(w.Math.floor(w.Math.abs(o) / 60) * 100 + w.Math.abs(o) % 60, 4),
                    S: ["th", "st", "nd", "rd"][d % 10 > 3 ? 0 : (d % 100 - d % 10 !== 10) * d % 10]
                };
            return mask.replace(token, function ($0) {
                return $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1)
            })
        }
    }();
    dateFormat.masks = {
        "default": "mmm d, yyyy h:MM TT",
        fullDateFormat: "mmm d, yyyy h:MM TT",
        onlyDateFormat: "mmm d",
        onlyTimeFormat: "h:MM TT",
        mailDateFormat: "mmm d, yyyy",
        mediumDate: "mmm d, yyyy",
        longDate: "mmmm d, yyyy",
        fullDate: "dddd, mmmm d, yyyy",
        shortTime: "h:MM TT",
        mediumTime: "h:MM:ss TT",
        longTime: "h:MM:ss TT Z",
        isoDate: "yyyy-mm-dd",
        isoTime: "HH:MM:ss",
        isoDateTime: "yyyy-mm-dd'T'HH:MM:ss",
        isoUtcDateTime: "UTC:yyyy-mm-dd'T'HH:MM:ss'Z'"
    };
    dateFormat.i18n = {
        dayNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday",
            "Friday", "Saturday"
        ],
        monthNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
    }
}(function (window) {
    function define_Applozic() {
        var Applozic = {};
        Applozic.init = function () {};
        return Applozic
    }
    if (typeof Applozic === "undefined") window.Applozic = define_Applozic();
    else console.log("Applozic already defined.")
})(window);
var ALStorage = function (win) {
    var MCK_LATEST_MESSAGE_ARRAY = [];
    var MCK_MESSAGE_ARRAY = [];
    var MCK_MESSAGE_MAP = [];
    var MCK_CONTACT_NAME_ARRAY = [];
    var FRIEND_LIST_GROUP_NAME;
    var FRIEND_LIST_GROUP_TYPE;
    return {
        updateLatestMessage: function (message) {
            var messageArray = [];
            messageArray.push(message);
            ALStorage.updateLatestMessageArray(messageArray);
            ALStorage.updateMckMessageArray(messageArray)
        },
        getLatestMessageArray: function () {
            return typeof w.sessionStorage !== "undefined" ? $applozic.parseJSON(w.sessionStorage.getItem("mckLatestMessageArray")) :
                MCK_LATEST_MESSAGE_ARRAY
        },
        getFriendListGroupName: function () {
            return typeof w.sessionStorage !== "undefined" ? w.sessionStorage.getItem("friendListGroupName") : FRIEND_LIST_GROUP_NAME
        },
        setFriendListGroupName: function (friendListGroupName) {
            if (typeof w.sessionStorage !== "undefined") w.sessionStorage.setItem("friendListGroupName", friendListGroupName);
            else FRIEND_LIST_GROUP_NAME = friendListGroupName
        },
        setFriendListGroupType: function (friendListGroupType) {
            if (typeof w.sessionStorage !== "undefined") w.sessionStorage.setItem("friendListGroupType",
                friendListGroupType);
            else FRIEND_LIST_GROUP_TYPE = friendListGroupType
        },
        getFriendListGroupType: function () {
            return typeof w.sessionStorage !== "undefined" ? w.sessionStorage.getItem("friendListGroupType") : FRIEND_LIST_GROUP_TYPE
        },
        setLatestMessageArray: function (messages) {
            if (typeof w.sessionStorage !== "undefined") w.sessionStorage.setItem("mckLatestMessageArray", w.JSON.stringify(messages));
            else MCK_LATEST_MESSAGE_ARRAY = messages
        },
        updateLatestMessageArray: function (mckMessageArray) {
            if (typeof w.sessionStorage !== "undefined") {
                var mckLocalMessageArray =
                    $applozic.parseJSON(w.sessionStorage.getItem("mckLatestMessageArray"));
                if (mckLocalMessageArray !== null) {
                    mckLocalMessageArray = mckLocalMessageArray.concat(mckMessageArray);
                    w.sessionStorage.setItem("mckLatestMessageArray", w.JSON.stringify(mckLocalMessageArray))
                } else w.sessionStorage.setItem("mckLatestMessageArray", w.JSON.stringify(mckMessageArray));
                return mckMessageArray
            } else {
                MCK_LATEST_MESSAGE_ARRAY = MCK_LATEST_MESSAGE_ARRAY.concat(mckMessageArray);
                return MCK_LATEST_MESSAGE_ARRAY
            }
        },
        getMckMessageArray: function () {
            return typeof w.sessionStorage !==
                "undefined" ? $applozic.parseJSON(w.sessionStorage.getItem("mckMessageArray")) : MCK_MESSAGE_ARRAY
        },
        clearMckMessageArray: function () {
            if (typeof w.sessionStorage !== "undefined") {
                w.sessionStorage.removeItem("mckMessageArray");
                w.sessionStorage.removeItem("mckLatestMessageArray")
            } else {
                MCK_MESSAGE_ARRAY.length = 0;
                MCK_LATEST_MESSAGE_ARRAY.length = 0
            }
        },
        clearAppHeaders: function () {
            if (typeof w.sessionStorage !== "undefined") w.sessionStorage.removeItem("mckAppHeaders")
        },
        setAppHeaders: function (data) {
            if (typeof w.sessionStorage !==
                "undefined") w.sessionStorage.setItem("mckAppHeaders", w.JSON.stringify(data))
        },
        getAppHeaders: function (data) {
            return typeof w.sessionStorage !== "undefined" ? $applozic.parseJSON(w.sessionStorage.getItem("mckAppHeaders")) : {}
        },
        getMessageByKey: function (key) {
            return MCK_MESSAGE_MAP[key]
        },
        updateMckMessageArray: function (mckMessageArray) {
            for (var i = 0; i < mckMessageArray.length; i++) {
                var message = mckMessageArray[i];
                MCK_MESSAGE_MAP[message.key] = message
            }
            if (typeof w.sessionStorage !== "undefined") {
                var mckLocalMessageArray =
                    $applozic.parseJSON(w.sessionStorage.getItem("mckMessageArray"));
                if (mckLocalMessageArray !== null) {
                    mckLocalMessageArray = mckLocalMessageArray.concat(mckMessageArray);
                    w.sessionStorage.setItem("mckMessageArray", w.JSON.stringify(mckLocalMessageArray))
                } else w.sessionStorage.setItem("mckMessageArray", w.JSON.stringify(mckMessageArray));
                return mckMessageArray
            } else {
                MCK_MESSAGE_ARRAY = MCK_MESSAGE_ARRAY.concat(mckMessageArray);
                return MCK_MESSAGE_ARRAY
            }
        },
        getMckContactNameArray: function () {
            return typeof w.sessionStorage !==
                "undefined" ? $applozic.parseJSON(w.sessionStorage.getItem("mckContactNameArray")) : MCK_CONTACT_NAME_ARRAY
        },
        setMckContactNameArray: function (mckContactNameArray) {
            if (typeof w.sessionStorage !== "undefined") w.sessionStorage.setItem("mckContactNameArray", w.JSON.stringify(mckContactNameArray));
            else MCK_CONTACT_NAME_ARRAY = mckContactNameArray
        },
        updateMckContactNameArray: function (mckContactNameArray) {
            if (typeof w.sessionStorage !== "undefined") {
                var mckLocalcontactNameArray = $applozic.parseJSON(w.sessionStorage.getItem("mckContactNameArray"));
                if (mckLocalcontactNameArray !== null) mckContactNameArray = mckContactNameArray.concat(mckLocalcontactNameArray);
                w.sessionStorage.setItem("mckContactNameArray", w.JSON.stringify(mckContactNameArray));
                return mckContactNameArray
            } else {
                MCK_CONTACT_NAME_ARRAY = MCK_CONTACT_NAME_ARRAY.concat(mckContactNameArray);
                return MCK_CONTACT_NAME_ARRAY
            }
        },
        clearMckContactNameArray: function () {
            if (typeof w.sessionStorage !== "undefined") w.sessionStorage.removeItem("mckContactNameArray");
            else MCK_CONTACT_NAME_ARRAY.length = 0
        }
    }
}(window);
(function (window) {
    function define_ALApiService(getBaseUrl) {
        var ALApiService = {};
        var MCK_APP_ID = "";
        var mckUtils = new MckUtils;
        var MCK_BASE_URL = "https://apps.applozic.com";
        var MCK_FILE_URL = "https://applozic.appspot.com";
        var INITIALIZE_APP_URL = "/v2/tab/initialize.page";
        var MESSAGE_LIST_URL = "/rest/ws/message/list";
        var MESSAGE_SEND_URL = "/rest/ws/message/send";
        var GROUP_CREATE_URL = "/rest/ws/group/create";
        var GROUP_LIST_URL = "/rest/ws/group/list";
        var GROUP_INFO_URL = "/rest/ws/group/v2/info";
        var GROUP_ADD_MEMBER_URL =
            "/rest/ws/group/add/member";
        var GROUP_REMOVE_MEMBER_URL = "/rest/ws/group/remove/member";
        var GROUP_LEFT_URL = "/rest/ws/group/left";
        var GROUP_UPDATE_URL = "/rest/ws/group/update";
        var GROUP_IS_USER_PRESENT_URL = "/rest/ws/group/check/user";
        var GROUP_USER_COUNT_URL = "/rest/ws/group/user/count";
        var FRIEND_LIST_URL = "/rest/ws/group/";
        var GET_USER_DETAIL_URL = "/rest/ws/user/v2/detail";
        var UPDATE_USER_DETAIL_URL = "/rest/ws/user/update";
        var USER_FILTER = "/rest/ws/user/filter";
        var LOGOUT = "/rest/ws/device/logout";
        var USER_FILTER_BY_ROLE =
            "/rest/ws/user/v3/filter";
        var USER_BLOCK_URL = "/rest/ws/user/block";
        var USER_UNBLOCK_URL = "/rest/ws/user/unblock";
        var UPDATE_PASSWORD_URL = "/rest/ws/user/update/password";
        var UPDATE_REPLY_MAP = "/rest/ws/message/detail";
        var MESSAGE_DELETE_URL = "/rest/ws/message/delete";
        var MESSAGE_READ_UPDATE_URL = "/rest/ws/message/read";
        var MESSAGE_DELIVERY_UPDATE_URL = "/rest/ws/message/delivered";
        var CONVERSATION_CLOSE_UPDATE_URL = "/rest/ws/conversation/close";
        var FILE_PREVIEW_URL = "/rest/ws/aws/file";
        var FILE_UPLOAD_URL =
            "/rest/ws/aws/file/url";
        var FILE_AWS_UPLOAD_URL = "/rest/ws/upload/file";
        var FILE_DELETE_URL = "/rest/ws/aws/file/delete";
        var MESSAGE_ADD_INBOX_URL = "/rest/ws/message/add/inbox";
        var CONVERSATION_READ_UPDATE_URL = "/rest/ws/message/read/conversation";
        var CONVERSATION_DELETE_URL = "/rest/ws/message/delete/conversation";
        var ONE_TO_ONE_MUTE_URL = "/rest/ws/user/chat/mute";
        var GROUP_MUTE_URL = "/rest/ws/group/user/update";
        var REGISTER_CLIENT_URL = "/rest/ws/register/client";
        var SYNC_MUTE_USER_URL = "/rest/ws/user/chat/mute/list";
        var TOPIC_ID_URL = "/rest/ws/conversation/topicId";
        var CONTACT_NAME_URL = "/rest/ws/user/info";
        var USER_STATUS_URL = "/rest/ws/user/chat/status";
        var CONVERSATION_FETCH_URL = "/rest/ws/conversation/get";
        var CONVERSATION_ID_URL = "/rest/ws/conversation/id";
        var FILE_AWS_UPLOAD_URL = "/rest/ws/upload/file";
        var ATTACHMENT_UPLOAD_URL = "/rest/ws/upload/image";
        var PUSH_NOTIFICATION_LOGOUT = "/rest/ws/device/logout";
        var MCK_SW_REGISTER_URL = "/rest/ws/plugin/update/sw/id";
        var ACCESS_TOKEN;
        var DEVICE_KEY;
        var APP_MODULE_NAME;
        var AUTH_CODE;

        function getAsUriParameters(data) {
            var url = "";
            for (var prop in data) url += encodeURIComponent(prop) + "\x3d" + encodeURIComponent(data[prop]) + "\x26";
            return url.substring(0, url.length - 1)
        }
        ALApiService.getFileUrl = function () {
            return MCK_FILE_URL
        };
        ALApiService.initServerUrl = function (serverUrl) {
            MCK_BASE_URL = serverUrl
        };
        ALApiService.login = function (options) {
            MCK_APP_ID = options.data.alUser.applicationId;
            MCK_BASE_URL = options.data.baseUrl ? options.data.baseUrl : "https://apps.applozic.com";
            ALApiService.ajax({
                url: MCK_BASE_URL +
                    INITIALIZE_APP_URL,
                skipEncryption: true,
                type: "post",
                async: typeof options.async !== "undefined" ? options.async : true,
                data: JSON.stringify(options.data.alUser),
                contentType: "application/json",
                headers: {
                    "Application-Key": MCK_APP_ID
                },
                success: function (response) {
                    mckUtils.setEncryptionKey(response.encryptionKey);
                    AUTH_CODE = btoa(response.userId + ":" + response.deviceKey);
                    DEVICE_KEY = response.deviceKey;
                    ACCESS_TOKEN = options.data.alUser.password;
                    APP_MODULE_NAME = options.data.alUser.appModuleName;
                    ALApiService.setAjaxHeaders(AUTH_CODE,
                        MCK_APP_ID, response.deviceKey, options.data.alUser.password, options.data.alUser.appModuleName);
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.getAttachmentHeaders = function () {
            var headers = {
                "UserId-Enabled": true,
                "Authorization": "Basic " + AUTH_CODE,
                "Application-Key": MCK_APP_ID,
                "Device-Key": DEVICE_KEY
            };
            if (ACCESS_TOKEN) headers["Access-Token"] = ACCESS_TOKEN;
            return headers
        }, ALApiService.setAjaxHeaders = function (authcode, appId, devKey,
            accToken, modName) {
            MCK_APP_ID = appId;
            AUTH_CODE = authcode;
            DEVICE_KEY = devKey;
            ACCESS_TOKEN = accToken;
            APP_MODULE_NAME = modName
        };
        ALApiService.ajax = function (options) {
            function extend() {
                for (var i = 1; i < arguments.length; i++)
                    for (var key in arguments[i])
                        if (arguments[i].hasOwnProperty(key)) arguments[0][key] = arguments[i][key];
                return arguments[0]
            }
            var reqOptions = extend({}, {}, options);
            if (!(options.skipEncryption === true) && mckUtils.getEncryptionKey()) {
                var key = aesjs.util.convertStringToBytes(mckUtils.getEncryptionKey());
                var iv = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                if (reqOptions.type.toLowerCase() === "post") {
                    while (options.data.length % 16 != 0) options.data += " ";
                    var aesCtr = new aesjs.ModeOfOperation.ecb(key);
                    var bytes = aesjs.util.convertStringToBytes(options.data);
                    var encryptedBytes = aesCtr.encrypt(bytes);
                    var encryptedStr = String.fromCharCode.apply(null, encryptedBytes);
                    reqOptions.data = btoa(encryptedStr)
                }
                reqOptions.success = function (data) {
                    var decodedData = atob(data);
                    var arr = [];
                    for (var i = 0; i < decodedData.length; i++) arr.push(decodedData.charCodeAt(i));
                    var aesCtr = new aesjs.ModeOfOperation.ecb(key);
                    var decryptedBytes = aesCtr.decrypt(arr);
                    var res = aesjs.util.convertBytesToString(decryptedBytes);
                    res = res.replace(/\\u0000/g, "").replace(/^\s*|\s*[\x00-\x10]*$/g, "");
                    if (mckUtils.isJsonString(res)) options.success(JSON.parse(res));
                    else options.success(res)
                }
            }
            var request = new XMLHttpRequest;
            var responsedata;
            var asyn = true;
            var cttype;
            if (typeof reqOptions.async !== "undefined" || options.async) asyn = reqOptions.async;
            var typ = reqOptions.type.toUpperCase();
            if (typ === "GET" &&
                typeof reqOptions.data !== "undefined") reqOptions.url = reqOptions.url + "?" + reqOptions.data;
            request.open(typ, reqOptions.url, asyn);
            if (typ === "POST" || typ === "GET") {
                if (typeof reqOptions.contentType === "undefined") cttype = "application/x-www-form-urlencoded; charset\x3dUTF-8";
                else cttype = reqOptions.contentType;
                request.setRequestHeader("Content-Type", cttype)
            }
            MCK_BASE_URL = MCK_BASE_URL ? MCK_BASE_URL : "https://apps.applozic.com";
            if (reqOptions.url.indexOf(MCK_BASE_URL) !== -1) {
                request.setRequestHeader("UserId-Enabled",
                    true);
                if (AUTH_CODE) request.setRequestHeader("Authorization", "Basic " + AUTH_CODE);
                request.setRequestHeader("Application-Key", MCK_APP_ID);
                if (DEVICE_KEY) request.setRequestHeader("Device-Key", DEVICE_KEY);
                if (ACCESS_TOKEN) request.setRequestHeader("Access-Token", ACCESS_TOKEN);
                if (APP_MODULE_NAME) request.setRequestHeader("App-Module-Name", APP_MODULE_NAME)
            }
            if (typeof reqOptions.data === "undefined") request.send();
            else request.send(reqOptions.data);
            request.onreadystatechange = function () {
                if (request.readyState === XMLHttpRequest.DONE)
                    if (request.status ===
                        200) {
                        var contType = request.getResponseHeader("Content-Type");
                        if (typeof contType === "undefined" || contType === "null" || contType === null) contType = "";
                        if (contType.toLowerCase().indexOf("text/html") != -1) responsedata = request.responseXML;
                        else if (contType.toLowerCase().indexOf("application/json") != -1) responsedata = JSON.parse(request.responseText);
                        else responsedata = request.responseText;
                        reqOptions.success(responsedata)
                    } else reqOptions.error(responsedata)
            }
        };
        ALApiService.getMessages = function (options) {
            if (options.data.userId ||
                options.data.groupId) {
                if (options.data.pageSize === "undefined") options.data.pageSize = 30
            } else if (typeof options.data.mainPageSize === "undefined") options.data.mainPageSize = 60;
            var data = getAsUriParameters(options.data);
            var response = new Object;
            ALApiService.ajax({
                url: MCK_BASE_URL + MESSAGE_LIST_URL + "?" + data,
                async: typeof options.async !== "undefined" ? options.async : true,
                type: "get",
                success: function (data) {
                    response.status = "success";
                    response.data = data;
                    if (options.success) options.success(response);
                    return
                },
                error: function (xhr,
                    desc, err) {
                    response.status = "error";
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.sendMessage = function (options) {
            ALApiService.ajax({
                type: "POST",
                url: MCK_BASE_URL + MESSAGE_SEND_URL,
                global: false,
                data: JSON.stringify(options.data.message),
                async: typeof options.async !== "undefined" ? options.async : true,
                contentType: "application/json",
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.sendDeliveryUpdate = function (options) {
            ALApiService.ajax({
                url: MCK_BASE_URL + MESSAGE_DELIVERY_UPDATE_URL,
                data: "key\x3d" + options.data.key,
                global: false,
                type: "get",
                async: typeof options.async !== "undefined" ? options.async : true,
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.sendReadUpdate = function (options) {
            ALApiService.ajax({
                url: MCK_BASE_URL + MESSAGE_READ_UPDATE_URL,
                data: "key\x3d" + options.data.key,
                global: false,
                type: "get",
                async: typeof options.async !== "undefined" ? options.async : true,
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.deleteMessage = function (options) {
            ALApiService.ajax({
                url: MCK_BASE_URL + MESSAGE_DELETE_URL + "?key\x3d" + options.data.key,
                global: false,
                type: "get",
                async: typeof options.async !== "undefined" ? options.async : true,
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.updateReplyMessage = function (options) {
            ALApiService.ajax({
                url: MCK_BASE_URL + UPDATE_REPLY_MAP + "?keys\x3d" + options.data.key,
                type: "get",
                async: typeof options.async !== "undefined" ? options.async : true,
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.deleteConversation = function (options) {
            ALApiService.ajax({
                url: MCK_BASE_URL + CONVERSATION_DELETE_URL,
                type: "get",
                async: typeof options.async !== "undefined" ?
                    options.async : true,
                global: false,
                data: getAsUriParameters(options.data),
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.createGroup = function (options) {
            ALApiService.ajax({
                url: MCK_BASE_URL + GROUP_CREATE_URL,
                global: false,
                data: JSON.stringify(options.data.group),
                type: "post",
                async: typeof options.async !== "undefined" ? options.async : true,
                contentType: "application/json",
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.loadGroups = function (options) {
            if (options.baseUrl) MCK_BASE_URL = options.baseUrl;
            ALApiService.ajax({
                url: MCK_BASE_URL + GROUP_LIST_URL,
                type: "get",
                async: typeof options.async !== "undefined" ? options.async : true,
                global: false,
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.getGroupInfo = function (options) {
            var groupId = options.data.groupId ?
                "?groupId\x3d" + options.data.groupId : "?clientGroupId\x3d" + options.data.clientGroupId;
            ALApiService.ajax({
                url: MCK_BASE_URL + GROUP_INFO_URL + groupId,
                type: "get",
                async: typeof options.async !== "undefined" ? options.async : true,
                global: false,
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.addGroupMember = function (options) {
            ALApiService.ajax({
                url: MCK_BASE_URL + GROUP_ADD_MEMBER_URL,
                type: "POST",
                data: JSON.stringify(options.data.group),
                async: typeof options.async !== "undefined" ? options.async : true,
                global: false,
                contentType: "application/json",
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.removeGroupMember = function (options) {
            ALApiService.ajax({
                url: MCK_BASE_URL + GROUP_REMOVE_MEMBER_URL,
                type: "POST",
                data: JSON.stringify(options.data),
                async: typeof options.async !== "undefined" ? options.async : true,
                global: false,
                contentType: "application/json",
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.groupLeave = function (options) {
            ALApiService.ajax({
                url: MCK_BASE_URL + GROUP_LEFT_URL,
                type: "POST",
                data: JSON.stringify(options.data),
                async: typeof options.async !== "undefined" ? options.async : true,
                global: false,
                contentType: "application/json",
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.groupUpdate = function (options) {
            ALApiService.ajax({
                url: MCK_BASE_URL + GROUP_UPDATE_URL,
                type: "POST",
                data: JSON.stringify(options.data),
                async: typeof options.async !== "undefined" ? options.async : true,
                global: false,
                contentType: "application/json",
                success: function (response) {
                    if (options.success) options.success(response, options.data.group)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.isUserPresentInGroup = function (options) {
            ALApiService.ajax({
                url: MCK_BASE_URL + GROUP_IS_USER_PRESENT_URL +
                    "?userId\x3d" + options.data.userId + "\x26clientGroupId\x3d" + options.data.clientGroupId,
                type: "get",
                async: typeof options.async !== "undefined" ? options.async : true,
                global: false,
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.groupUserCount = function (options) {
            ALApiService.ajax({
                url: MCK_BASE_URL + GROUP_USER_COUNT_URL + "?clientGroupIds\x3d" + options.data.clientGroupId,
                type: "get",
                async: typeof options.async !==
                    "undefined" ? options.async : true,
                global: false,
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.groupDelete = function (options) {
            ALApiService.ajax({
                url: MCK_BASE_URL + GROUP_LEFT_URL + "?clientGroupId\x3d" + options.data.clientGroupId,
                type: "GET",
                async: typeof options.async !== "undefined" ? options.async : true,
                global: false,
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.createUserFriendList = function (options) {
            ALApiService.ajax({
                url: MCK_BASE_URL + FRIEND_LIST_URL + options.data.group.groupName + "/add/",
                type: "POST",
                async: typeof options.async !== "undefined" ? options.async : true,
                global: false,
                data: JSON.stringify(options.data.group.groupMemberList),
                contentType: "application/json",
                success: function (response) {
                    if (options.success) {
                        options.success(response);
                        ALStorage.setFriendListGroupName(options.data.group.groupName)
                    }
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.createOpenFriendList = function (options) {
            ALApiService.ajax({
                url: MCK_BASE_URL + FRIEND_LIST_URL + options.data.group.groupName + "/add/members",
                type: "POST",
                data: JSON.stringify(options.data.group),
                async: typeof options.async !== "undefined" ? options.async : true,
                global: false,
                contentType: "application/json",
                success: function (response) {
                    if (options.success) {
                        options.success(response);
                        ALStorage.setFriendListGroupName(options.data.group.groupName);
                        ALStorage.setFriendListGroupType(options.data.group.type)
                    }
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.getFriendList = function (options) {
            var getFriendListUrl = options.data.type !== "null" ? "/get?groupType\x3d9" : "/get";
            options.data.url = options.data.url ? options.data.url : getFriendListUrl;
            ALApiService.ajax({
                url: MCK_BASE_URL + FRIEND_LIST_URL + options.data.groupName + options.data.url,
                type: "GET",
                async: typeof options.data.async !== "undefined" ? options.data.async : true,
                global: false,
                contentType: "application/json",
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.removeUserFromFriendList = function (options) {
            var getFriendListUrl = options.group.type ? "/remove?userId\x3d" + options.group.userId + "\x26groupType\x3d9" : "/remove?userId\x3d" + options.group.userId;
            ALApiService.ajax({
                url: MCK_BASE_URL + FRIEND_LIST_URL + options.group.groupName + getFriendListUrl,
                type: "Post",
                contentType: "application/json",
                async: typeof options.async !== "undefined" ? options.async : true,
                global: false,
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.deleteFriendList = function (options) {
            var getFriendListUrl = options.group.type ? "/delete?groupType\x3d9" : "/delete";
            ALApiService.ajax({
                url: MCK_BASE_URL + FRIEND_LIST_URL + options.group.groupName + getFriendListUrl,
                type: "GET",
                async: false,
                contentType: "application/json",
                async: typeof options.async !== "undefined" ? options.async : true,
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.getUserDetail = function (options) {
            ALApiService.ajax({
                url: MCK_BASE_URL +
                    GET_USER_DETAIL_URL,
                data: JSON.stringify({
                    userIdList: options.data.userIdList
                }),
                type: "POST",
                async: typeof options.async !== "undefined" ? options.async : true,
                global: false,
                contentType: "application/json",
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.updateUserDetail = function (options) {
            ALApiService.ajax({
                url: MCK_BASE_URL + UPDATE_USER_DETAIL_URL,
                data: JSON.stringify(options.data),
                type: "POST",
                async: typeof options.async !==
                    "undefined" ? options.async : true,
                global: false,
                contentType: "application/json",
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.updatePassword = function (options) {
            ALApiService.ajax({
                url: MCK_BASE_URL + UPDATE_PASSWORD_URL + "?oldPassword\x3d" + options.data.oldPassword + "\x26newPassword\x3d" + options.data.newPassword,
                type: "GET",
                async: typeof options.async !== "undefined" ? options.async : true,
                global: false,
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.getContactList = function (options) {
            var baseurl = options.baseUrl ? options.baseUrl : MCK_BASE_URL;
            ALApiService.ajax({
                url: baseurl + options.url,
                type: "GET",
                async: typeof options.async !== "undefined" ? options.async : true,
                global: false,
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.userChatMute = function (options) {
            ALApiService.ajax({
                url: MCK_BASE_URL +
                    ONE_TO_ONE_MUTE_URL + "?userId\x3d" + options.data.userId + "\x26notificationAfterTime\x3d" + options.data.notificationAfterTime,
                type: "post",
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.groupMute = function (options) {
            var group = {};
            group.clientGroupId = options.data.clientGroupId;
            group.notificationAfterTime = options.data.notificationAfterTime;
            ALApiService.ajax({
                url: MCK_BASE_URL + GROUP_MUTE_URL,
                type: "post",
                data: JSON.stringify(group),
                contentType: "application/json",
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.syncMuteUserList = function (options) {
            ALApiService.ajax({
                url: MCK_BASE_URL + SYNC_MUTE_USER_URL,
                type: "get",
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.blockUser = function (options) {
            ALApiService.ajax({
                url: MCK_BASE_URL +
                    USER_BLOCK_URL + "?userId\x3d" + options.data.userId + "\x26block\x3d" + options.data.isBlock,
                type: "GET",
                async: typeof options.async !== "undefined" ? options.async : true,
                global: false,
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.unBlockUser = function (options) {
            ALApiService.ajax({
                url: MCK_BASE_URL + USER_UNBLOCK_URL + "?userId\x3d" + options.data.userId,
                type: "GET",
                async: typeof options.async !== "undefined" ? options.async : true,
                global: false,
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.sendConversationCloseUpdate = function (options) {
            var data = "id\x3d" + options.conversationId;
            ALApiService.ajax({
                url: MCK_BASE_URL + CONVERSATION_CLOSE_UPDATE_URL,
                data: data,
                global: false,
                type: "get",
                success: function () {},
                error: function () {}
            })
        };
        ALApiService.fileUpload = function (options) {
            ALApiService.ajax({
                type: "GET",
                url: options.data.url,
                global: false,
                data: "data\x3d" + (new Date).getTime(),
                crosDomain: true,
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.sendAttachment = function (options) {
            var data = new FormData;
            var xhr = new XMLHttpRequest;
            xhr.addEventListener("load", function (e) {
                var file = this.responseText;
                var message = options.data.messagePxy;
                if (file) {
                    message.fileMeta = JSON.parse(file);
                    Applozic.ALApiService.sendMessage({
                        data: message,
                        success: function (response) {
                            console.log(response)
                        },
                        error: function () {}
                    })
                }
            });
            data.append("file", options.data.file);
            xhr.open("post", MCK_BASE_URL + ATTACHMENT_UPLOAD_URL, true);
            xhr.setRequestHeader("UserId-Enabled", true);
            xhr.setRequestHeader("Authorization", "Basic " + AUTH_CODE);
            xhr.setRequestHeader("Application-Key", MCK_APP_ID);
            xhr.setRequestHeader("Device-Key", DEVICE_KEY);
            if (ACCESS_TOKEN) xhr.setRequestHeader("Access-Token", ACCESS_TOKEN);
            xhr.send(data)
        };
        ALApiService.deleteFileMeta = function (options) {
            ALApiService.ajax({
                url: options.data.url,
                type: "post",
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.addMessageInbox = function (options) {
            ALApiService.ajax({
                type: "GET",
                url: MCK_BASE_URL + MESSAGE_ADD_INBOX_URL,
                global: false,
                data: "sender\x3d" + encodeURIComponent(options.data.sender) + "\x26messageContent\x3d" + encodeURIComponent(options.data.messageContent),
                contentType: "text/plain",
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.conversationReadUpdate =
            function (options) {
                ALApiService.ajax({
                    url: MCK_BASE_URL + CONVERSATION_READ_UPDATE_URL,
                    data: options.data,
                    global: false,
                    type: "get",
                    success: function (response) {
                        if (options.success) options.success(response)
                    },
                    error: function (response) {
                        if (options.error) options.success(response)
                    }
                })
            };
        ALApiService.sendSubscriptionIdToServer = function (options) {
            var subscriptionId = options.data.subscriptionId;
            ALApiService.ajax({
                url: MCK_BASE_URL + MCK_SW_REGISTER_URL,
                type: "post",
                data: "registrationId\x3d" + subscriptionId,
                success: function (data) {},
                error: function (xhr, desc, err) {
                    if (xhr.status === 401) {
                        sessionStorage.clear();
                        console.log("Please reload page.")
                    }
                }
            })
        };
        ALApiService.getTopicId = function (options) {
            var conversationId = "id\x3d" + options.data.conversationId;
            ALApiService.ajax({
                url: MCK_BASE_URL + TOPIC_ID_URL + "?" + conversationId,
                type: "get",
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.success(response)
                }
            })
        };
        ALApiService.getContactDisplayName = function (options) {
            var userIdArray =
                options.data.userIdArray;
            if (userIdArray.length > 0 && userIdArray[0]) {
                var data = "";
                var uniqueUserIdArray = userIdArray.filter(function (item, pos) {
                    return userIdArray.indexOf(item) === pos
                });
                for (var i = 0; i < uniqueUserIdArray.length; i++) {
                    var userId = uniqueUserIdArray[i];
                    if (typeof MCK_CONTACT_NAME_MAP[userId] === "undefined") data += "userIds\x3d" + encodeURIComponent(userId) + "\x26"
                }
                if (data.lastIndexOf("\x26") === data.length - 1) data = data.substring(0, data.length - 1);
                if (data) ALApiService.ajax({
                    url: MCK_BASE_URL + CONTACT_NAME_URL,
                    data: data,
                    global: false,
                    type: "get",
                    success: function (response) {
                        if (options.success) options.success(response)
                    },
                    error: function (response) {
                        if (options.error) options.success(response)
                    }
                })
            }
        };
        ALApiService.getUserStatus = function (options) {
            ALApiService.ajax({
                url: MCK_BASE_URL + USER_STATUS_URL,
                type: "get",
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.success(response)
                }
            })
        };
        ALApiService.fetchConversationByTopicId = function (options) {
            var reqdata =
                "topic\x3d" + options.data.topicId;
            if (options.data.tabId) reqdata += "" + options.data.isGroup === "true" ? "\x26groupId\x3d" + options.data.tabId : "\x26userId\x3d" + encodeURIComponent(options.data.tabId);
            else if (options.data.clientGroupId) reqdata += "\x26clientGroupId\x3d" + options.data.clientGroupId;
            else return false;
            if (options.data.pageSize) reqdata += "\x26pageSize\x3d" + options.data.pageSize;
            ALApiService.ajax({
                url: MCK_BASE_URL + CONVERSATION_FETCH_URL,
                data: reqdata,
                type: "get",
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.success(response)
                }
            })
        };
        ALApiService.getConversationId = function (options) {
            ALApiService.ajax({
                url: MCK_BASE_URL + CONVERSATION_ID_URL,
                global: false,
                data: w.JSON.stringify(options.data),
                type: "post",
                contentType: "application/json",
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.success(response)
                }
            })
        };
        ALApiService.registerClientApi = function (options) {
            ALApiService.ajax({
                url: MCK_BASE_URL + REGISTER_CLIENT_URL,
                type: "post",
                data: JSON.stringify(options.data.userPxy),
                contentType: "application/json",
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.success(response)
                }
            })
        };
        ALApiService.logout = function (options) {
            ALApiService.ajax({
                url: MCK_BASE_URL + LOGOUT,
                type: "post",
                async: typeof options.async !== "undefined" ? options.async : true,
                contentType: "application/json",
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        ALApiService.getUsersByRole = function (options) {
            var data = getAsUriParameters(options.data);
            ALApiService.ajax({
                url: MCK_BASE_URL + USER_FILTER_BY_ROLE + "?" + data,
                global: false,
                type: "get",
                contentType: "application/json",
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.success(response)
                }
            })
        };
        ALApiService.pushNotificationLogout = function (options) {
            ALApiService.ajax({
                url: MCK_BASE_URL + PUSH_NOTIFICATION_LOGOUT,
                type: "post",
                async: typeof options.async !==
                    "undefined" ? options.async : true,
                contentType: "application/json",
                success: function (response) {
                    if (options.success) options.success(response)
                },
                error: function (response) {
                    if (options.error) options.error(response)
                }
            })
        };
        return ALApiService
    }
    if (typeof ALApiService === "undefined") window.Applozic.ALApiService = define_ALApiService();
    else console.log("ALApiService already defined.")
})(window);
(function (window) {
    function define_ALSocket() {
        var ALSocket = {};
        var MCK_APP_ID;
        ALSocket.events = {};
        var subscriber = null;
        ALSocket.stompClient = null;
        var TYPING_TAB_ID = "";
        ALSocket.typingSubscriber = null;
        var openGroupSubscriber = [];
        var checkConnectedIntervalId;
        var sendConnectedStatusIntervalId;
        var OPEN_GROUP_SUBSCRIBER_MAP;
        ALSocket.mck_typing_status = 0;
        var MCK_TYPING_STATUS;
        var SOCKET = "";
        var MCK_WEBSOCKET_URL = "https://apps.applozic.com";
        var MCK_TOKEN;
        var USER_DEVICE_KEY;
        var mckUtils = new MckUtils;
        ALSocket.init =
            function (appId, data, _events) {
                if (appId) MCK_APP_ID = appId;
                if (typeof data !== "undefined") {
                    MCK_TOKEN = data.token;
                    USER_DEVICE_KEY = data.deviceKey;
                    MCK_WEBSOCKET_URL = data.websocketUrl
                }
                ALSocket.events = _events;
                if (typeof MCK_WEBSOCKET_URL !== "undefined") {
                    var port = !mckUtils.startsWith(MCK_WEBSOCKET_URL, "https") ? "15674" : "15675";
                    if (typeof SockJS === "function") {
                        if (!SOCKET) SOCKET = new SockJS(MCK_WEBSOCKET_URL + ":" + port + "/stomp");
                        ALSocket.stompClient = Stomp.over(SOCKET);
                        ALSocket.stompClient.heartbeat.outgoing = 0;
                        ALSocket.stompClient.heartbeat.incoming =
                            0;
                        ALSocket.stompClient.onclose = function () {
                            ALSocket.disconnect()
                        };
                        ALSocket.stompClient.connect("guest", "guest", ALSocket.onConnect, ALSocket.onError, "/");
                        window.addEventListener("beforeunload", function (e) {
                            var check_url = e.target.activeElement.href;
                            if (!check_url || 0 === check_url.length) ALSocket.disconnect()
                        })
                    }
                }
            };
        ALSocket.checkConnected = function (isFetchMessages) {
            if (ALSocket.stompClient.connected) {
                if (checkConnectedIntervalId) clearInterval(checkConnectedIntervalId);
                if (sendConnectedStatusIntervalId) clearInterval(sendConnectedStatusIntervalId);
                checkConnectedIntervalId = setInterval(function () {
                    ALSocket.connectToSocket(isFetchMessages)
                }, 6E5);
                sendConnectedStatusIntervalId = setInterval(function () {
                    ALSocket.sendStatus(1)
                }, 12E5)
            } else ALSocket.connectToSocket(isFetchMessages)
        };
        ALSocket.connectToSocket = function (isFetchMessages) {
            if (typeof ALSocket.connectToSocket === "function") ALSocket.events.connectToSocket(isFetchMessages)
        };
        ALSocket.stopConnectedCheck = function () {
            if (checkConnectedIntervalId) clearInterval(checkConnectedIntervalId);
            if (sendConnectedStatusIntervalId) clearInterval(sendConnectedStatusIntervalId);
            checkConnectedIntervalId = "";
            sendConnectedStatusIntervalId = "";
            ALSocket.disconnect()
        };
        ALSocket.disconnect = function () {
            if (ALSocket.stompClient && ALSocket.stompClient.connected) {
                ALSocket.sendStatus(0);
                ALSocket.stompClient.disconnect()
            }
        };
        ALSocket.unsubscibeToTypingChannel = function () {
            if (ALSocket.stompClient && ALSocket.stompClient.connected)
                if (ALSocket.typingSubscriber) {
                    if (ALSocket.mck_typing_status === 1) ALSocket.sendTypingStatus(0, TYPING_TAB_ID);
                    ALSocket.typingSubscriber.unsubscribe()
                }
            ALSocket.typingSubscriber =
                null
        };
        ALSocket.unsubscibeToNotification = function () {
            if (ALSocket.stompClient && ALSocket.stompClient.connected)
                if (subscriber) subscriber.unsubscribe();
            subscriber = null
        };
        ALSocket.subscibeToTypingChannel = function (subscribeId) {
            if (ALSocket.stompClient && ALSocket.stompClient.connected) ALSocket.typingSubscriber = ALSocket.stompClient.subscribe("/topic/typing-" + MCK_APP_ID + "-" + subscribeId, ALSocket.onTypingStatus);
            else ALSocket.reconnect()
        };
        ALSocket.subscribeToOpenGroup = function (group) {
            if (ALSocket.stompClient && ALSocket.stompClient.connected) {
                var subs =
                    ALSocket.stompClient.subscribe("/topic/group-" + MCK_APP_ID + "-" + group.contactId, ALSocket.onOpenGroupMessage);
                openGroupSubscriber.push(subs.id);
                OPEN_GROUP_SUBSCRIBER_MAP[group.contactId] = subs.id
            } else ALSocket.reconnect()
        };
        ALSocket.sendTypingStatus = function (status, mck_typing_status, MCK_USER_ID, tabId) {
            ALSocket.mck_typing_status = mck_typing_status;
            if (ALSocket.stompClient && ALSocket.stompClient.connected) {
                if (status === 1 && ALSocket.mck_typing_status === 1) ALSocket.stompClient.send("/topic/typing-" + MCK_APP_ID + "-" +
                    TYPING_TAB_ID, {
                        "content-type": "text/plain"
                    }, MCK_APP_ID + "," + MCK_USER_ID + "," + status);
                if (tabId) {
                    if (tabId === TYPING_TAB_ID && status === ALSocket.mck_typing_status && status === 1) return;
                    TYPING_TAB_ID = tabId;
                    ALSocket.stompClient.send("/topic/typing-" + MCK_APP_ID + "-" + tabId, {
                        "content-type": "text/plain"
                    }, MCK_APP_ID + "," + MCK_USER_ID + "," + status);
                    setTimeout(function () {
                        ALSocket.mck_typing_status = 0
                    }, 6E4)
                } else if (status === 0) ALSocket.stompClient.send("/topic/typing-" + MCK_APP_ID + "-" + TYPING_TAB_ID, {
                        "content-type": "text/plain"
                    },
                    MCK_APP_ID + "," + MCK_USER_ID + "," + status);
                ALSocket.mck_typing_status = status
            }
        };
        ALSocket.onTypingStatus = function (resp) {
            if (typeof ALSocket.events.onTypingStatus === "function") ALSocket.events.onTypingStatus(resp)
        };
        ALSocket.reconnect = function () {
            ALSocket.unsubscibeToTypingChannel();
            ALSocket.unsubscibeToNotification();
            ALSocket.disconnect();
            var data = {};
            data.token = MCK_TOKEN;
            data.deviceKey = USER_DEVICE_KEY;
            data.websocketUrl = MCK_WEBSOCKET_URL;
            ALSocket.init(MCK_APP_ID, data, ALSocket.events)
        };
        ALSocket.onError = function (err) {
            console.log("Error in channel notification. " +
                err);
            if (typeof ALSocket.events.onConnectFailed === "function") ALSocket.events.onConnectFailed()
        };
        ALSocket.sendStatus = function (status) {
            if (ALSocket.stompClient && ALSocket.stompClient.connected) ALSocket.stompClient.send("/topic/status-v2", {
                "content-type": "text/plain"
            }, MCK_TOKEN + "," + USER_DEVICE_KEY + "," + status)
        };
        ALSocket.onConnect = function () {
            if (ALSocket.stompClient.connected) {
                if (subscriber) ALSocket.unsubscibeToNotification();
                subscriber = ALSocket.stompClient.subscribe("/topic/" + MCK_TOKEN, ALSocket.onMessage);
                ALSocket.sendStatus(1);
                ALSocket.checkConnected(true)
            } else setTimeout(function () {
                subscriber = ALSocket.stompClient.subscribe("/topic/" + MCK_TOKEN, ALSocket.onMessage);
                ALSocket.sendStatus(1);
                ALSocket.checkConnected(true)
            }, 5E3);
            if (typeof ALSocket.events.onConnect === "function") ALSocket.events.onConnect()
        };
        ALSocket.onOpenGroupMessage = function (obj) {
            if (typeof ALSocket.events.onOpenGroupMessage === "function") ALSocket.events.onOpenGroupMessage(obj)
        };
        ALSocket.onMessage = function (obj) {
            if (subscriber != null && subscriber.id ===
                obj.headers.subscription) {
                var resp = JSON.parse(obj.body);
                var messageType = resp.type;
                if (typeof ALSocket.events.onMessage === "function") ALSocket.events.onMessage(resp);
                if (messageType === "APPLOZIC_04" || messageType === "MESSAGE_DELIVERED") ALSocket.events.onMessageDelivered(resp);
                else if (messageType === "APPLOZIC_08" || messageType === "MT_MESSAGE_DELIVERED_READ") ALSocket.events.onMessageRead(resp);
                else if (messageType === "APPLOZIC_05") ALSocket.events.onMessageDeleted(resp);
                else if (messageType === "APPLOZIC_27") ALSocket.events.onConversationDeleted(resp);
                else if (messageType === "APPLOZIC_11") ALSocket.events.onUserConnect(resp.message);
                else if (messageType === "APPLOZIC_12") {
                    var lastSeenAtTime = resp.message.split(",")[1];
                    ALSocket.events.onUserDisconnect({
                        "userId": userId,
                        "lastSeenAtTime": lastSeenAtTime
                    })
                } else if (messageType === "APPLOZIC_29") ALSocket.events.onConversationReadFromOtherSource(resp);
                else if (messageType === "APPLOZIC_28") ALSocket.events.onConversationRead(resp);
                else if (messageType === "APPLOZIC_16") {
                    var status = resp.message.split(":")[0];
                    var userId =
                        resp.message.split(":")[1];
                    ALSocket.events.onUserBlocked({
                        "status": status,
                        "userId": userId
                    })
                } else if (messageType === "APPLOZIC_17") {
                    var status = resp.message.split(":")[0];
                    var userId = resp.message.split(":")[1];
                    ALSocket.events.onUserUnblocked({
                        "status": status,
                        "userId": userId
                    })
                } else if (messageType === "APPLOZIC_18") ALSocket.events.onUserActivated();
                else if (messageType === "APPLOZIC_19") ALSocket.events.onUserDeactivated();
                else {
                    var message = resp.message;
                    if (messageType === "APPLOZIC_03") ALSocket.events.onMessageSentUpdate({
                        "messageKey": message.key
                    });
                    else if (messageType === "APPLOZIC_01" || messageType === "MESSAGE_RECEIVED") {
                        var messageFeed = alMessageService.getMessageFeed(message);
                        ALSocket.events.onMessageReceived({
                            "message": messageFeed
                        })
                    } else if (messageType === "APPLOZIC_02") {
                        var messageFeed = alMessageService.getMessageFeed(message);
                        ALSocket.events.onMessageSent({
                            "message": messageFeed
                        })
                    }
                }
            }
        };
        return ALSocket
    }
    if (typeof ALSocket === "undefined") window.Applozic.ALSocket = define_ALSocket();
    else console.log("ALSocket already defined.")
})(window);
var mckNotificationUtils = new MckNotificationUtils;
var alNotificationService = new AlNotificationService;

function AlNotificationService() {
    var _this = this;
    var IS_SW_NOTIFICATION_ENABLED;
    var MCK_GETUSERIMAGE;
    var MCK_NOTIFICATION_ICON_LINK;
    var IS_MCK_NOTIFICATION;
    var MCK_SW_SUBSCRIPTION;
    var MCK_SW_REGISTER_URL = "/rest/ws/plugin/update/sw/id";
    var IS_MCK_TAB_FOCUSED = true;
    _this.init = function (optns) {
        IS_SW_NOTIFICATION_ENABLED = typeof optns.swNotification === "boolean" ? optns.swNotification : false;
        MCK_GETUSERIMAGE = optns.contactDisplayImage;
        MCK_NOTIFICATION_ICON_LINK = optns.notificationIconLink;
        IS_MCK_NOTIFICATION = typeof optns.desktopNotification ===
            "boolean" ? optns.desktopNotification : false
    };
    _this.unsubscribeToServiceWorker = function () {
        if (MCK_SW_SUBSCRIPTION) navigator.serviceWorker.ready.then(function (serviceWorkerRegistration) {
            MCK_SW_SUBSCRIPTION.unsubscribe().then(function (successful) {
                MCK_SW_SUBSCRIPTION = null;
                console.log("Unsubscribed to notification successfully")
            })
        })
    };
    _this.sendSubscriptionIdToServer = function () {
        if (MCK_SW_SUBSCRIPTION) {
            var subscriptionId = MCK_SW_SUBSCRIPTION.endpoint.split("/").slice(-1)[0];
            if (subscriptionId) window.Applozic.ALApiService.sendSubscriptionIdToServer({
                data: {
                    "subscriptionId": subscriptionId
                },
                success: function (result) {},
                error: function () {}
            })
        }
    };
    _this.subscribeToServiceWorker = function () {
        if (IS_SW_NOTIFICATION_ENABLED)
            if ("serviceWorker" in navigator) {
                navigator.serviceWorker.register("./service-worker.js", {
                    scope: "./"
                });
                navigator.serviceWorker.ready.then(function (serviceWorkerRegistration) {
                    serviceWorkerRegistration.pushManager.subscribe({
                        userVisibleOnly: true
                    }).then(function (pushSubscription) {
                        console.log("The reg ID is:: ", pushSubscription.endpoint.split("/").slice(-1));
                        MCK_SW_SUBSCRIPTION = pushSubscription;
                        _this.sendSubscriptionIdToServer()
                    })
                })
            }
    }
}

function MckNotificationUtils() {
    var _this = this;
    var PERMISSION_DEFAULT = "default",
        PERMISSION_GRANTED = "granted",
        PERMISSION_DENIED = "denied",
        PERMISSION = [PERMISSION_GRANTED, PERMISSION_DEFAULT, PERMISSION_DENIED],
        isSupported = function () {
            var isSupported = false;
            try {
                isSupported = !!(w.Notification || w.webkitNotifications || navigator.mozNotification || w.external && w.external.msIsSiteMode() !== undefined)
            } catch (e) {}
            return isSupported
        }(),
        isFunction = function (value) {
            return value && value.constructor === Function
        },
        isString = function (value) {
            return value &&
                value.constructor === String
        },
        isObject = function (value) {
            return value && value.constructor === Object
        },
        ieVerification = Math.floor(Math.random() * 10 + 1),
        noop = function () {};
    _this.permissionLevel = function () {
        var permission;
        if (!isSupported) return;
        if (w.Notification && w.Notification.permissionLevel) permission = w.Notification.permissionLevel();
        else if (w.webkitNotifications && w.webkitNotifications.checkPermission) permission = PERMISSION[w.webkitNotifications.checkPermission()];
        else if (w.Notification && w.Notification.permission) permission =
            w.Notification.permission;
        else if (navigator.mozNotification) permission = PERMISSION_GRANTED;
        else if (w.external && w.external.msIsSiteMode() !== undefined) permission = w.external.msIsSiteMode() ? PERMISSION_GRANTED : PERMISSION_DEFAULT;
        return permission
    };
    _this.requestPermission = function (callback) {
        var callbackFunction = isFunction(callback) ? callback : noop;
        if (w.webkitNotifications && w.webkitNotifications.checkPermission) w.webkitNotifications.requestPermission(callbackFunction);
        else if (w.Notification && w.Notification.requestPermission) w.Notification.requestPermission(callbackFunction)
    };
    _this.isChrome = function () {
        return /chrom(e|ium)/.test(w.navigator.userAgent.toLowerCase())
    };
    _this.getNotification = function (displayName, iconLink, msg, notificationsound) {
        if (notificationsound) {
            notificationsound.play();
            setTimeout(function () {
                notificationsound.stop()
            }, 1E3)
        }
        var notification;
        if (w.Notification) {
            var options = {
                icon: iconLink,
                body: msg
            };
            notification = new w.Notification(displayName, options);
            notification.onclick = function () {
                w.focus();
                this.close()
            }
        } else if (w.webkitNotifications) {
            notification = w.webkitNotifications.createNotification(iconLink,
                displayName, msg);
            if (notificationsound) notification.show();
            if (_this.isChrome()) notification.onclick = function () {
                w.focus();
                this.cancel()
            };
            notification.show();
            setTimeout(function () {
                notification.cancel()
            }, 3E4)
        } else if (navigator.mozNotification) {
            notification = navigator.mozNotification.createNotification(displayName, msg, iconLink);
            notification.show()
        } else if (w.external && w.external.msIsSiteMode()) {
            w.external.msSiteModeClearIconOverlay();
            w.external.msSiteModeSetIconOverlay(iconLink, displayName);
            w.external.msSiteModeActivate();
            notification = {
                "ieVerification": ieVerification + 1
            }
        }
        return notification
    };
    _this.sendDesktopNotification = function (displayName, iconLink, msg, notificationsound) {
        if (_this.permissionLevel() !== PERMISSION_GRANTED) w.Notification.requestPermission();
        if (_this.permissionLevel() === PERMISSION_GRANTED) {
            var notification;
            if (notificationsound) notification = _this.getNotification(displayName, iconLink, msg, notificationsound);
            else notification = _this.getNotification(displayName, iconLink, msg);
            var notificationWrapper = _this.getWrapper(notification);
            if (notification && !notification.ieVerification && notification.addEventListener) notification.addEventListener("show", function () {
                var notification = notificationWrapper;
                w.setTimeout(function () {
                    notification.close()
                }, 3E4)
            })
        }
    };
    _this.getWrapper = function (notification) {
        return {
            close: function () {
                if (notification)
                    if (notification.close) notification.close();
                    else if (notification.cancel) notification.cancel();
                else if (w.external && w.external.msIsSiteMode())
                    if (notification.ieVerification === ieVerification) w.external.msSiteModeClearIconOverlay()
            }
        }
    }
}
var mckGroupUtils = new MckGroupUtils;
var mckGroupService = new MckGroupService;

function MckGroupUtils() {
    var _this = this;
    _this.getGroup = function (groupId) {
        if (typeof MCK_GROUP_MAP[groupId] === "object") return MCK_GROUP_MAP[groupId];
        else return
    };
    _this.getGroupByClientGroupId = function (clientGroupId) {
        if (typeof MCK_CLIENT_GROUP_MAP[clientGroupId] === "object") return MCK_CLIENT_GROUP_MAP[clientGroupId];
        else return
    };
    _this.addGroup = function (group) {
        var name = group.name ? group.name : group.id;
        var users = [];
        $applozic.each(group.groupUsers, function (i, user) {
            if (user.userId) users[user.userId] = user
        });
        var removedMembersId = typeof group.removedMembersId !== "undefined" ? group.removedMembersId : [];
        var groupFeed = {
            "contactId": group.id.toString(),
            "htmlId": mckContactUtils.formatContactId("" + group.id),
            "displayName": name,
            "value": group.id.toString(),
            "adminName": group.adminId ? group.adminId : group.adminName,
            "type": group.type,
            "members": group.membersId ? group.membersId : group.membersName,
            "imageUrl": group.imageUrl,
            "users": users,
            "userCount": group.userCount,
            "removedMembersId": removedMembersId,
            "clientGroupId": group.clientGroupId,
            "isGroup": true,
            "deletedAtTime": group.deletedAtTime,
            "metadata": group.metadata
        };
        MCK_GROUP_MAP[group.id] = groupFeed;
        if (group.clientGroupId) MCK_CLIENT_GROUP_MAP[group.clientGroupId] = groupFeed;
        return groupFeed
    };
    _this.createGroup = function (groupId) {
        var group = {
            "contactId": groupId.toString(),
            "htmlId": mckContactUtils.formatContactId("" + groupId),
            "displayName": groupId.toString(),
            "value": groupId.toString(),
            "type": 2,
            "adminName": "",
            "imageUrl": "",
            "userCount": "",
            "users": [],
            "removedMembersId": [],
            "clientGroupId": "",
            "isGroup": true,
            "deletedAtTime": ""
        };
        MCK_GROUP_MAP[groupId] = group;
        return group
    }
}

function MckGroupService() {
    var _this = this;
    var IS_MCK_VISITOR;
    var MCK_USER_ID;
    var MCK_OPEN_GROUP_SETTINGS;
    var MCK_LAST_SEEN_AT_MAP = [];
    var MCK_BLOCKED_TO_MAP = [];
    var GROUP_LIST_URL = "/rest/ws/group/list";
    var GROUP_FEED_URL = "/rest/ws/group/info";
    var GROUP_LEAVE_URL = "/rest/ws/group/left";
    var GROUP_UPDATE_INFO_URL = "/rest/ws/group/update";
    var GROUP_ADD_MEMBER_URL = "/rest/ws/group/add/member";
    var GROUP_REMOVE_MEMBER_URL = "/rest/ws/group/remove/member";
    MCK_GROUP_ARRAY = new Array;
    _this.init = function (optns) {
        IS_MCK_VISITOR =
            optns.visitor;
        MCK_USER_ID = IS_MCK_VISITOR ? "guest" : $applozic.trim(optns.userId);
        MCK_OPEN_GROUP_SETTINGS = optns.openGroupSettings
    };
    _this.loadGroups = function (params) {
        var response = new Object;
        window.Applozic.ALApiService.loadGroups({
            baseUrl: MCK_BASE_URL,
            success: function (data) {
                if (data.status === "success") {
                    response.status = "success";
                    response.data = data.response;
                    if (params.apzCallback) params.apzCallback(response)
                } else response.status = "error";
                if (params.callback) params.callback(response)
            },
            error: function () {
                console.log("Unable to load groups. Please reload page.");
                response.status = "error";
                if (params.callback) params.callback(response);
                if (params.apzCallback) params.apzCallback(response)
            }
        })
    };
    _this.getGroupFeed = function (params) {
        var group = {};
        if (typeof params.callback === "function" || typeof params.apzCallback === "function") var response = new Object;
        else return;
        if (params.groupId) group.groupId = params.groupId;
        else if (params.clientGroupId) group.clientGroupId = params.clientGroupId;
        else {
            if (typeof params.callback === "function") {
                response.status = "error";
                response.errorMessage = "GroupId or Client GroupId Required";
                params.callback(response)
            }
            return
        }
        if (params.conversationId) group.conversationId = params.conversationId;
        Applozic.ALApiService.getGroupInfo({
            data: group,
            success: function (response) {
                if (response.status === "success") {
                    var groupFeed = response.response;
                    if (groupFeed + "" === "null" || typeof groupFeed !== "object") {
                        response.status = "error";
                        response.errorMessage = "GroupId not found"
                    } else {
                        var group = mckGroupUtils.addGroup(groupFeed);
                        response.status = "success";
                        response.data = group
                    }
                } else if (data.status === "error") {
                    response.status =
                        "error";
                    response.errorMessage = data.errorResponse[0].description
                }
                if (params.callback) params.callback(response);
                if (params.apzCallback) {
                    if (response.status === "success") response.data = groupFeed;
                    params.apzCallback(response, params)
                }
            },
            error: function () {
                console.log("Unable to load group. Please reload page.");
                response.status = "error";
                response.errorMessage = "Please reload page.";
                if (params.callback) params.callback(response);
                if (params.apzCallback) params.apzCallback(response, params)
            }
        })
    };
    _this.leaveGroup = function (params) {
        var group = {};
        var response = new Object;
        if (params.groupId) group.groupId = params.groupId;
        else if (params.clientGroupId) group.clientGroupId = params.clientGroupId;
        else {
            response.status = "error";
            response.errorMessage = "GroupId or Client GroupId Required";
            if (params.callback) params.callback(response);
            return
        }
        Applozic.ALApiService.groupLeave({
            data: group,
            success: function (data) {
                if (data.status === "success") {
                    if (params.clientGroupId) {
                        var groupInfo = mckGroupUtils.getGroupByClientGroupId(params.clientGroupId);
                        if (typeof groupInfo ===
                            "object") params.groupInfo = groupInfo.contactId
                    }
                    response.status = "success";
                    response.data = {
                        groupId: params.groupId
                    }
                } else {
                    response.status = "error";
                    response.errorMessage = data.errorResponse[0].description
                }
                if (params.callback) params.callback(response);
                if (params.apzCallback) params.apzCallback(response, {
                    groupId: params.groupId
                })
            },
            error: function () {
                console.log("Unable to process your request. Please reload page.");
                response.status = "error";
                response.errorMessage = "";
                if (params.callback) params.callback(response);
                if (params.apzCallback) params.apzCallback(response)
            }
        })
    };
    _this.removeGroupMemberFromChat = function (params) {
        var group = {};
        var response = new Object;
        if (params.groupId) group.groupId = params.groupId;
        else if (params.clientGroupId) group.clientGroupId = params.clientGroupId;
        else {
            response.status = "error";
            response.errorMessage = "GroupId or Client GroupId Required";
            if (typeof params.callback === "function") params.callback(response);
            return
        }
        group.userId = params.userId;
        Applozic.ALApiService.removeGroupMember({
            data: group,
            success: function (response) {
                if (response.status === "success") {
                    if (params.clientGroupId) {
                        var group =
                            mckGroupUtils.getGroupByClientGroupId(params.clientGroupId);
                        if (typeof group === "object") params.groupId = group.contactId
                    }
                    response.status = "success"
                } else {
                    response.status = "error";
                    response.errorMessage = data.errorResponse[0].description
                }
                if (params.callback) params.callback(response);
                if (params.apzCallback) params.apzCallback(response, params)
            },
            error: function () {
                console.log("Unable to process your request. Please reload page.");
                response.status = "error";
                response.errorMessage = "";
                if (params.callback) params.callback(response);
                if (params.apzCallback) params.apzCallback(response);
                params.apzCallback(response)
            }
        })
    };
    _this.addGroupMember = function (params) {
        var group = {};
        var response = new Object;
        if (params.groupId) group.groupId = params.groupId;
        else if (params.clientGroupId) group.clientGroupId = params.clientGroupId;
        else {
            if (typeof params.callback === "function") params.callback(response);
            return
        }
        group.userId = params.userId;
        if (typeof params.role !== "undefined") group.role = params.role;
        Applozic.ALApiService.addGroupMember({
            data: {
                group: group
            },
            success: function (data) {
                if (data.status ===
                    "success") {
                    if (params.clientGroupId) {
                        var group = mckGroupUtils.getGroupByClientGroupId(params.clientGroupId);
                        if (typeof group === "object") params.groupId = group.contactId
                    }
                    response.status = "success";
                    response.data = data.response
                } else {
                    response.status = "error";
                    response.errorMessage = data.errorResponse[0].description
                }
                if (params.callback) params.callback(response);
                if (params.apzCallback) params.apzCallback(response, params)
            },
            error: function () {
                console.log("Unable to process your request. Please reload page.");
                response.status =
                    "error";
                response.errorMessage = "";
                if (params.callback) params.callback(response);
                if (params.apzCallback) params.apzCallback(response)
            }
        })
    };
    _this.updateGroupInfo = function (params) {
        var group = {};
        var response = new Object;
        if (params.groupId) group.groupId = params.groupId;
        else if (params.clientGroupId) group.clientGroupId = params.clientGroupId;
        else {
            if (typeof params.callback === "function") {
                response.status = "error";
                response.errorMessage = "GroupId or Client GroupId Required";
                params.callback(response)
            }
            return
        }
        if (params.name) group.newName =
            params.name;
        if (params.imageUrl) group.imageUrl = params.imageUrl;
        if (params.users && params.users.length > 0) group.users = params.users;
        Applozic.ALApiService.groupUpdate({
            data: group,
            success: function (data, group) {
                if (data.status === "success") {
                    if (params.clientGroupId) {
                        var group = mckGroupLayout.getGroupByClientGroupId(params.clientGroupId);
                        if (typeof group === "object") params.groupId = group.contactId
                    }
                    response.status = "success";
                    response.data = data.response
                } else {
                    response.status = "error";
                    response.errorMessage = data.errorResponse[0].description
                }
                if (params.callback) params.callback(response);
                if (params.apzCallback) params.apzCallback(response, {
                    groupId: params.groupId,
                    groupInfo: group
                })
            },
            error: function () {
                console.log("Unable to process your request. Please reload page.");
                response.status = "error";
                response.errorMessage = "Unable to process your request. Please reload page.";
                if (params.callback) params.callback(response);
                if (params.apzCallback) params.apzCallback(response)
            }
        })
    };
    _this.sendGroupMessage = function (params) {
        if (typeof params === "object") {
            params = $applozic.extend(true, {}, message_default_options,
                params);
            var message = params.message;
            if (!params.groupId && !params.clientGroupId) return "groupId or clientGroupId required";
            if (typeof message === "undefined" || message === "") return "message field required";
            if (params.type > 12) return "invalid message type";
            message = $applozic.trim(message);
            var messagePxy = {
                "type": params.messageType,
                "contentType": params.type,
                "message": message
            };
            if (params.groupId) messagePxy.groupId = $applozic.trim(params.groupId);
            else if (params.clientGroupId) {
                var group = mckGroupUtils.getGroupByClientGroupId(params.clientGroupId);
                if (typeof group === "undefined") return "group not found";
                messagePxy.clientGroupId = $applozic.trim(params.clientGroupId)
            }
            mckMessageService.sendMessage(messagePxy);
            return "success"
        } else return "Unsupported format. Please check format"
    };
    _this.getContactFromGroupOfTwo = function (group, callback) {
        var user;
        for (var i = 0; i < group.members.length; i++) {
            user = "" + group.members[i];
            if (MCK_USER_ID === user) continue;
            if (typeof callback === "function") callback(user)
        }
    };
    _this.addGroupFromMessage = function (message, update, callback) {
        var groupId =
            message.groupId;
        var group = mckGroupUtils.getGroup("" + groupId);
        if (typeof group === "undefined") {
            group = mckGroupUtils.createGroup(groupId);
            mckGroupService.loadGroups({
                apzCallback: mckGroupLayout.loadGroups
            })
        }
        if (typeof callback === "function") callback(group, message, update)
    };
    _this.isGroupDeleted = function (tabId, isGroup) {
        if (isGroup) {
            var deletedAtTime = mckGroupLayout.getDeletedAtTime(tabId);
            return typeof deletedAtTime !== "undefined" && deletedAtTime > 0
        }
        return false
    };
    _this.loadGroupsCallback = function (response) {
        var groups =
            response.data;
        MCK_GROUP_ARRAY.length = 0;
        $applozic.each(groups, function (i, group) {
            if (typeof group.id !== "undefined") {
                var group = mckGroupUtils.addGroup(group);
                MCK_GROUP_ARRAY.push(group)
            }
        })
    };
    _this.getGroupDisplayName = function (groupId) {
        if (typeof MCK_GROUP_MAP[groupId] === "object") {
            var group = MCK_GROUP_MAP[groupId];
            var displayName = group["displayName"];
            if (group.type === 7) {
                var contact = _this.getContactFromGroupOfTwo(group);
                if (typeof contact !== "undefined") displayName = mckMessageLayout.getTabDisplayName(contact.contactId,
                    false)
            }
            if (group.type === 3)
                if (displayName.indexOf(MCK_USER_ID) !== -1) {
                    displayName = displayName.replace(MCK_USER_ID, "").replace(":", "");
                    if (typeof MCK_GETUSERNAME === "function") {
                        var name = MCK_GETUSERNAME(displayName);
                        displayName = name ? name : displayName
                    }
                }
            if (!displayName && group.type === 5) displayName = "Broadcast";
            if (!displayName) displayName = group.contactId;
            return displayName
        } else return groupId
    };
    _this.getGroupImage = function (imageSrc) {
        return imageSrc ? '\x3cimg src\x3d"' + imageSrc + '"/\x3e' : '\x3cimg src\x3d"' + MCK_BASE_URL +
            '/resources/sidebox/css/app/images/mck-icon-group.png"/\x3e'
    };
    _this.getGroupDefaultIcon = function () {
        return '\x3cdiv class\x3d"mck-group-icon-default"\x3e\x3c/div\x3e'
    };
    _this.addMemberToGroup = function (group, userId) {
        if (typeof group.members === "object") {
            if (group.members.indexOf(userId) === -1) group.members.push(userId);
            if (typeof group.removedMembersId === "object" && group.removedMembersId.indexOf(userId) !== -1) group.removedMembersId.splice(group.removedMembersId.indexOf(userId), 1);
            MCK_GROUP_MAP[group.contactId] =
                group
        }
        return group
    };
    _this.removeMemberFromGroup = function (group, userId) {
        if (typeof group.removedMembersId !== "object" || group.removedMembersId.length < 1) {
            group.removedMembersId = [];
            group.removedMembersId.push(userId)
        } else if (group.removedMembersId.indexOf(userId) === -1) group.removedMembersId.push(userId);
        MCK_GROUP_MAP[group.contactId] = group;
        return group
    };
    _this.authenticateGroupUser = function (group) {
        var isGroupLeft = mckGroupService.isGroupLeft(group);
        var isGroupMemeber = false;
        if (!isGroupLeft && group.members.length >
            0)
            for (var i = 0; i < group.members.length; i++)
                if (MCK_USER_ID === "" + group.members[i]) {
                    isGroupMemeber = true;
                    return true
                }
        return isGroupMemeber
    };
    _this.isAppendOpenGroupContextMenu = function (group) {
        if (MCK_OPEN_GROUP_SETTINGS.deleteChatAccess === 0) return false;
        var isGroupMember = mckGroupService.authenticateGroupUser(group);
        if (!isGroupMember) return false;
        if (group.adminName === MCK_USER_ID) return true;
        if (MCK_OPEN_GROUP_SETTINGS.deleteChatAccess === 2) return true;
        return false
    };
    _this.isGroupLeft = function (group) {
        var isGroupLeft =
            false;
        if (group.removedMembersId && group.removedMembersId.length > 0) $applozic.each(group.removedMembersId, function (i, removedMemberId) {
            if (removedMemberId === MCK_USER_ID) isGroupLeft = true
        });
        return isGroupLeft
    }
}
var alUserService = new AlUserService;

function AlUserService() {
    var _this = this;
    _this.MCK_USER_DETAIL_MAP = [];
    _this.MCK_BLOCKED_TO_MAP = [];
    var MCK_GROUP_MEMBER_SEARCH_ARRAY = new Array;
    var USER_BLOCK_URL = "/rest/ws/user/block";
    var USER_DETAIL_URL = "/rest/ws/user/v2/detail";
    var USER_STATUS_URL = "/rest/ws/user/chat/status";
    _this.updateUserStatus = function (params, callback) {
        if (typeof alUserService.MCK_USER_DETAIL_MAP[params.userId] === "object") {
            var userDetail = alUserService.MCK_USER_DETAIL_MAP[params.userId];
            if (params.status === 0) {
                userDetail.connected =
                    false;
                userDetail.lastSeenAtTime = params.lastSeenAtTime
            } else if (params.status === 1) userDetail.connected = true
        } else {
            var userIdArray = new Array;
            userIdArray.push(params.userId);
            if (typeof callback === "function") callback(userIdArray)
        }
    };
    _this.getUserDetail = function (userId) {
        if (typeof alUserService.MCK_USER_DETAIL_MAP[userId] === "object") return alUserService.MCK_USER_DETAIL_MAP[userId];
        else return
    };
    _this.checkUserConnectedStatus = function (callback) {
        var userIdArray = new Array;
        var otherUserIdArray = new Array;
        $applozic(".mck-user-ol-status").each(function () {
            var tabId =
                $applozic(this).data("mck-id");
            if (typeof tabId !== "undefined" && tabId !== "") {
                userIdArray.push(tabId);
                var htmlId = mckContactUtils.formatContactId("" + tabId);
                $applozic(this).addClass(htmlId);
                $applozic(this).next().addClass(htmlId)
            }
        });
        if (userIdArray.length > 0) {
            $applozic.each(userIdArray, function (i, userId) {
                if (typeof alUserService.MCK_USER_DETAIL_MAP[userId] === "undefined") otherUserIdArray.push(userId)
            });
            if (typeof callback === "function") callback(otherUserIdArray)
        }
    };
    _this.loadUserProfile = function (userId) {
        if (typeof userId !==
            "undefined") {
            var userIdArray = [];
            var memberId = "" + userId.split(",")[0];
            userIdArray.push(memberId);
            _this.loadUserProfiles(userIdArray)
        }
    };
    _this.loadUserProfiles = function (userIds, callback) {
        var userIdArray = [];
        if (typeof callback === "function") callback(userIds, userIdArray)
    };
    _this.getUserStatus = function (params, callback) {
        var response = new Object;
        window.Applozic.ALApiService.getUserStatus({
            success: function (data) {
                if (data.users.length > 0) {
                    MCK_GROUP_MEMBER_SEARCH_ARRAY = [];
                    if (typeof callback === "function") callback(data)
                }
                response.status =
                    "success";
                response.data = data;
                if (params.callback) params.callback(response);
                return
            },
            error: function () {
                response.status = "error";
                if (params.callback) params.callback(response)
            }
        })
    };
    _this.blockUser = function (userId, isBlock, callback) {
        if (!userId || typeof isBlock === "undefined") return;
        var data = "userId\x3d" + userId + "\x26block\x3d" + isBlock;
        mckUtils.ajax({
            url: MCK_BASE_URL + USER_BLOCK_URL,
            type: "get",
            data: data,
            success: function (data) {
                if (typeof data === "object")
                    if (data.status === "success") {
                        alUserService.MCK_BLOCKED_TO_MAP[userId] =
                            isBlock;
                        if (typeof callback === "function") callback(userId)
                    }
            },
            error: function () {}
        })
    }
}
var alFileService = new AlFileService;

function AlFileService() {
    var _this = this;
    var ONE_KB = 1024;
    var ONE_MB = 1048576;
    var UPLOAD_VIA = ["CREATE", "UPDATE"];
    var FILE_PREVIEW_URL = "/rest/ws/aws/file/";
    var FILE_UPLOAD_URL = "/rest/ws/aws/file/url";
    var FILE_AWS_UPLOAD_URL = "/rest/ws/upload/file";
    var FILE_DELETE_URL = "/rest/ws/aws/file/delete";
    var CLOUD_HOST_URL = "www.googleapis.com";
    var MCK_STORAGE_URL;
    var MCK_FILE_URL;
    var MCK_MAP_STATIC_API_KEY;
    var MCK_CUSTOM_UPLOAD_SETTINGS;
    var MCK_APP_ID;
    var AUTH_CODE;
    var USER_DEVICE_KEY;
    var MCK_ACCESS_TOKEN;
    var MCK_APP_MODULE_NAME;
    var MCK_GENERATE_CLOUD_FILE_URL;
    _this.init = function (optns) {
        MCK_FILE_URL = optns.fileBaseUrl;
        AUTH_CODE = btoa(optns.userId + ":" + optns.deviceKey);
        USER_DEVICE_KEY = optns.deviceKey
    };
    _this.get = function (optns) {
        MCK_APP_ID = optns.appId;
        MCK_STORAGE_URL = optns.customUploadUrl;
        MCK_CUSTOM_UPLOAD_SETTINGS = optns.fileupload;
        MCK_MAP_STATIC_API_KEY = optns.mapStaticAPIkey;
        MCK_ACCESS_TOKEN = optns.accessToken;
        MCK_APP_MODULE_NAME = optns.appModuleName;
        MCK_GENERATE_CLOUD_FILE_URL = optns.genereateCloudFileUrl
    };
    _this.deleteFileMeta =
        function (blobKey) {
            window.Applozic.ALApiService.deleteFileMeta({
                data: {
                    blobKey: blobKey,
                    url: MCK_FILE_URL + FILE_DELETE_URL + "?key\x3d" + blobKey
                },
                success: function (response) {
                    console.log(response)
                },
                error: function () {}
            })
        };
    _this.getFilePreviewPath = function (fileMeta) {
        return typeof fileMeta === "object" ? '\x3ca href\x3d"' + MCK_FILE_URL + FILE_PREVIEW_URL + fileMeta.blobKey + '" target\x3d"_blank"\x3e' + fileMeta.name + "\x3c/a\x3e" : ""
    };
    _this.getFilePreviewSize = function (fileSize) {
        if (fileSize)
            if (fileSize > ONE_MB) return "(" + parseInt(fileSize /
                ONE_MB) + " MB)";
            else if (fileSize > ONE_KB) return "(" + parseInt(fileSize / ONE_KB) + " KB)";
        else return "(" + parseInt(fileSize) + " B)";
        return ""
    };
    _this.getFileurl = function (msg) {
        if (typeof msg.fileMeta === "object")
            if (msg.fileMeta.hasOwnProperty("url"))
                if (msg.fileMeta.url.indexOf(CLOUD_HOST_URL) !== -1) {
                    var fileUrl;
                    _this.generateCloudUrl(msg.fileMeta.blobKey, function (result) {
                        fileUrl = result
                    });
                    return fileUrl
                } else return "" + msg.fileMeta.url;
        else if (msg.fileMeta.thumbnailUrl === "thumbnail_" + msg.fileMeta.name) return MCK_STORAGE_URL +
            "/files/" + msg.fileMeta.name;
        else return MCK_FILE_URL + FILE_PREVIEW_URL + msg.fileMeta.blobKey;
        return ""
    };
    _this.generateCloudUrl = function (key, callback) {
        var url = MCK_GENERATE_CLOUD_FILE_URL.replace("{key}", key);
        var headers = window.Applozic.ALApiService.getAttachmentHeaders();
        mckUtils.ajax({
            type: "get",
            async: false,
            headers: headers,
            url: url,
            success: function (result) {
                if (typeof callback === "function") callback(result)
            },
            error: function (result) {
                console.log("error while getting token" + result)
            }
        })
    };
    _this.getFilePath = function (msg) {
        if (msg.contentType ===
            2) try {
            var geoLoc = $applozic.parseJSON(msg.message);
            if (geoLoc.lat && geoLoc.lon) return '\x3ca href\x3d"http://maps.google.com/maps?z\x3d17\x26t\x3dm\x26q\x3dloc:' + geoLoc.lat + "," + geoLoc.lon + '" target\x3d"_blank"\x3e\x3cimg src\x3d"https://maps.googleapis.com/maps/api/staticmap?zoom\x3d17\x26size\x3d200x150\x26center\x3d' + geoLoc.lat + "," + geoLoc.lon + "\x26maptype\x3droadmap\x26markers\x3dcolor:red|" + geoLoc.lat + "," + geoLoc.lon + "\x26key\x3d" + MCK_MAP_STATIC_API_KEY + '"/\x3e\x3c/a\x3e'
        } catch (ex) {
            if (msg.message.indexOf(",") !==
                -1) return '\x3ca href\x3d"http://maps.google.com/maps?z\x3d17\x26t\x3dm\x26q\x3dloc:' + msg.message + '" target\x3d"_blank"\x3e\x3cimg src\x3d"https://maps.googleapis.com/maps/api/staticmap?zoom\x3d17\x26size\x3d200x150\x26center\x3d' + msg.message + "\x26maptype\x3droadmap\x26markers\x3dcolor:red|" + msg.message + "\x26key\x3d" + MCK_MAP_STATIC_API_KEY + '" /\x3e\x3c/a\x3e'
        }
        if (typeof msg.fileMeta === "object")
            if (msg.fileMeta.contentType.indexOf("image") !== -1)
                if (msg.fileMeta.contentType.indexOf("svg") !== -1) return '\x3ca href\x3d"#" role\x3d"link" target\x3d"_self" class\x3d"file-preview-link fancybox-media imageview" data-type\x3d"' +
                    msg.fileMeta.contentType + '" data-url\x3d"' + _this.getFileurl(msg) + '" data-name\x3d"' + msg.fileMeta.name + '"\x3e\x3cimg src\x3d"' + _this.getFileurl(msg) + '" area-hidden\x3d"true"\x3e\x3c/img\x3e\x3c/a\x3e';
                else if (msg.contentType === 5) return '\x3ca href\x3d"#" role\x3d"link" target\x3d"_self" class\x3d"file-preview-link fancybox-media imageview" data-type\x3d"' + msg.fileMeta.contentType + '" data-url\x3d"' + msg.fileMeta.blobKey + '" data-name\x3d"' + msg.fileMeta.name + '"\x3e\x3cimg src\x3d"' + msg.fileMeta.blobKey +
            '" area-hidden\x3d"true"\x3e\x3c/img\x3e\x3c/a\x3e';
        else if (msg.fileMeta.hasOwnProperty("url"))
            if (msg.fileMeta.url.indexOf(CLOUD_HOST_URL) !== -1) {
                var thumbnailUrl;
                _this.generateCloudUrl(msg.fileMeta.thumbnailBlobKey, function (result) {
                    thumbnailUrl = result
                });
                return '\x3ca href\x3d"#" role\x3d"link" target\x3d"_self" class\x3d"file-preview-link fancybox-media imageview" data-type\x3d"' + msg.fileMeta.contentType + '" data-url\x3d"" data-blobKey\x3d"' + msg.fileMeta.blobKey + '" data-name\x3d"' + msg.fileMeta.name +
                    '"\x3e\x3cimg src\x3d"' + thumbnailUrl + '" area-hidden\x3d"true"\x3e\x3c/img\x3e\x3c/a\x3e'
            } else return '\x3ca href\x3d"#" role\x3d"link" target\x3d"_self" class\x3d"file-preview-link fancybox-media imageview" data-type\x3d"' + msg.fileMeta.contentType + '" data-url\x3d"' + _this.getFileurl(msg) + '" data-name\x3d"' + msg.fileMeta.name + '"\x3e\x3cimg src\x3d"' + msg.fileMeta.thumbnailUrl + '" area-hidden\x3d"true"\x3e\x3c/img\x3e\x3c/a\x3e';
        else if (msg.fileMeta.thumbnailUrl === "thumbnail_" + msg.fileMeta.name) return '\x3ca href\x3d"#" role\x3d"link" target\x3d"_self" class\x3d"file-preview-link fancybox-media imageview" data-type\x3d"' +
            msg.fileMeta.contentType + '" data-url\x3d"' + _this.getFileurl(msg) + '" data-name\x3d"' + msg.fileMeta.name + '"\x3e\x3cimg src\x3d"' + MCK_STORAGE_URL + "/files/thumbnail_" + msg.fileMeta.name + '" area-hidden\x3d"true"\x3e\x3c/img\x3e\x3c/a\x3e';
        else return '\x3ca href\x3d"#" role\x3d"link" target\x3d"_self" class\x3d"file-preview-link fancybox-media imageview" data-type\x3d"' + msg.fileMeta.contentType + '" data-url\x3d"' + _this.getFileurl(msg) + '" data-name\x3d"' + msg.fileMeta.name + '"\x3e\x3cimg src\x3d"' + msg.fileMeta.thumbnailUrl +
            '" area-hidden\x3d"true"\x3e\x3c/img\x3e\x3c/a\x3e';
        else if (msg.fileMeta.contentType.indexOf("video") !== -1)
            if (msg.fileMeta.hasOwnProperty("url") && msg.fileMeta.url.indexOf(CLOUD_HOST_URL) !== -1) {
                var getUrl;
                _this.generateCloudUrl(msg.fileMeta.blobKey, function (result) {
                    getUrl = result
                });
                return '\x3ca href\x3d"#" target\x3d"_self"\x3e\x3cvideo controls class\x3d"mck-video-player" onplay\x3d"alFileService.updateAudVidUrl(this);" data-cloud-service\x3d"google_cloud" data-blobKey\x3d"' + msg.fileMeta.blobKey + '"\x3e' +
                    '\x3csource src\x3d"' + getUrl + '" type\x3d"video/mp4"\x3e' + '\x3csource src\x3d"' + getUrl + '" type\x3d"video/ogg"\x3e\x3c/video\x3e'
            } else return '\x3ca href\x3d "#" target\x3d"_self"\x3e\x3cvideo controls class\x3d"mck-video-player"\x3e' + '\x3csource src\x3d"' + _this.getFileurl(msg) + '" type\x3d"video/mp4"\x3e' + '\x3csource src\x3d"' + _this.getFileurl(msg) + '" type\x3d"video/ogg"\x3e\x3c/video\x3e\x3c/a\x3e';
        else if (msg.fileMeta.contentType.indexOf("audio") !== -1)
            if (msg.fileMeta.hasOwnProperty("url") && msg.fileMeta.url.indexOf(CLOUD_HOST_URL) !==
                -1) {
                var getUrl;
                _this.generateCloudUrl(msg.fileMeta.blobKey, function (result) {
                    getUrl = result
                });
                return '\x3ca href\x3d"#" target\x3d"_self"\x3e\x3caudio controls class\x3d"mck-audio-player" onplay\x3d"alFileService.updateAudVidUrl(this);" data-cloud-service\x3d"google_cloud" data-blobKey\x3d"' + msg.fileMeta.blobKey + '"\x3e' + '\x3csource src\x3d"' + getUrl + '" type\x3d"audio/ogg"\x3e' + '\x3csource src\x3d"' + getUrl + '" type\x3d"audio/mpeg"\x3e\x3c/audio\x3e' + '\x3cp class\x3d"mck-file-tag"\x3e\x3c/p\x3e\x3c/a\x3e'
            } else return '\x3ca href\x3d"#" target\x3d"_self"\x3e\x3caudio controls class\x3d"mck-audio-player"\x3e' +
                '\x3csource src\x3d"' + _this.getFileurl(msg) + '" type\x3d"audio/ogg"\x3e' + '\x3csource src\x3d"' + _this.getFileurl(msg) + '" type\x3d"audio/mpeg"\x3e\x3c/audio\x3e' + '\x3cp class\x3d"mck-file-tag"\x3e\x3c/p\x3e\x3c/a\x3e';
        else return '\x3ca href\x3d"#" role\x3d"link" class\x3d"file-preview-link" target\x3d"_blank"\x3e\x3c/a\x3e';
        return ""
    };
    _this.updateAudVidUrl = function (element) {
        var keygen = element.dataset.blobkey;
        var time = (new Date).getTime();
        var currentSrc = element.currentSrc;
        var expiry = _this.fetchQueryString("Expires",
            currentSrc);
        if (time >= expiry * 1E3) {
            _this.generateCloudUrl(keygen, function (result) {
                getUrl = result
            });
            element.src = getUrl
        }
    };
    this.fetchQueryString = function (regKey, href) {
        regKey = regKey.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
        var regexValue = new RegExp("[\\?\x26]" + regKey + "\x3d([^\x26#]*)");
        var result = regexValue.exec(href);
        if (result == null) console.log("The parameter is null for the searchedquery");
        return result[1]
    };
    _this.getFileAttachment = function (msg) {
        if (typeof msg.fileMeta === "object") {
            if (msg.fileMeta.contentType.indexOf("image") !==
                -1 || msg.fileMeta.contentType.indexOf("audio") !== -1 || msg.fileMeta.contentType.indexOf("video") !== -1)
                if (msg.fileMeta.hasOwnProperty("url") && msg.fileMeta.url.indexOf(CLOUD_HOST_URL) !== -1) return '\x3ca href\x3d"javascript:void(0);" role\x3d"link" target\x3d"_self"  class\x3d"file-preview-link" data-blobKey\x3d"' + msg.fileMeta.blobKey + '" data-cloud-service\x3d"google_cloud"\x3e\x3cspan class\x3d"file-detail mck-image-download"\x3e\x3cspan class\x3d"mck-file-name"\x3e\x3cspan class\x3d"mck-attachement-icon"\x3e<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="20" height="20"><g data-name="Group 122"><path fill="none" d="M0 0h24v24H0z" data-name="Rectangle 1"/><path d="M19.00483767 16.29529691l-11.90272845-.0417193a4.358 4.358 0 0 1-4.32607928-4.32607929A4.259 4.259 0 0 1 7.0483691 7.65515915l10.48639356.03394113v.70710678L7.07241074 8.3382243a3.61826547 3.61826547 0 1 0 .00141421 7.2365308l11.89990002.03889087a2.647 2.647 0 0 0 2.68700577-2.68700576 2.688 2.688 0 0 0-2.70680476-2.70680476l-10.15476048-.0615183a1.774 1.774 0 0 0-1.75998878 1.75998879 1.8 1.8 0 0 0 1.76776695 1.76776695l8.82681395.02899138v.70710678l-8.81832866-.02333453a2.491 2.491 0 0 1-2.47840927-2.47840926 2.46 2.46 0 0 1 2.46426713-2.46426714l10.18375186.0311127a3.462 3.462 0 0 1 3.4400745 3.4400745 3.424 3.424 0 0 1-3.4202755 3.3679496z" data-name="Path 1"/></g></svg>\x3c/span\x3e' + msg.fileMeta.name + '\x3c/span\x3e\x26nbsp;\x3cspan class\x3d"file-size"\x3e' + alFileService.getFilePreviewSize(msg.fileMeta.size) + "\x3c/span\x3e\x3c/span\x3e\x3c/a\x3e";
                else return '\x3ca href\x3d"' + _this.getFileurl(msg) + '" role\x3d"link" target\x3d"_self"  class\x3d"file-preview-link"\x3e\x3cspan class\x3d"file-detail mck-image-download"\x3e\x3cspan class\x3d"mck-file-name"\x3e\x3cspan class\x3d"mck-attachement-icon"\x3e<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="20" height="20"><g data-name="Group 122"><path fill="none" d="M0 0h24v24H0z" data-name="Rectangle 1"/><path d="M19.00483767 16.29529691l-11.90272845-.0417193a4.358 4.358 0 0 1-4.32607928-4.32607929A4.259 4.259 0 0 1 7.0483691 7.65515915l10.48639356.03394113v.70710678L7.07241074 8.3382243a3.61826547 3.61826547 0 1 0 .00141421 7.2365308l11.89990002.03889087a2.647 2.647 0 0 0 2.68700577-2.68700576 2.688 2.688 0 0 0-2.70680476-2.70680476l-10.15476048-.0615183a1.774 1.774 0 0 0-1.75998878 1.75998879 1.8 1.8 0 0 0 1.76776695 1.76776695l8.82681395.02899138v.70710678l-8.81832866-.02333453a2.491 2.491 0 0 1-2.47840927-2.47840926 2.46 2.46 0 0 1 2.46426713-2.46426714l10.18375186.0311127a3.462 3.462 0 0 1 3.4400745 3.4400745 3.424 3.424 0 0 1-3.4202755 3.3679496z" data-name="Path 1"/></g></svg>\x3c/span\x3e' + msg.fileMeta.name + '\x3c/span\x3e\x26nbsp;\x3cspan class\x3d"file-size"\x3e' + alFileService.getFilePreviewSize(msg.fileMeta.size) + "\x3c/span\x3e\x3c/span\x3e\x3c/a\x3e";
                else return '\x3ca href\x3d"' + _this.getFileurl(msg) + '" role\x3d"link" target\x3d"_self"  class\x3d"file-preview-link"\x3e\x3cspan class\x3d"file-detail mck-image-download"\x3e\x3cspan class\x3d"mck-file-name"\x3e\x3cspan class\x3d"mck-attachement-icon"\x3e<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="20" height="20"><g data-name="Group 122"><path fill="none" d="M0 0h24v24H0z" data-name="Rectangle 1"/><path d="M19.00483767 16.29529691l-11.90272845-.0417193a4.358 4.358 0 0 1-4.32607928-4.32607929A4.259 4.259 0 0 1 7.0483691 7.65515915l10.48639356.03394113v.70710678L7.07241074 8.3382243a3.61826547 3.61826547 0 1 0 .00141421 7.2365308l11.89990002.03889087a2.647 2.647 0 0 0 2.68700577-2.68700576 2.688 2.688 0 0 0-2.70680476-2.70680476l-10.15476048-.0615183a1.774 1.774 0 0 0-1.75998878 1.75998879 1.8 1.8 0 0 0 1.76776695 1.76776695l8.82681395.02899138v.70710678l-8.81832866-.02333453a2.491 2.491 0 0 1-2.47840927-2.47840926 2.46 2.46 0 0 1 2.46426713-2.46426714l10.18375186.0311127a3.462 3.462 0 0 1 3.4400745 3.4400745 3.424 3.424 0 0 1-3.4202755 3.3679496z" data-name="Path 1"/></g></svg>\x3c/span\x3e' + msg.fileMeta.name + '\x3c/span\x3e\x26nbsp;\x3cspan class\x3d"file-size"\x3e' + alFileService.getFilePreviewSize(msg.fileMeta.size) + "\x3c/span\x3e\x3c/span\x3e\x3c/a\x3e";
            return ""
        }
    };
    _this.getFileIcon = function (msg) {
        if (msg.fileMetaKey && typeof msg.fileMeta === "object")
            if (msg.fileMeta.contentType.indexOf("image") !== -1) return '\x3cspan class\x3d"mck-icon--camera"\x3e<svg xmlns="http://www.w3.org/2000/svg" width="17" height="17" viewBox="0 0 24 24"><circle cx="12" cy="12" r="3.2" fill="rgba(38,50,56,.52)"/><path d="M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z" fill="rgba(38,50,56,.52)"/><path d="M0 0h24v24H0z" fill="none"/></svg>\x3c/span\x3e\x3cspan\x3eImage\x3c/span\x3e';
            else if (msg.fileMeta.contentType.indexOf("audio") !== -1) return '\x3cspan class\x3d"mck-attachement-icon"\x3e<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="20" height="20"><g data-name="Group 122"><path fill="none" d="M0 0h24v24H0z" data-name="Rectangle 1"/><path d="M19.00483767 16.29529691l-11.90272845-.0417193a4.358 4.358 0 0 1-4.32607928-4.32607929A4.259 4.259 0 0 1 7.0483691 7.65515915l10.48639356.03394113v.70710678L7.07241074 8.3382243a3.61826547 3.61826547 0 1 0 .00141421 7.2365308l11.89990002.03889087a2.647 2.647 0 0 0 2.68700577-2.68700576 2.688 2.688 0 0 0-2.70680476-2.70680476l-10.15476048-.0615183a1.774 1.774 0 0 0-1.75998878 1.75998879 1.8 1.8 0 0 0 1.76776695 1.76776695l8.82681395.02899138v.70710678l-8.81832866-.02333453a2.491 2.491 0 0 1-2.47840927-2.47840926 2.46 2.46 0 0 1 2.46426713-2.46426714l10.18375186.0311127a3.462 3.462 0 0 1 3.4400745 3.4400745 3.424 3.424 0 0 1-3.4202755 3.3679496z" data-name="Path 1"/></g></svg>\x3c/span\x3e\x3cspan\x3eAudio\x3c/span\x3e';
            else if (msg.fileMeta.contentType.indexOf("video") !== -1) return '\x3cspan class\x3d"mck-icon--camera"\x3e<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"><path d="M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l2.29 2.29c.63.63 1.71.18 1.71-.71V8.91c0-.89-1.08-1.34-1.71-.71L17 10.5z"/></svg>\x3c/span\x3e\x3cspan\x3eVideo\x3c/span\x3e';
            else return '\x3cspan class\x3d"mck-attachement-icon"\x3e<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="20" height="20"><g data-name="Group 122"><path fill="none" d="M0 0h24v24H0z" data-name="Rectangle 1"/><path d="M19.00483767 16.29529691l-11.90272845-.0417193a4.358 4.358 0 0 1-4.32607928-4.32607929A4.259 4.259 0 0 1 7.0483691 7.65515915l10.48639356.03394113v.70710678L7.07241074 8.3382243a3.61826547 3.61826547 0 1 0 .00141421 7.2365308l11.89990002.03889087a2.647 2.647 0 0 0 2.68700577-2.68700576 2.688 2.688 0 0 0-2.70680476-2.70680476l-10.15476048-.0615183a1.774 1.774 0 0 0-1.75998878 1.75998879 1.8 1.8 0 0 0 1.76776695 1.76776695l8.82681395.02899138v.70710678l-8.81832866-.02333453a2.491 2.491 0 0 1-2.47840927-2.47840926 2.46 2.46 0 0 1 2.46426713-2.46426714l10.18375186.0311127a3.462 3.462 0 0 1 3.4400745 3.4400745 3.424 3.424 0 0 1-3.4202755 3.3679496z" data-name="Path 1"/></g></svg>\x3c/span\x3e\x3cspan\x3eFile\x3c/span\x3e';
        else return ""
    };
    _this.downloadfile = function () {
        var url = _this.getFileurl(msg);
        var link = document.createElement("a");
        link.download = thefilename;
        link.setAttribute("href", url);
        var uri = "data:text/csv;charset\x3dutf-8;base64," + someb64data;
        link.href = uri;
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link)
    }
}
var alMessageService = new AlMessageService;

function AlMessageService() {
    var _this = this;
    var IS_MCK_VISITOR;
    var MCK_USER_ID;
    var MCK_FILE_URL;
    var TOPIC_ID_URL = "/rest/ws/conversation/topicId";
    var CONVERSATION_ID_URL = "/rest/ws/conversation/id";
    var CONVERSATION_FETCH_URL = "/rest/ws/conversation/get";
    var MESSAGE_ADD_INBOX_URL = "/rest/ws/message/add/inbox";
    var CONVERSATION_CLOSE_UPDATE_URL = "/rest/ws/conversation/close";
    var CONVERSATION_DELETE_URL = "/rest/ws/message/delete/conversation";
    var CONVERSATION_READ_UPDATE_URL = "/rest/ws/message/read/conversation";
    var offlineblk = '\x3cdiv id\x3d"mck-ofl-blk" class\x3d"mck-m-b"\x3e\x3cdiv class\x3d"mck-clear"\x3e\x3cdiv class\x3d"blk-lg-12 mck-text-light mck-text-muted mck-test-center"\x3e${userIdExpr} is offline now\x3c/div\x3e\x3c/div\x3e\x3c/div\x3e';
    var refreshIntervalId;
    _this.init = function (optns) {
        MCK_FILE_URL = optns.fileBaseUrl;
        IS_MCK_VISITOR = optns.visitor;
        MCK_USER_ID = IS_MCK_VISITOR ? "guest" : $applozic.trim(optns.userId)
    };
    _this.addMessageToTab = function (messagePxy, contact, callback) {
        var message = {
            "to": messagePxy.to,
            "groupId": messagePxy.groupId,
            "deviceKey": messagePxy.deviceKey,
            "contentType": messagePxy.contentType,
            "message": messagePxy.message,
            "conversationId": messagePxy.conversationId,
            "topicId": messagePxy.topicId,
            "sendToDevice": true,
            "createdAtTime": (new Date).getTime(),
            "key": messagePxy.key,
            "storeOnDevice": true,
            "sent": false,
            "read": true,
            "metadata": messagePxy.metadata ? messagePxy.metadata : ""
        };
        message.type = messagePxy.type ? messagePxy.type : 5;
        if (messagePxy.fileMeta) message.fileMeta = messagePxy.fileMeta;
        if (typeof callback ===
            "function") callback(message, contact)
    };
    _this.getMessages = function (params) {
        var data = {};
        if (params.startTime) data.endTime = params.startTime;
        if (typeof params.userId !== "undefined" && params.userId !== "") {
            if (params.isGroup) data.groupId = params.userId;
            else data.userId = params.userId;
            data.pageSize = 30;
            if ((IS_MCK_TOPIC_HEADER || IS_MCK_TOPIC_BOX) && params.conversationId) {
                data.conversationId = params.conversationId;
                if (typeof MCK_TAB_CONVERSATION_MAP[params.userId] === "undefined") data.conversationReq = true
            }
        } else data.mainPageSize =
            100;
        window.Applozic.ALApiService.getMessages({
            data: data,
            success: params.callback,
            error: params.callback
        })
    };
    _this.getMessageList = function (params, callback) {
        var tabId = params.id;
        var data = {};
        var resp = {};
        if (params.startTime) data.endTime = params.startTime;
        if (typeof params.clientGroupId !== "undefined" && params.clientGroupId !== "") {
            if (params.pageSize) data.pageSize = params.pageSize;
            else data.pageSize = 50;
            data.clientGroupId = params.clientGroupId;
            resp = {
                "clientGroupId": params.clientGroupId
            }
        } else if (typeof tabId !== "undefined" &&
            tabId !== "") {
            if (params.pageSize) data.pageSize = params.pageSize;
            else data.pageSize = 50;
            if ("" + params.isGroup === "true") data.groupId = tabId;
            else data.userId = tabId;
            resp = {
                "id": tabId
            }
        } else {
            if (params.mainPageSize) data.mainPageSize = params.pageSize;
            else data.mainPageSize = 50;
            resp = {
                "id": ""
            }
        }
        if (params.topicId && (tabId || params.clientGroupId)) {
            if (params.conversationId) data.conversationId = params.conversationId;
            if (params.topicId) resp["topicId"] = params.topicId
        }
        window.Applozic.ALApiService.getMessages({
            data: data,
            success: function (response) {
                var data =
                    response.data;
                resp.status = "success";
                if (typeof data.message === "undefined" || data.message.length === 0) resp.messages = [];
                else {
                    var messages = data.message;
                    var messageFeeds = new Array;
                    $applozic.each(messages, function (i, message) {
                        if (typeof callback === "function") callback(message)
                    });
                    resp.messages = messageFeeds
                }
                if (data.groupFeeds.length > 0) resp.id = data.groupFeeds[0].id;
                params.callback(data)
            },
            error: function (error) {
                resp.status = "error";
                params.callback(resp)
            }
        })
    };
    _this.getReplyMessageByKey = function (msgkey) {
        var replyMsg =
            ALStorage.getMessageByKey(msgkey);
        if (typeof replyMsg === "undefined") window.Applozic.ALApiService.updateReplyMessage({
            data: {
                key: msgkey
            },
            async: false,
            success: function (data) {
                ALStorage.updateMckMessageArray(data)
            }
        });
        return ALStorage.getMessageByKey(msgkey)
    };
    _this.sendDeliveryUpdate = function (message) {
        window.Applozic.ALApiService.sendDeliveryUpdate({
            data: {
                key: message.pairedMessageKey
            },
            success: function () {},
            error: function () {}
        })
    };
    _this.sendReadUpdate = function (key) {
        if (typeof key !== "undefined" && key !== "") window.Applozic.ALApiService.sendReadUpdate({
            data: {
                key: key
            },
            success: function () {},
            error: function () {}
        })
    };
    _this.fetchConversationByTopicId = function (data, callback) {
        window.Applozic.ALApiService.fetchConversationByTopicId({
            data: data,
            success: function (data) {
                if (typeof data === "object" && data.status === "success") {
                    var conversationList = data.response;
                    if (conversationList.length > 0) $applozic.each(conversationList, function (i, conversationPxy) {
                        MCK_CONVERSATION_MAP[conversationPxy.id] = conversationPxy;
                        MCK_TOPIC_CONVERSATION_MAP[conversationPxy.topicId] = [conversationPxy.id];
                        if (conversationPxy.topicDetail) try {
                            MCK_TOPIC_DETAIL_MAP[conversationPxy.topicId] =
                                $applozic.parseJSON(conversationPxy.topicDetail)
                        } catch (ex) {
                            w.console.log("Incorect Topic Detail!")
                        }
                        if (params.tabId && typeof MCK_TAB_CONVERSATION_MAP[params.tabId] !== "undefined") {
                            var tabConvArray = MCK_TAB_CONVERSATION_MAP[params.tabId];
                            tabConvArray.push(conversationPxy);
                            MCK_TAB_CONVERSATION_MAP[params.tabId] = tabConvArray
                        }
                    });
                    if (params.isExtMessageList)
                        if (conversationList.length > 0) {
                            params.conversationId = conversationList[0].id;
                            params.pageSize = 50;
                            if (typeof callback === "function") callback(params)
                        } else if (typeof params.callback ===
                        "function") {
                        var resp = {};
                        if (params.tabId) {
                            resp.id = params.tabId;
                            resp.isGroup = params.isGroup
                        } else if (params.clientGroupId) resp.clientGroupId = params.clientGroupId;
                        resp.topicId = params.topicId;
                        resp.status = "success";
                        resp.messages = [];
                        params.callback(resp)
                    }
                } else if (params.isExtMessageList && typeof params.callback === "function") {
                    var resp = {};
                    if (params.tabId) resp.id = params.tabId;
                    else if (params.clientGroupId) resp.clientGroupId = params.clientGroupId;
                    resp.topicId = params.topicId;
                    resp.status = "error";
                    resp.errorMessage =
                        "Unable to process request. Please try again.";
                    params.callback(resp)
                }
            },
            error: function () {
                if (typeof params.callback === "function") {
                    var resp = {};
                    if (params.tabId) resp.id = params.tabId;
                    else if (params.clientGroupId) resp.clientGroupId = params.clientGroupId;
                    resp.topicId = params.topicId;
                    resp.status = "error";
                    resp.errorMessage = "Unable to process request. Please try again.";
                    params.callback(resp)
                }
            }
        })
    };
    _this.getTopicId = function (params, callback) {
        if (params.conversationId) {
            var data = "id\x3d" + params.conversationId;
            window.Applozic.ALApiService.getTopicId({
                data: {
                    "conversationId": params.conversationId
                },
                success: function (result) {
                    if (typeof data === "object" && data.status === "success") {
                        var conversationPxy = data.response;
                        if (typeof conversationPxy === "object") {
                            MCK_TOPIC_CONVERSATION_MAP[conversationPxy.topicId] = [params.conversationId];
                            MCK_CONVERSATION_MAP[params.conversationId] = conversationPxy;
                            if (conversationPxy.topicDetail) try {
                                MCK_TOPIC_DETAIL_MAP[conversationPxy.topicId] = $applozic.parseJSON(conversationPxy.topicDetail)
                            } catch (ex) {
                                w.console.log("Incorect Topic Detail!")
                            }
                            if (typeof MCK_PRICE_DETAIL === "function" &&
                                params.priceText) {
                                MCK_PRICE_DETAIL({
                                    "custId": MCK_USER_ID,
                                    "suppId": params.suppId,
                                    "productId": conversationPxy.topicId,
                                    "price": params.priceText
                                });
                                _this.sendConversationCloseUpdate(params.conversationId)
                            }
                            if (params.messageType && typeof params.message === "object") {
                                var tabId = params.message.groupId ? params.message.groupId : params.message.to;
                                if (typeof MCK_TAB_CONVERSATION_MAP[tabId] !== "undefined") {
                                    var tabConvArray = MCK_TAB_CONVERSATION_MAP[tabId];
                                    tabConvArray.push(conversationPxy);
                                    MCK_TAB_CONVERSATION_MAP[tabId] =
                                        tabConvArray
                                }
                                if (typeof params.populate !== "undefined" ? params.populate : true)
                                    if (typeof callback === "function") callback(params)
                            }
                            if (typeof params.callback === "function") params.callback(conversationPxy)
                        }
                    }
                },
                error: function () {}
            })
        }
    };
    _this.sendConversationCloseUpdate = function (conversationId) {
        if (conversationId) {
            var data = "id\x3d" + conversationId;
            window.Applozic.ALApiService.sendConversationCloseUpdate({
                conversationId: conversationId,
                success: function (result) {},
                error: function () {}
            })
        }
    };
    _this.dispatchMessage = function (params) {
        if (params.messagePxy ===
            "object") {
            var messagePxy = params.messagePxy;
            if (params.topicId) {
                var topicDetail = MCK_TOPIC_DETAIL_MAP[params.topicId];
                if (typeof topicDetail === "object" && topicDetail.title !== "undefined") {
                    if (!messagePxy.message) messagePxy.message = $applozic.trim(topicDetail.title);
                    if (params.conversationId) messagePxy.conversationId = params.conversationId;
                    else if (params.topicId) {
                        var conversationPxy = {
                            "topicId": params.topicId
                        };
                        if (typeof topicDetail === "object") conversationPxy.topicDetail = w.JSON.stringify(topicDetail);
                        messagePxy.conversationPxy =
                            conversationPxy
                    }
                }
                if (!messagePxy.message && topicDetail.link) {
                    var fileMeta = {
                        "blobKey": $applozic.trim(topicDetail.link),
                        "contentType": "image/png"
                    };
                    messagePxy.fileMeta = fileMeta;
                    messagePxy.contentType = 5;
                    FILE_META = [];
                    FILE_META.push(fileMeta)
                }
            }
            if (params.isGroup) messagePxy.groupId = params.tabId;
            else messagePxy.to = params.tabId;
            mckMessageService.sendMessage(messagePxy)
        }
    };
    _this.sendVideoCallMessage = function (callId, msgType, contentType, audioOnly, toUser, callback) {
        var message = msgType == "CALL_MISSED" ? "Missed Call" :
            msgType == "CALL_REJECTED" ? "Call Rejected" : "";
        if (message == "" || message == undefined) message = "video message";
        var metadata = {
            "MSG_TYPE": msgType,
            "CALL_ID": callId,
            "CALL_AUDIO_ONLY": audioOnly
        };
        var messagePxy = {
            "to": toUser,
            "type": 5,
            "contentType": contentType,
            "message": message,
            "metadata": metadata,
            "senderName": MCK_USER_ID
        };
        callback(messagePxy);
        return messagePxy
    };
    _this.sendVideoCallEndMessage = function (callId, msgType, contentType, audioOnly, callDuration, toUser, callback) {
        var callDurationStr = "";
        if (callDuration) callDurationStr =
            mckDateUtils.convertMilisIntoTime(callDuration);
        var message = msgType == "CALL_MISSED" ? "Missed Call" : msgType == "CALL_REJECTED" ? "Call Rejected" : msgType == "CALL_END" ? "Call End \n Duration: " + callDurationStr : "video message";
        if (message == "" || message == undefined) message = "video message";
        var metadata = {
            "MSG_TYPE": msgType,
            "CALL_ID": callId,
            "CALL_AUDIO_ONLY": audioOnly,
            "CALL_DURATION": callDuration
        };
        var messagePxy = {
            "to": toUser,
            "type": 5,
            "contentType": contentType,
            "message": message,
            "metadata": metadata
        };
        callback(messagePxy);
        return messagePxy
    };
    _this.getMessageFeed = function (message) {
        var messageFeed = {};
        MCK_FILE_URL = window.Applozic.ALApiService.getFileUrl();
        messageFeed.key = message.key;
        messageFeed.timeStamp = message.createdAtTime;
        messageFeed.message = message.message;
        messageFeed.from = message.type === 4 ? message.to : MCK_USER_ID;
        if (message.groupId) messageFeed.to = message.groupId;
        else messageFeed.to = message.type === 5 ? message.to : MCK_USER_ID;
        messageFeed.status = "read";
        messageFeed.type = message.type === 4 ? "inbox" : "outbox";
        if (message.type ===
            5)
            if (message.status === 3) messageFeed.status = "sent";
            else if (message.status === 4) messageFeed.status = "delivered";
        if (typeof message.fileMeta === "object") {
            var file = Object.assign({}, message.fileMeta);
            if (typeof file.url === "undefined" || file.url === "") file.url = MCK_FILE_URL + "/rest/ws/aws/file/" + message.fileMeta.blobKey;
            delete file.blobKey;
            messageFeed.file = file
        }
        messageFeed.source = message.source;
        messageFeed.metadata = message.metadata;
        return messageFeed
    }
};
options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _BUILD_ENV: "test"  # Target environment (test, release, etc.)
  _FIREBASE_PROJECT_ID: "your-project-id"  # Set dynamically to your Firebase project ID
  _FIREBASE_SITE_ID: "${_BUILD_ENV}_site_id"  # Set dynamically based on _BUILD_ENV

steps:
  # Step 1: Install dependencies
  - name: 'gcr.io/cloud-builders/npm'
    args: ['install']

  # Step 2: Conditionally run builds based on _BUILD_ENV
  - name: 'gcr.io/cloud-builders/npm'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Build environment:" ${_BUILD_ENV}
        if [ "${_BUILD_ENV}" = "test" ]; then npm run build-test;
        elif [ "${_BUILD_ENV}" = "release" ]; then npm run build-release;
        elif [ "${_BUILD_ENV}" = "staging" ]; then npm run build-staging;
        elif [ "${_BUILD_ENV}" = "prod" ]; then npm run build-prod;
        else npm run build-test;
        fi

  # Step 3: Dynamically update firebase.json with environment-specific values
  - name: 'alpine'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        echo "Updating firebase.json with dynamic values..."
        sed -i "s/\${_FIREBASE_SITE_ID}/${_FIREBASE_SITE_ID}/g" firebase.json
        sed -i "s/\${_FIREBASE_PROJECT_ID}/${_FIREBASE_PROJECT_ID}/g" firebase.json
        echo "Updated firebase.json contents:"
        cat firebase.json  # For debugging

  # Step 4: Validate build output
  - name: 'alpine'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        echo "Checking if build output contains index.html..."
        if [ ! -f "webplugin/build/index.html" ]; then
          echo "Error: index.html not found in webplugin/build. Build process may have failed."
          exit 1
        fi
        echo "firebase.json exists, validating its structure..."
        if [ ! -f "firebase.json" ]; then
          echo "Error: firebase.json file does not exist."
          exit 1
        fi

  # Step 5: Deploy to Firebase Hosting
  - name: 'gcr.io/$PROJECT_ID/firebase'
    args:
      - 'deploy'
      - '--only'
      - 'hosting:${_FIREBASE_SITE_ID}'
      - '--project'
      - '${_FIREBASE_PROJECT_ID}'
      - '--token'
      - '${_FIREBASE_TOKEN}'

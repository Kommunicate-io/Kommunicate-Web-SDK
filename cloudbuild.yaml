options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _BUILD_ENV: "test"  # Set this to the target environment (test, release, etc.)
  _FIREBASE_PROJECT_ID: "your-project-id"  # Replacing with dynamic project ID
  _FIREBASE_SITE_ID: "${_BUILD_ENV}_site_id"  # Placeholder for Firebase site ID

steps:
  # Step 1: Install the latest version of npm and project dependencies using Node.js 20
  - name: 'node:20'
    entrypoint: 'bash'
    args: ['-c', 'npm install -g npm@latest && npm install --no-cache']

  # Step 2: Conditionally run builds based on _BUILD_ENV
  - name: 'node:20'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Build env:" ${_BUILD_ENV}
        if [ "${_BUILD_ENV}" = "test" ]; then 
          npm run build-test;
        elif [ "${_BUILD_ENV}" = "release" ]; then 
          npm run build-release;
        elif [ "${_BUILD_ENV}" = "staging" ]; then 
          npm run build-staging;
        elif [ "${_BUILD_ENV}" = "prod" ]; then 
          npm run build-prod;
        elif [ "${_BUILD_ENV}" = "prod-enterprise" ]; then 
          npm run build-prod-enterprise;
        elif [ "${_BUILD_ENV}" = "prod-in" ]; then 
          npm run build-prod-in;
        elif [ "${_BUILD_ENV}" = "prod-eu" ]; then 
          npm run build-prod-eu;
        elif [ "${_BUILD_ENV}" = "prod-cn" ]; then 
          npm run build-prod-cn;
        elif [ "${_BUILD_ENV}" = "prod_beta" ]; then 
          npm run build-beta;
        else 
          npm run build-test;
        fi

  # Step 3: Update firebase.json dynamically
  - name: 'alpine'
    entrypoint: 'sh'
    args: ['-c', 'echo "Updating firebase.json with site ID..." && sed -i \'s/"site": ".*"/"site": "'"${_FIREBASE_SITE_ID}"'"/\' firebase.json']

  # Step 4: Validate the build directory contains index.html
  - name: 'alpine'
    entrypoint: 'sh'
    args: ['-c', 'echo "Checking if webplugin/build contains index.html..." && [ -f "webplugin/build/index.html" ] || { echo "Error: index.html not found in webplugin/build"; exit 1; } && echo "firebase.json exists, now validating its structure..." && [ -f "firebase.json" ] || { echo "Error: firebase.json file does not exist."; exit 1; }']

  # Step 5: Deploy to Firebase Hosting
  - name: 'gcr.io/$PROJECT_ID/firebase'
    args: ['deploy', '--only', 'hosting:${_FIREBASE_SITE_ID}', '--project', '${_FIREBASE_PROJECT_ID}', '--token', '${_FIREBASE_TOKEN}']

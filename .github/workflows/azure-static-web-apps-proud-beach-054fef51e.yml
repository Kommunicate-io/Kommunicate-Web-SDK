name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - reduce # Change this to your main branch if it's named differently
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - reduce

jobs:
  build_and_deploy_job:
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16' # Use the appropriate Node.js version for your project

      - name: Install dependencies
        run: npm install

      - name: Build based on environment
        run: |
          case "${{ secrets.BUILD_ENV }}" in
            "test") npm run build-test ;;
            "release") npm run build-release ;;
            "staging") npm run build-staging ;;
            "prod-beta") npm run build-beta ;;
            "prod") npm run build-prod ;;
            "prod-enterprise") npm run build-prod-enterprise ;;
            "prod-in") npm run build-prod-in ;;
            "prod-eu") npm run build-prod-eu ;;
            "prod-cn") npm run build-prod-cn ;;
            *) npm run build-test ;; # Default to build-test if no environment is specified
          esac

      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: "fb0b74bcbb3d3efc9c3fff1738300d5ff3a0848ecf6d586b9333e93c4d060c2c5-f93b1168-1784-4b4b-b7cd-01933351860001e178628"
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "/" # Location of your application source code
          api_location: "" # Set this to the path of your API if you have one
          output_location: "webplugin/build" # The build output directory
          app_build_command: "npm run build" # Specify the build command here if necessary
